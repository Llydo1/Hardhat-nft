{
  "0xf153756f2d56ecb6090ee68a94512b9ce588db285ed739b367696bd0b3cf59d3": {
    "name": "DynamicSvgNft",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "DynamicSvgNft",
      "sourceName": "contracts/DynamicSvgNft.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "lowSvg",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "highSvg",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "name": "DynamicSgvNft__TokenURINotFound",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "int256",
              "name": "highValue",
              "type": "int256"
            }
          ],
          "name": "NftMinted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getHighImageURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getPriceFeed",
          "outputs": [
            {
              "internalType": "contract AggregatorV3Interface",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTokenCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getlowImageURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "highValue",
              "type": "int256"
            }
          ],
          "name": "mintNft",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "s_tokenIdToHighValues",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "svg",
              "type": "string"
            }
          ],
          "name": "svgToImageURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x60a060405260006006553480156200001657600080fd5b5060405162003b4738038062003b4783398181016040528101906200003c9190620004e5565b6040518060400160405280600f81526020017f44796e616d696320535647204e465400000000000000000000000000000000008152506040518060400160405280600381526020017f44534e00000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000c0929190620003a0565b508060019080519060200190620000d9929190620003a0565b505050620000ed826200016e60201b60201c565b6007908051906020019062000104929190620003a0565b5062000116816200016e60201b60201c565b600890805190602001906200012d929190620003a0565b508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050506200093d565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525090506000620001e384604051602001620001c39190620005b6565b6040516020818303038152906040526200021260201b62000f3a1760201c565b90508181604051602001620001fa929190620005cf565b60405160208183030381529060405292505050919050565b606060008251141562000237576040518060200160405280600081525090506200039b565b600060405180606001604052806040815260200162003b0760409139905060006003600285516200026991906200066c565b620002759190620006c9565b600462000283919062000701565b905060006020826200029691906200066c565b67ffffffffffffffff811115620002b257620002b1620008cf565b5b6040519080825280601f01601f191660200182016040528015620002e55781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101562000356576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050620002f9565b60038951066001811462000373576002811462000384576200038f565b613d3d60f01b60028303526200038f565b603d60f81b60018303525b50505050508093505050505b919050565b828054620003ae90620007d6565b90600052602060002090601f016020900481019282620003d257600085556200041e565b82601f10620003ed57805160ff19168380011785556200041e565b828001600101855582156200041e579182015b828111156200041d57825182559160200191906001019062000400565b5b5090506200042d919062000431565b5090565b5b808211156200044c57600081600090555060010162000432565b5090565b600062000467620004618462000620565b620005f7565b90508281526020810184848401111562000486576200048562000903565b5b62000493848285620007a0565b509392505050565b600081519050620004ac8162000923565b92915050565b600082601f830112620004ca57620004c9620008fe565b5b8151620004dc84826020860162000450565b91505092915050565b6000806000606084860312156200050157620005006200090d565b5b600062000511868287016200049b565b935050602084015167ffffffffffffffff81111562000535576200053462000908565b5b6200054386828701620004b2565b925050604084015167ffffffffffffffff81111562000567576200056662000908565b5b6200057586828701620004b2565b9150509250925092565b60006200058c8262000656565b62000598818562000661565b9350620005aa818560208601620007a0565b80840191505092915050565b6000620005c482846200057f565b915081905092915050565b6000620005dd82856200057f565b9150620005eb82846200057f565b91508190509392505050565b60006200060362000616565b90506200061182826200080c565b919050565b6000604051905090565b600067ffffffffffffffff8211156200063e576200063d620008cf565b5b620006498262000912565b9050602081019050919050565b600081519050919050565b600081905092915050565b6000620006798262000796565b9150620006868362000796565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006be57620006bd62000842565b5b828201905092915050565b6000620006d68262000796565b9150620006e38362000796565b925082620006f657620006f562000871565b5b828204905092915050565b60006200070e8262000796565b91506200071b8362000796565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000757576200075662000842565b5b828202905092915050565b60006200076f8262000776565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620007c0578082015181840152602081019050620007a3565b83811115620007d0576000848401525b50505050565b60006002820490506001821680620007ef57607f821691505b60208210811415620008065762000805620008a0565b5b50919050565b620008178262000912565b810181811067ffffffffffffffff82111715620008395762000838620008cf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200092e8162000762565b81146200093a57600080fd5b50565b60805160601c6131a46200096360003960008181610ae00152610bc101526131a46000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636e02007d116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063d77843c51461038f578063e4e65b0c146103ad578063e985e9c5146103dd5761012c565b80636e02007d1461029d57806370a08231146102bb57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636bed54601461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190612119565b61040d565b604051610158919061267e565b60405180910390f35b6101696104ef565b60405161017691906126cf565b60405180910390f35b610199600480360381019061019491906121e9565b610581565b6040516101a69190612617565b60405180910390f35b6101c960048036038101906101c491906120d9565b6105c7565b005b6101e560048036038101906101e09190612173565b6106df565b005b61020160048036038101906101fc9190611fc3565b61075c565b005b61021d600480360381019061021891906121a0565b6107bc565b60405161022a91906126cf565b60405180910390f35b61024d60048036038101906102489190611fc3565b61084f565b005b610269600480360381019061026491906121e9565b61086f565b6040516102769190612617565b60405180910390f35b6102876108f6565b60405161029491906126cf565b60405180910390f35b6102a5610988565b6040516102b29190612851565b60405180910390f35b6102d560048036038101906102d09190611f56565b610992565b6040516102e29190612851565b60405180910390f35b6102f3610a4a565b60405161030091906126cf565b60405180910390f35b610311610adc565b60405161031e9190612699565b60405180910390f35b610341600480360381019061033c9190612099565b610b04565b005b61035d60048036038101906103589190612016565b610b1a565b005b610379600480360381019061037491906121e9565b610b7c565b60405161038691906126cf565b60405180910390f35b610397610dfc565b6040516103a491906126cf565b60405180910390f35b6103c760048036038101906103c291906121e9565b610e8e565b6040516103d491906126b4565b60405180910390f35b6103f760048036038101906103f29190611f83565b610ea6565b604051610404919061267e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110b3565b5b9050919050565b6060600080546104fe90612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90612b57565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c8261111d565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d28261086f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90612811565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611168565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611168565b610ea6565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612831565b60405180910390fd5b6106da8383611170565b505050565b806009600060065481526020019081526020016000208190555061070533600654611229565b6001600660008282546107189190612936565b925050819055506006547f25fe3a996149ce0f27840bd9ec024ac39e95985c0d3974c4fcaaed30903b56788260405161075191906126b4565b60405180910390a250565b61076d610767611168565b82611247565b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a3906126f1565b60405180910390fd5b6107b78383836112dc565b505050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006108228460405160200161080e919061258c565b604051602081830303815290604052610f3a565b905081816040516020016108379291906125a3565b60405160208183030381529060405292505050919050565b61086a83838360405180602001604052806000815250610b1a565b505050565b60008061087b836115d6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e4906127f1565b60405180910390fd5b80915050919050565b60606007805461090590612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461093190612b57565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b5050505050905090565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa906127b1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610a5990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8590612b57565b8015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b16610b0f611168565b8383611613565b5050565b610b2b610b25611168565b83611247565b610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906126f1565b60405180910390fd5b610b7684848484611780565b50505050565b6060610b87826117dc565b610bbd576040517ff565855900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612216565b505050915050600060078054610c7290612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90612b57565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905060096000858152602001908152602001600020548212610d9a5760088054610d1990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590612b57565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050505090505b610da261181d565b610dd3610dad6104ef565b83604051602001610dbf9291906125c7565b604051602081830303815290604052610f3a565b604051602001610de49291906125a3565b60405160208183030381529060405292505050919050565b606060088054610e0b90612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612b57565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b5050505050905090565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610f5d576040518060200160405280600081525090506110ae565b600060405180606001604052806040815260200161312f6040913990506000600360028551610f8c9190612936565b610f96919061298c565b6004610fa291906129bd565b90506000602082610fb39190612936565b67ffffffffffffffff811115610fcc57610fcb612c47565b5b6040519080825280601f01601f191660200182016040528015610ffe5781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561106d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050611012565b6003895106600181146110875760028114611097576110a2565b613d3d60f01b60028303526110a2565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611126816117dc565b611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c906127f1565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111e38361086f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61124382826040518060200160405280600081525061185a565b5050565b6000806112538361086f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061129557506112948185610ea6565b5b806112d357508373ffffffffffffffffffffffffffffffffffffffff166112bb84610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166112fc8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134990612731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990612771565b60405180910390fd5b6113cf83838360016118b5565b8273ffffffffffffffffffffffffffffffffffffffff166113ef8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c90612731565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115d183838360016119db565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167990612791565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611773919061267e565b60405180910390a3505050565b61178b8484846112dc565b611797848484846119e1565b6117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90612711565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117fe836115d6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6118648383611b78565b61187160008484846119e1565b6118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a790612711565b60405180910390fd5b505050565b60018111156119d557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119495780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119419190612a17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119d45780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119cc9190612936565b925050819055505b5b50505050565b50505050565b6000611a028473ffffffffffffffffffffffffffffffffffffffff16611d96565b15611b6b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a2b611168565b8786866040518563ffffffff1660e01b8152600401611a4d9493929190612632565b602060405180830381600087803b158015611a6757600080fd5b505af1925050508015611a9857506040513d601f19601f82011682018060405250810190611a959190612146565b60015b611b1b573d8060008114611ac8576040519150601f19603f3d011682016040523d82523d6000602084013e611acd565b606091505b50600081511415611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a90612711565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b70565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdf906127d1565b60405180910390fd5b611bf1816117dc565b15611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612751565b60405180910390fd5b611c3f6000838360016118b5565b611c48816117dc565b15611c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7f90612751565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d926000838360016119db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611dcc611dc784612891565b61286c565b905082815260208101848484011115611de857611de7612c7b565b5b611df3848285612b15565b509392505050565b6000611e0e611e09846128c2565b61286c565b905082815260208101848484011115611e2a57611e29612c7b565b5b611e35848285612b15565b509392505050565b600081359050611e4c816130a4565b92915050565b600081359050611e61816130bb565b92915050565b600081359050611e76816130d2565b92915050565b600081519050611e8b816130d2565b92915050565b600082601f830112611ea657611ea5612c76565b5b8135611eb6848260208601611db9565b91505092915050565b600081359050611ece816130e9565b92915050565b600081519050611ee3816130e9565b92915050565b600082601f830112611efe57611efd612c76565b5b8135611f0e848260208601611dfb565b91505092915050565b600081359050611f2681613100565b92915050565b600081519050611f3b81613100565b92915050565b600081519050611f5081613117565b92915050565b600060208284031215611f6c57611f6b612c85565b5b6000611f7a84828501611e3d565b91505092915050565b60008060408385031215611f9a57611f99612c85565b5b6000611fa885828601611e3d565b9250506020611fb985828601611e3d565b9150509250929050565b600080600060608486031215611fdc57611fdb612c85565b5b6000611fea86828701611e3d565b9350506020611ffb86828701611e3d565b925050604061200c86828701611f17565b9150509250925092565b600080600080608085870312156120305761202f612c85565b5b600061203e87828801611e3d565b945050602061204f87828801611e3d565b935050604061206087828801611f17565b925050606085013567ffffffffffffffff81111561208157612080612c80565b5b61208d87828801611e91565b91505092959194509250565b600080604083850312156120b0576120af612c85565b5b60006120be85828601611e3d565b92505060206120cf85828601611e52565b9150509250929050565b600080604083850312156120f0576120ef612c85565b5b60006120fe85828601611e3d565b925050602061210f85828601611f17565b9150509250929050565b60006020828403121561212f5761212e612c85565b5b600061213d84828501611e67565b91505092915050565b60006020828403121561215c5761215b612c85565b5b600061216a84828501611e7c565b91505092915050565b60006020828403121561218957612188612c85565b5b600061219784828501611ebf565b91505092915050565b6000602082840312156121b6576121b5612c85565b5b600082013567ffffffffffffffff8111156121d4576121d3612c80565b5b6121e084828501611ee9565b91505092915050565b6000602082840312156121ff576121fe612c85565b5b600061220d84828501611f17565b91505092915050565b600080600080600060a0868803121561223257612231612c85565b5b600061224088828901611f41565b955050602061225188828901611ed4565b945050604061226288828901611f2c565b935050606061227388828901611f2c565b925050608061228488828901611f41565b9150509295509295909350565b61229a81612a4b565b82525050565b6122a981612a5d565b82525050565b60006122ba826128f3565b6122c48185612909565b93506122d4818560208601612b24565b6122dd81612c8a565b840191505092915050565b6122f181612adf565b82525050565b61230081612a95565b82525050565b6000612311826128fe565b61231b818561291a565b935061232b818560208601612b24565b61233481612c8a565b840191505092915050565b600061234a826128fe565b612354818561292b565b9350612364818560208601612b24565b80840191505092915050565b600061237d602d8361291a565b915061238882612c9b565b604082019050919050565b60006123a060098361292b565b91506123ab82612cea565b600982019050919050565b60006123c360328361291a565b91506123ce82612d13565b604082019050919050565b60006123e660258361291a565b91506123f182612d62565b604082019050919050565b6000612409601c8361291a565b915061241482612db1565b602082019050919050565b600061242c60248361291a565b915061243782612dda565b604082019050919050565b600061244f60198361291a565b915061245a82612e29565b602082019050919050565b600061247260298361291a565b915061247d82612e52565b604082019050919050565b600061249560448361292b565b91506124a082612ea1565b604482019050919050565b60006124b860028361292b565b91506124c382612f16565b600282019050919050565b60006124db60208361291a565b91506124e682612f3f565b602082019050919050565b60006124fe60188361291a565b915061250982612f68565b602082019050919050565b600061252160218361291a565b915061252c82612f91565b604082019050919050565b6000612544603d8361291a565b915061254f82612fe0565b604082019050919050565b600061256760438361292b565b91506125728261302f565b604382019050919050565b61258681612abf565b82525050565b6000612598828461233f565b915081905092915050565b60006125af828561233f565b91506125bb828461233f565b91508190509392505050565b60006125d282612393565b91506125de828561233f565b91506125e982612488565b91506125f48261255a565b9150612600828461233f565b915061260b826124ab565b91508190509392505050565b600060208201905061262c6000830184612291565b92915050565b60006080820190506126476000830187612291565b6126546020830186612291565b612661604083018561257d565b818103606083015261267381846122af565b905095945050505050565b600060208201905061269360008301846122a0565b92915050565b60006020820190506126ae60008301846122e8565b92915050565b60006020820190506126c960008301846122f7565b92915050565b600060208201905081810360008301526126e98184612306565b905092915050565b6000602082019050818103600083015261270a81612370565b9050919050565b6000602082019050818103600083015261272a816123b6565b9050919050565b6000602082019050818103600083015261274a816123d9565b9050919050565b6000602082019050818103600083015261276a816123fc565b9050919050565b6000602082019050818103600083015261278a8161241f565b9050919050565b600060208201905081810360008301526127aa81612442565b9050919050565b600060208201905081810360008301526127ca81612465565b9050919050565b600060208201905081810360008301526127ea816124ce565b9050919050565b6000602082019050818103600083015261280a816124f1565b9050919050565b6000602082019050818103600083015261282a81612514565b9050919050565b6000602082019050818103600083015261284a81612537565b9050919050565b6000602082019050612866600083018461257d565b92915050565b6000612876612887565b90506128828282612b89565b919050565b6000604051905090565b600067ffffffffffffffff8211156128ac576128ab612c47565b5b6128b582612c8a565b9050602081019050919050565b600067ffffffffffffffff8211156128dd576128dc612c47565b5b6128e682612c8a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061294182612abf565b915061294c83612abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561298157612980612bba565b5b828201905092915050565b600061299782612abf565b91506129a283612abf565b9250826129b2576129b1612be9565b5b828204905092915050565b60006129c882612abf565b91506129d383612abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a0c57612a0b612bba565b5b828202905092915050565b6000612a2282612abf565b9150612a2d83612abf565b925082821015612a4057612a3f612bba565b5b828203905092915050565b6000612a5682612a9f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000612aea82612af1565b9050919050565b6000612afc82612b03565b9050919050565b6000612b0e82612a9f565b9050919050565b82818337600083830152505050565b60005b83811015612b42578082015181840152602081019050612b27565b83811115612b51576000848401525b50505050565b60006002820490506001821680612b6f57607f821691505b60208210811415612b8357612b82612c18565b5b50919050565b612b9282612c8a565b810181811067ffffffffffffffff82111715612bb157612bb0612c47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b6130ad81612a4b565b81146130b857600080fd5b50565b6130c481612a5d565b81146130cf57600080fd5b50565b6130db81612a69565b81146130e657600080fd5b50565b6130f281612a95565b81146130fd57600080fd5b50565b61310981612abf565b811461311457600080fd5b50565b61312081612ac9565b811461312b57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212202e00bf91f579284a99dfdab8f5e4717fadd331e1808d8c5e04ca5554c529ae1764736f6c634300080700334142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c80636e02007d116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063d77843c51461038f578063e4e65b0c146103ad578063e985e9c5146103dd5761012c565b80636e02007d1461029d57806370a08231146102bb57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636bed54601461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190612119565b61040d565b604051610158919061267e565b60405180910390f35b6101696104ef565b60405161017691906126cf565b60405180910390f35b610199600480360381019061019491906121e9565b610581565b6040516101a69190612617565b60405180910390f35b6101c960048036038101906101c491906120d9565b6105c7565b005b6101e560048036038101906101e09190612173565b6106df565b005b61020160048036038101906101fc9190611fc3565b61075c565b005b61021d600480360381019061021891906121a0565b6107bc565b60405161022a91906126cf565b60405180910390f35b61024d60048036038101906102489190611fc3565b61084f565b005b610269600480360381019061026491906121e9565b61086f565b6040516102769190612617565b60405180910390f35b6102876108f6565b60405161029491906126cf565b60405180910390f35b6102a5610988565b6040516102b29190612851565b60405180910390f35b6102d560048036038101906102d09190611f56565b610992565b6040516102e29190612851565b60405180910390f35b6102f3610a4a565b60405161030091906126cf565b60405180910390f35b610311610adc565b60405161031e9190612699565b60405180910390f35b610341600480360381019061033c9190612099565b610b04565b005b61035d60048036038101906103589190612016565b610b1a565b005b610379600480360381019061037491906121e9565b610b7c565b60405161038691906126cf565b60405180910390f35b610397610dfc565b6040516103a491906126cf565b60405180910390f35b6103c760048036038101906103c291906121e9565b610e8e565b6040516103d491906126b4565b60405180910390f35b6103f760048036038101906103f29190611f83565b610ea6565b604051610404919061267e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110b3565b5b9050919050565b6060600080546104fe90612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90612b57565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c8261111d565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d28261086f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90612811565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611168565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611168565b610ea6565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612831565b60405180910390fd5b6106da8383611170565b505050565b806009600060065481526020019081526020016000208190555061070533600654611229565b6001600660008282546107189190612936565b925050819055506006547f25fe3a996149ce0f27840bd9ec024ac39e95985c0d3974c4fcaaed30903b56788260405161075191906126b4565b60405180910390a250565b61076d610767611168565b82611247565b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a3906126f1565b60405180910390fd5b6107b78383836112dc565b505050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006108228460405160200161080e919061258c565b604051602081830303815290604052610f3a565b905081816040516020016108379291906125a3565b60405160208183030381529060405292505050919050565b61086a83838360405180602001604052806000815250610b1a565b505050565b60008061087b836115d6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e4906127f1565b60405180910390fd5b80915050919050565b60606007805461090590612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461093190612b57565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b5050505050905090565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa906127b1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610a5990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8590612b57565b8015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b16610b0f611168565b8383611613565b5050565b610b2b610b25611168565b83611247565b610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906126f1565b60405180910390fd5b610b7684848484611780565b50505050565b6060610b87826117dc565b610bbd576040517ff565855900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612216565b505050915050600060078054610c7290612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90612b57565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905060096000858152602001908152602001600020548212610d9a5760088054610d1990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590612b57565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050505090505b610da261181d565b610dd3610dad6104ef565b83604051602001610dbf9291906125c7565b604051602081830303815290604052610f3a565b604051602001610de49291906125a3565b60405160208183030381529060405292505050919050565b606060088054610e0b90612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612b57565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b5050505050905090565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610f5d576040518060200160405280600081525090506110ae565b600060405180606001604052806040815260200161312f6040913990506000600360028551610f8c9190612936565b610f96919061298c565b6004610fa291906129bd565b90506000602082610fb39190612936565b67ffffffffffffffff811115610fcc57610fcb612c47565b5b6040519080825280601f01601f191660200182016040528015610ffe5781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561106d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050611012565b6003895106600181146110875760028114611097576110a2565b613d3d60f01b60028303526110a2565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611126816117dc565b611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c906127f1565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111e38361086f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61124382826040518060200160405280600081525061185a565b5050565b6000806112538361086f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061129557506112948185610ea6565b5b806112d357508373ffffffffffffffffffffffffffffffffffffffff166112bb84610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166112fc8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134990612731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990612771565b60405180910390fd5b6113cf83838360016118b5565b8273ffffffffffffffffffffffffffffffffffffffff166113ef8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c90612731565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115d183838360016119db565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167990612791565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611773919061267e565b60405180910390a3505050565b61178b8484846112dc565b611797848484846119e1565b6117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90612711565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117fe836115d6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6118648383611b78565b61187160008484846119e1565b6118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a790612711565b60405180910390fd5b505050565b60018111156119d557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119495780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119419190612a17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119d45780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119cc9190612936565b925050819055505b5b50505050565b50505050565b6000611a028473ffffffffffffffffffffffffffffffffffffffff16611d96565b15611b6b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a2b611168565b8786866040518563ffffffff1660e01b8152600401611a4d9493929190612632565b602060405180830381600087803b158015611a6757600080fd5b505af1925050508015611a9857506040513d601f19601f82011682018060405250810190611a959190612146565b60015b611b1b573d8060008114611ac8576040519150601f19603f3d011682016040523d82523d6000602084013e611acd565b606091505b50600081511415611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a90612711565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b70565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdf906127d1565b60405180910390fd5b611bf1816117dc565b15611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612751565b60405180910390fd5b611c3f6000838360016118b5565b611c48816117dc565b15611c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7f90612751565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d926000838360016119db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611dcc611dc784612891565b61286c565b905082815260208101848484011115611de857611de7612c7b565b5b611df3848285612b15565b509392505050565b6000611e0e611e09846128c2565b61286c565b905082815260208101848484011115611e2a57611e29612c7b565b5b611e35848285612b15565b509392505050565b600081359050611e4c816130a4565b92915050565b600081359050611e61816130bb565b92915050565b600081359050611e76816130d2565b92915050565b600081519050611e8b816130d2565b92915050565b600082601f830112611ea657611ea5612c76565b5b8135611eb6848260208601611db9565b91505092915050565b600081359050611ece816130e9565b92915050565b600081519050611ee3816130e9565b92915050565b600082601f830112611efe57611efd612c76565b5b8135611f0e848260208601611dfb565b91505092915050565b600081359050611f2681613100565b92915050565b600081519050611f3b81613100565b92915050565b600081519050611f5081613117565b92915050565b600060208284031215611f6c57611f6b612c85565b5b6000611f7a84828501611e3d565b91505092915050565b60008060408385031215611f9a57611f99612c85565b5b6000611fa885828601611e3d565b9250506020611fb985828601611e3d565b9150509250929050565b600080600060608486031215611fdc57611fdb612c85565b5b6000611fea86828701611e3d565b9350506020611ffb86828701611e3d565b925050604061200c86828701611f17565b9150509250925092565b600080600080608085870312156120305761202f612c85565b5b600061203e87828801611e3d565b945050602061204f87828801611e3d565b935050604061206087828801611f17565b925050606085013567ffffffffffffffff81111561208157612080612c80565b5b61208d87828801611e91565b91505092959194509250565b600080604083850312156120b0576120af612c85565b5b60006120be85828601611e3d565b92505060206120cf85828601611e52565b9150509250929050565b600080604083850312156120f0576120ef612c85565b5b60006120fe85828601611e3d565b925050602061210f85828601611f17565b9150509250929050565b60006020828403121561212f5761212e612c85565b5b600061213d84828501611e67565b91505092915050565b60006020828403121561215c5761215b612c85565b5b600061216a84828501611e7c565b91505092915050565b60006020828403121561218957612188612c85565b5b600061219784828501611ebf565b91505092915050565b6000602082840312156121b6576121b5612c85565b5b600082013567ffffffffffffffff8111156121d4576121d3612c80565b5b6121e084828501611ee9565b91505092915050565b6000602082840312156121ff576121fe612c85565b5b600061220d84828501611f17565b91505092915050565b600080600080600060a0868803121561223257612231612c85565b5b600061224088828901611f41565b955050602061225188828901611ed4565b945050604061226288828901611f2c565b935050606061227388828901611f2c565b925050608061228488828901611f41565b9150509295509295909350565b61229a81612a4b565b82525050565b6122a981612a5d565b82525050565b60006122ba826128f3565b6122c48185612909565b93506122d4818560208601612b24565b6122dd81612c8a565b840191505092915050565b6122f181612adf565b82525050565b61230081612a95565b82525050565b6000612311826128fe565b61231b818561291a565b935061232b818560208601612b24565b61233481612c8a565b840191505092915050565b600061234a826128fe565b612354818561292b565b9350612364818560208601612b24565b80840191505092915050565b600061237d602d8361291a565b915061238882612c9b565b604082019050919050565b60006123a060098361292b565b91506123ab82612cea565b600982019050919050565b60006123c360328361291a565b91506123ce82612d13565b604082019050919050565b60006123e660258361291a565b91506123f182612d62565b604082019050919050565b6000612409601c8361291a565b915061241482612db1565b602082019050919050565b600061242c60248361291a565b915061243782612dda565b604082019050919050565b600061244f60198361291a565b915061245a82612e29565b602082019050919050565b600061247260298361291a565b915061247d82612e52565b604082019050919050565b600061249560448361292b565b91506124a082612ea1565b604482019050919050565b60006124b860028361292b565b91506124c382612f16565b600282019050919050565b60006124db60208361291a565b91506124e682612f3f565b602082019050919050565b60006124fe60188361291a565b915061250982612f68565b602082019050919050565b600061252160218361291a565b915061252c82612f91565b604082019050919050565b6000612544603d8361291a565b915061254f82612fe0565b604082019050919050565b600061256760438361292b565b91506125728261302f565b604382019050919050565b61258681612abf565b82525050565b6000612598828461233f565b915081905092915050565b60006125af828561233f565b91506125bb828461233f565b91508190509392505050565b60006125d282612393565b91506125de828561233f565b91506125e982612488565b91506125f48261255a565b9150612600828461233f565b915061260b826124ab565b91508190509392505050565b600060208201905061262c6000830184612291565b92915050565b60006080820190506126476000830187612291565b6126546020830186612291565b612661604083018561257d565b818103606083015261267381846122af565b905095945050505050565b600060208201905061269360008301846122a0565b92915050565b60006020820190506126ae60008301846122e8565b92915050565b60006020820190506126c960008301846122f7565b92915050565b600060208201905081810360008301526126e98184612306565b905092915050565b6000602082019050818103600083015261270a81612370565b9050919050565b6000602082019050818103600083015261272a816123b6565b9050919050565b6000602082019050818103600083015261274a816123d9565b9050919050565b6000602082019050818103600083015261276a816123fc565b9050919050565b6000602082019050818103600083015261278a8161241f565b9050919050565b600060208201905081810360008301526127aa81612442565b9050919050565b600060208201905081810360008301526127ca81612465565b9050919050565b600060208201905081810360008301526127ea816124ce565b9050919050565b6000602082019050818103600083015261280a816124f1565b9050919050565b6000602082019050818103600083015261282a81612514565b9050919050565b6000602082019050818103600083015261284a81612537565b9050919050565b6000602082019050612866600083018461257d565b92915050565b6000612876612887565b90506128828282612b89565b919050565b6000604051905090565b600067ffffffffffffffff8211156128ac576128ab612c47565b5b6128b582612c8a565b9050602081019050919050565b600067ffffffffffffffff8211156128dd576128dc612c47565b5b6128e682612c8a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061294182612abf565b915061294c83612abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561298157612980612bba565b5b828201905092915050565b600061299782612abf565b91506129a283612abf565b9250826129b2576129b1612be9565b5b828204905092915050565b60006129c882612abf565b91506129d383612abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a0c57612a0b612bba565b5b828202905092915050565b6000612a2282612abf565b9150612a2d83612abf565b925082821015612a4057612a3f612bba565b5b828203905092915050565b6000612a5682612a9f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000612aea82612af1565b9050919050565b6000612afc82612b03565b9050919050565b6000612b0e82612a9f565b9050919050565b82818337600083830152505050565b60005b83811015612b42578082015181840152602081019050612b27565b83811115612b51576000848401525b50505050565b60006002820490506001821680612b6f57607f821691505b60208210811415612b8357612b82612c18565b5b50919050565b612b9282612c8a565b810181811067ffffffffffffffff82111715612bb157612bb0612c47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b6130ad81612a4b565b81146130b857600080fd5b50565b6130c481612a5d565b81146130cf57600080fd5b50565b6130db81612a69565b81146130e657600080fd5b50565b6130f281612a95565b81146130fd57600080fd5b50565b61310981612abf565b811461311457600080fd5b50565b61312081612ac9565b811461312b57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212202e00bf91f579284a99dfdab8f5e4717fadd331e1808d8c5e04ca5554c529ae1764736f6c63430008070033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_1333": {
              "entryPoint": null,
              "id": 1333,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_4169": {
              "entryPoint": null,
              "id": 4169,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@encode_3982": {
              "entryPoint": 530,
              "id": 3982,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@svgToImageURI_4233": {
              "entryPoint": 366,
              "id": 4233,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_string_memory_ptr_fromMemory": {
              "entryPoint": 1104,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_t_address_fromMemory": {
              "entryPoint": 1179,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_string_memory_ptr_fromMemory": {
              "entryPoint": 1202,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
              "entryPoint": 1253,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 1407,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 1462,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 1487,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "allocate_memory": {
              "entryPoint": 1527,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": 1558,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_allocation_size_t_string_memory_ptr": {
              "entryPoint": 1568,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 1622,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 1633,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 1644,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 1737,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 1793,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 1890,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 1910,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 1942,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_memory_to_memory": {
              "entryPoint": 1952,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 2006,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "finalize_allocation": {
              "entryPoint": 2060,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "panic_error_0x11": {
              "entryPoint": 2114,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x12": {
              "entryPoint": 2161,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 2208,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 2255,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
              "entryPoint": 2302,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
              "entryPoint": 2307,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": 2312,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 2317,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 2322,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "validator_revert_t_address": {
              "entryPoint": 2339,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:7435:22",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "102:326:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "112:75:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "179:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "137:41:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "137:49:22"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "121:15:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "121:66:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "112:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "203:5:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "210:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "196:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "196:21:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "196:21:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "226:27:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "241:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "248:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "237:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "237:16:22"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "230:3:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "291:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                    "nodeType": "YulIdentifier",
                                    "src": "293:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "293:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "293:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "272:3:22"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "277:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "268:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "268:16:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "286:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "265:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "265:25:22"
                          },
                          "nodeType": "YulIf",
                          "src": "262:112:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "405:3:22"
                              },
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "410:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "415:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "383:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "383:39:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "383:39:22"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "75:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "80:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "88:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "96:5:22",
                        "type": ""
                      }
                    ],
                    "src": "7:421:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "497:80:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "507:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "522:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "516:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "516:13:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "507:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "565:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "538:26:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "538:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "538:33:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "475:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "483:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "491:5:22",
                        "type": ""
                      }
                    ],
                    "src": "434:143:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "670:282:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "719:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "721:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "721:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "721:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "698:6:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "706:4:22",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "694:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "694:17:22"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "713:3:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "690:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "690:27:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "683:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "683:35:22"
                          },
                          "nodeType": "YulIf",
                          "src": "680:122:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "811:27:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "831:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "825:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "825:13:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "815:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "847:99:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "919:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "927:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "915:17:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "934:6:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "942:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "856:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "856:90:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "847:5:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_string_memory_ptr_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "648:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "656:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "664:5:22",
                        "type": ""
                      }
                    ],
                    "src": "597:355:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1089:878:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1135:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "1137:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1137:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1137:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1119:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1106:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1106:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1131:2:22",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1102:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1102:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "1099:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1228:128:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1243:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1257:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1247:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1272:74:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1318:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1329:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1314:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1314:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1338:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1282:31:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1282:64:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1366:292:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1381:39:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1405:9:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1416:2:22",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1401:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1401:18:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1395:5:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1395:25:22"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1385:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1467:83:22",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "1469:77:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1469:79:22"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1469:79:22"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1439:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1447:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1436:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1436:30:22"
                              },
                              "nodeType": "YulIf",
                              "src": "1433:117:22"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1564:84:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1620:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1631:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1616:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1616:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1640:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1574:41:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1574:74:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1564:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1668:292:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1683:39:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1707:9:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1718:2:22",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1703:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1703:18:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1697:5:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1697:25:22"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1687:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1769:83:22",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "1771:77:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1771:79:22"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1771:79:22"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1741:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1749:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1738:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1738:30:22"
                              },
                              "nodeType": "YulIf",
                              "src": "1735:117:22"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1866:84:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1922:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1933:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1918:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1918:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1942:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1876:41:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1876:74:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1866:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1043:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1054:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1066:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1074:6:22",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1082:6:22",
                        "type": ""
                      }
                    ],
                    "src": "958:1009:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2083:267:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2093:53:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2140:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "2107:32:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2107:39:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "2097:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2155:96:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2239:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2244:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "2162:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2162:89:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2155:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2286:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2293:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2282:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2282:16:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2300:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2305:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "2260:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2260:52:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2260:52:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2321:23:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2332:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2337:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2328:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2328:16:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2321:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2064:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2071:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2079:3:22",
                        "type": ""
                      }
                    ],
                    "src": "1973:377:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2492:139:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2503:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2592:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2601:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "2510:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2510:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2503:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2615:10:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2622:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2615:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2471:3:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2477:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2488:3:22",
                        "type": ""
                      }
                    ],
                    "src": "2356:275:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2821:251:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2832:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2921:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2930:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "2839:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2839:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2832:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2944:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3033:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3042:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "2951:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2951:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2944:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3056:10:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3063:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3056:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2792:3:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2798:6:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2806:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2817:3:22",
                        "type": ""
                      }
                    ],
                    "src": "2637:435:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3119:88:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3129:30:22",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "allocate_unbounded",
                              "nodeType": "YulIdentifier",
                              "src": "3139:18:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3139:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3129:6:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3188:6:22"
                              },
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "3196:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "finalize_allocation",
                              "nodeType": "YulIdentifier",
                              "src": "3168:19:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3168:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3168:33:22"
                        }
                      ]
                    },
                    "name": "allocate_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "3103:4:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "3112:6:22",
                        "type": ""
                      }
                    ],
                    "src": "3078:129:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3253:35:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3263:19:22",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3279:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3273:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3273:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3263:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "3246:6:22",
                        "type": ""
                      }
                    ],
                    "src": "3213:75:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3361:241:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3466:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "3468:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3468:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3468:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3438:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3446:18:22",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3435:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3435:30:22"
                          },
                          "nodeType": "YulIf",
                          "src": "3432:56:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3498:37:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3528:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "3506:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3506:29:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "3498:4:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3572:23:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "3584:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3590:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3580:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3580:15:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "3572:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3345:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "3356:4:22",
                        "type": ""
                      }
                    ],
                    "src": "3294:308:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3667:40:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3678:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3694:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3688:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3688:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3678:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3650:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3660:6:22",
                        "type": ""
                      }
                    ],
                    "src": "3608:99:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3827:34:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3837:18:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3852:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "3837:11:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "3799:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "3804:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "3815:11:22",
                        "type": ""
                      }
                    ],
                    "src": "3713:148:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3911:261:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3921:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3944:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3926:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3926:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "3921:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3955:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3978:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3960:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3960:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "3955:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4118:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4120:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4120:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4120:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4039:1:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4046:66:22",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4114:1:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4042:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4042:74:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4036:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4036:81:22"
                          },
                          "nodeType": "YulIf",
                          "src": "4033:107:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4150:16:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4161:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4164:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4157:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4157:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "4150:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "3898:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "3901:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "3907:3:22",
                        "type": ""
                      }
                    ],
                    "src": "3867:305:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4220:143:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4230:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4253:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4235:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4235:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "4230:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4264:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4287:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4269:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4269:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "4264:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4311:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4313:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4313:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4313:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4308:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4301:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4301:9:22"
                          },
                          "nodeType": "YulIf",
                          "src": "4298:35:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4343:14:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4352:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4355:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4348:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4348:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4343:1:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "4209:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "4212:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "4218:1:22",
                        "type": ""
                      }
                    ],
                    "src": "4178:185:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4417:300:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4427:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4450:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4432:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4432:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "4427:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4461:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4484:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4466:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4466:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "4461:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4659:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4661:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4661:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4661:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "4571:1:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4564:6:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4564:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4557:6:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4557:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4579:1:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4586:66:22",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "4654:1:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "4582:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4582:74:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4576:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4576:81:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4553:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4553:105:22"
                          },
                          "nodeType": "YulIf",
                          "src": "4550:131:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4691:20:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4706:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4709:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "4702:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4702:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "4691:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "4400:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "4403:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "4409:7:22",
                        "type": ""
                      }
                    ],
                    "src": "4369:348:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4768:51:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4778:35:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4807:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "4789:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4789:24:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "4778:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4750:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "4760:7:22",
                        "type": ""
                      }
                    ],
                    "src": "4723:96:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4870:81:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4880:65:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4895:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4902:42:22",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4891:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4891:54:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "4880:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4852:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "4862:7:22",
                        "type": ""
                      }
                    ],
                    "src": "4825:126:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5002:32:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5012:16:22",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5023:5:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "5012:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4984:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "4994:7:22",
                        "type": ""
                      }
                    ],
                    "src": "4957:77:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5089:258:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5099:10:22",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5108:1:22",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "5103:1:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5168:63:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "5193:3:22"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5198:1:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5189:3:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5189:11:22"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "5212:3:22"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "5217:1:22"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5208:3:22"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5208:11:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5202:5:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5202:18:22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "5182:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5182:39:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5182:39:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "5129:1:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5132:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "5126:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5126:13:22"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "5140:19:22",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "5142:15:22",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5151:1:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5154:2:22",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5147:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5147:10:22"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5142:1:22"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "5122:3:22",
                            "statements": []
                          },
                          "src": "5118:113:22"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5265:76:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "5315:3:22"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "5320:6:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5311:3:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5311:16:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5329:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "5304:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5304:27:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5304:27:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "5246:1:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5249:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5243:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5243:13:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5240:101:22"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "5071:3:22",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "5076:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5081:6:22",
                        "type": ""
                      }
                    ],
                    "src": "5040:307:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5404:269:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5414:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "5428:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5434:1:22",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "5424:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5424:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5414:6:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5445:38:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "5475:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5481:1:22",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5471:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5471:12:22"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "5449:18:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5522:51:22",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "5536:27:22",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5550:6:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5558:4:22",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "5546:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5546:17:22"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5536:6:22"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "5502:18:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5495:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5495:26:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5492:81:22"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5625:42:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "5639:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5639:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5639:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "5589:18:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5612:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5620:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5609:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5609:14:22"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "5586:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5586:38:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5583:84:22"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "5388:4:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5397:6:22",
                        "type": ""
                      }
                    ],
                    "src": "5353:320:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5722:238:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5732:58:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5754:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5784:4:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "5762:21:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5762:27:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5750:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5750:40:22"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "5736:10:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5901:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "5903:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5903:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5903:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5844:10:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5856:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5841:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5841:34:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5880:10:22"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5892:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5877:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5877:22:22"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "5838:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5838:62:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5835:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5939:2:22",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "5943:10:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5932:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5932:22:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5932:22:22"
                        }
                      ]
                    },
                    "name": "finalize_allocation",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "5708:6:22",
                        "type": ""
                      },
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5716:4:22",
                        "type": ""
                      }
                    ],
                    "src": "5679:281:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5994:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6011:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6014:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6004:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6004:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6004:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6108:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6111:4:22",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6101:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6101:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6101:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6132:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6135:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6125:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6125:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6125:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5966:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6180:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6197:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6200:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6190:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6190:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6190:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6294:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6297:4:22",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6287:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6287:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6287:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6318:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6321:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6311:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6311:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6311:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x12",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6152:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6366:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6383:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6386:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6376:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6376:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6376:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6480:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6483:4:22",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6473:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6473:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6473:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6504:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6507:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6497:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6497:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6497:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6338:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6552:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6569:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6572:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6562:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6562:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6562:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6666:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6669:4:22",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6659:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6659:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6659:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6690:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6693:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6683:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6683:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6683:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6524:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6799:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6816:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6819:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6809:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6809:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6809:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6710:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6922:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6939:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6942:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6932:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6932:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6932:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6833:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7045:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7062:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7065:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "7055:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7055:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7055:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6956:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7168:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7185:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7188:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "7178:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7178:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7178:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "7079:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7250:54:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7260:38:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7278:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7285:2:22",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7274:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7274:14:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7294:2:22",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7290:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7290:7:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7270:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7270:28:22"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "7260:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "7233:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "7243:6:22",
                        "type": ""
                      }
                    ],
                    "src": "7202:102:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7353:79:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7410:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7419:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7422:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "7412:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7412:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7412:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7376:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7401:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7383:17:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7383:24:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "7373:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7373:35:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7366:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7366:43:22"
                          },
                          "nodeType": "YulIf",
                          "src": "7363:63:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "7346:5:22",
                        "type": ""
                      }
                    ],
                    "src": "7310:122:22"
                  }
                ]
              },
              "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
              "id": 22,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60a060405260006006553480156200001657600080fd5b5060405162003b4738038062003b4783398181016040528101906200003c9190620004e5565b6040518060400160405280600f81526020017f44796e616d696320535647204e465400000000000000000000000000000000008152506040518060400160405280600381526020017f44534e00000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000c0929190620003a0565b508060019080519060200190620000d9929190620003a0565b505050620000ed826200016e60201b60201c565b6007908051906020019062000104929190620003a0565b5062000116816200016e60201b60201c565b600890805190602001906200012d929190620003a0565b508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050506200093d565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525090506000620001e384604051602001620001c39190620005b6565b6040516020818303038152906040526200021260201b62000f3a1760201c565b90508181604051602001620001fa929190620005cf565b60405160208183030381529060405292505050919050565b606060008251141562000237576040518060200160405280600081525090506200039b565b600060405180606001604052806040815260200162003b0760409139905060006003600285516200026991906200066c565b620002759190620006c9565b600462000283919062000701565b905060006020826200029691906200066c565b67ffffffffffffffff811115620002b257620002b1620008cf565b5b6040519080825280601f01601f191660200182016040528015620002e55781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101562000356576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050620002f9565b60038951066001811462000373576002811462000384576200038f565b613d3d60f01b60028303526200038f565b603d60f81b60018303525b50505050508093505050505b919050565b828054620003ae90620007d6565b90600052602060002090601f016020900481019282620003d257600085556200041e565b82601f10620003ed57805160ff19168380011785556200041e565b828001600101855582156200041e579182015b828111156200041d57825182559160200191906001019062000400565b5b5090506200042d919062000431565b5090565b5b808211156200044c57600081600090555060010162000432565b5090565b600062000467620004618462000620565b620005f7565b90508281526020810184848401111562000486576200048562000903565b5b62000493848285620007a0565b509392505050565b600081519050620004ac8162000923565b92915050565b600082601f830112620004ca57620004c9620008fe565b5b8151620004dc84826020860162000450565b91505092915050565b6000806000606084860312156200050157620005006200090d565b5b600062000511868287016200049b565b935050602084015167ffffffffffffffff81111562000535576200053462000908565b5b6200054386828701620004b2565b925050604084015167ffffffffffffffff81111562000567576200056662000908565b5b6200057586828701620004b2565b9150509250925092565b60006200058c8262000656565b62000598818562000661565b9350620005aa818560208601620007a0565b80840191505092915050565b6000620005c482846200057f565b915081905092915050565b6000620005dd82856200057f565b9150620005eb82846200057f565b91508190509392505050565b60006200060362000616565b90506200061182826200080c565b919050565b6000604051905090565b600067ffffffffffffffff8211156200063e576200063d620008cf565b5b620006498262000912565b9050602081019050919050565b600081519050919050565b600081905092915050565b6000620006798262000796565b9150620006868362000796565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006be57620006bd62000842565b5b828201905092915050565b6000620006d68262000796565b9150620006e38362000796565b925082620006f657620006f562000871565b5b828204905092915050565b60006200070e8262000796565b91506200071b8362000796565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000757576200075662000842565b5b828202905092915050565b60006200076f8262000776565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620007c0578082015181840152602081019050620007a3565b83811115620007d0576000848401525b50505050565b60006002820490506001821680620007ef57607f821691505b60208210811415620008065762000805620008a0565b5b50919050565b620008178262000912565b810181811067ffffffffffffffff82111715620008395762000838620008cf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200092e8162000762565b81146200093a57600080fd5b50565b60805160601c6131a46200096360003960008181610ae00152610bc101526131a46000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636e02007d116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063d77843c51461038f578063e4e65b0c146103ad578063e985e9c5146103dd5761012c565b80636e02007d1461029d57806370a08231146102bb57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636bed54601461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190612119565b61040d565b604051610158919061267e565b60405180910390f35b6101696104ef565b60405161017691906126cf565b60405180910390f35b610199600480360381019061019491906121e9565b610581565b6040516101a69190612617565b60405180910390f35b6101c960048036038101906101c491906120d9565b6105c7565b005b6101e560048036038101906101e09190612173565b6106df565b005b61020160048036038101906101fc9190611fc3565b61075c565b005b61021d600480360381019061021891906121a0565b6107bc565b60405161022a91906126cf565b60405180910390f35b61024d60048036038101906102489190611fc3565b61084f565b005b610269600480360381019061026491906121e9565b61086f565b6040516102769190612617565b60405180910390f35b6102876108f6565b60405161029491906126cf565b60405180910390f35b6102a5610988565b6040516102b29190612851565b60405180910390f35b6102d560048036038101906102d09190611f56565b610992565b6040516102e29190612851565b60405180910390f35b6102f3610a4a565b60405161030091906126cf565b60405180910390f35b610311610adc565b60405161031e9190612699565b60405180910390f35b610341600480360381019061033c9190612099565b610b04565b005b61035d60048036038101906103589190612016565b610b1a565b005b610379600480360381019061037491906121e9565b610b7c565b60405161038691906126cf565b60405180910390f35b610397610dfc565b6040516103a491906126cf565b60405180910390f35b6103c760048036038101906103c291906121e9565b610e8e565b6040516103d491906126b4565b60405180910390f35b6103f760048036038101906103f29190611f83565b610ea6565b604051610404919061267e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110b3565b5b9050919050565b6060600080546104fe90612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90612b57565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c8261111d565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d28261086f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90612811565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611168565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611168565b610ea6565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612831565b60405180910390fd5b6106da8383611170565b505050565b806009600060065481526020019081526020016000208190555061070533600654611229565b6001600660008282546107189190612936565b925050819055506006547f25fe3a996149ce0f27840bd9ec024ac39e95985c0d3974c4fcaaed30903b56788260405161075191906126b4565b60405180910390a250565b61076d610767611168565b82611247565b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a3906126f1565b60405180910390fd5b6107b78383836112dc565b505050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006108228460405160200161080e919061258c565b604051602081830303815290604052610f3a565b905081816040516020016108379291906125a3565b60405160208183030381529060405292505050919050565b61086a83838360405180602001604052806000815250610b1a565b505050565b60008061087b836115d6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e4906127f1565b60405180910390fd5b80915050919050565b60606007805461090590612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461093190612b57565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b5050505050905090565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa906127b1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610a5990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8590612b57565b8015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b16610b0f611168565b8383611613565b5050565b610b2b610b25611168565b83611247565b610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906126f1565b60405180910390fd5b610b7684848484611780565b50505050565b6060610b87826117dc565b610bbd576040517ff565855900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612216565b505050915050600060078054610c7290612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90612b57565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905060096000858152602001908152602001600020548212610d9a5760088054610d1990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590612b57565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050505090505b610da261181d565b610dd3610dad6104ef565b83604051602001610dbf9291906125c7565b604051602081830303815290604052610f3a565b604051602001610de49291906125a3565b60405160208183030381529060405292505050919050565b606060088054610e0b90612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612b57565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b5050505050905090565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610f5d576040518060200160405280600081525090506110ae565b600060405180606001604052806040815260200161312f6040913990506000600360028551610f8c9190612936565b610f96919061298c565b6004610fa291906129bd565b90506000602082610fb39190612936565b67ffffffffffffffff811115610fcc57610fcb612c47565b5b6040519080825280601f01601f191660200182016040528015610ffe5781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561106d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050611012565b6003895106600181146110875760028114611097576110a2565b613d3d60f01b60028303526110a2565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611126816117dc565b611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c906127f1565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111e38361086f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61124382826040518060200160405280600081525061185a565b5050565b6000806112538361086f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061129557506112948185610ea6565b5b806112d357508373ffffffffffffffffffffffffffffffffffffffff166112bb84610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166112fc8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134990612731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990612771565b60405180910390fd5b6113cf83838360016118b5565b8273ffffffffffffffffffffffffffffffffffffffff166113ef8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c90612731565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115d183838360016119db565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167990612791565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611773919061267e565b60405180910390a3505050565b61178b8484846112dc565b611797848484846119e1565b6117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90612711565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117fe836115d6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6118648383611b78565b61187160008484846119e1565b6118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a790612711565b60405180910390fd5b505050565b60018111156119d557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119495780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119419190612a17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119d45780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119cc9190612936565b925050819055505b5b50505050565b50505050565b6000611a028473ffffffffffffffffffffffffffffffffffffffff16611d96565b15611b6b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a2b611168565b8786866040518563ffffffff1660e01b8152600401611a4d9493929190612632565b602060405180830381600087803b158015611a6757600080fd5b505af1925050508015611a9857506040513d601f19601f82011682018060405250810190611a959190612146565b60015b611b1b573d8060008114611ac8576040519150601f19603f3d011682016040523d82523d6000602084013e611acd565b606091505b50600081511415611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a90612711565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b70565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdf906127d1565b60405180910390fd5b611bf1816117dc565b15611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612751565b60405180910390fd5b611c3f6000838360016118b5565b611c48816117dc565b15611c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7f90612751565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d926000838360016119db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611dcc611dc784612891565b61286c565b905082815260208101848484011115611de857611de7612c7b565b5b611df3848285612b15565b509392505050565b6000611e0e611e09846128c2565b61286c565b905082815260208101848484011115611e2a57611e29612c7b565b5b611e35848285612b15565b509392505050565b600081359050611e4c816130a4565b92915050565b600081359050611e61816130bb565b92915050565b600081359050611e76816130d2565b92915050565b600081519050611e8b816130d2565b92915050565b600082601f830112611ea657611ea5612c76565b5b8135611eb6848260208601611db9565b91505092915050565b600081359050611ece816130e9565b92915050565b600081519050611ee3816130e9565b92915050565b600082601f830112611efe57611efd612c76565b5b8135611f0e848260208601611dfb565b91505092915050565b600081359050611f2681613100565b92915050565b600081519050611f3b81613100565b92915050565b600081519050611f5081613117565b92915050565b600060208284031215611f6c57611f6b612c85565b5b6000611f7a84828501611e3d565b91505092915050565b60008060408385031215611f9a57611f99612c85565b5b6000611fa885828601611e3d565b9250506020611fb985828601611e3d565b9150509250929050565b600080600060608486031215611fdc57611fdb612c85565b5b6000611fea86828701611e3d565b9350506020611ffb86828701611e3d565b925050604061200c86828701611f17565b9150509250925092565b600080600080608085870312156120305761202f612c85565b5b600061203e87828801611e3d565b945050602061204f87828801611e3d565b935050604061206087828801611f17565b925050606085013567ffffffffffffffff81111561208157612080612c80565b5b61208d87828801611e91565b91505092959194509250565b600080604083850312156120b0576120af612c85565b5b60006120be85828601611e3d565b92505060206120cf85828601611e52565b9150509250929050565b600080604083850312156120f0576120ef612c85565b5b60006120fe85828601611e3d565b925050602061210f85828601611f17565b9150509250929050565b60006020828403121561212f5761212e612c85565b5b600061213d84828501611e67565b91505092915050565b60006020828403121561215c5761215b612c85565b5b600061216a84828501611e7c565b91505092915050565b60006020828403121561218957612188612c85565b5b600061219784828501611ebf565b91505092915050565b6000602082840312156121b6576121b5612c85565b5b600082013567ffffffffffffffff8111156121d4576121d3612c80565b5b6121e084828501611ee9565b91505092915050565b6000602082840312156121ff576121fe612c85565b5b600061220d84828501611f17565b91505092915050565b600080600080600060a0868803121561223257612231612c85565b5b600061224088828901611f41565b955050602061225188828901611ed4565b945050604061226288828901611f2c565b935050606061227388828901611f2c565b925050608061228488828901611f41565b9150509295509295909350565b61229a81612a4b565b82525050565b6122a981612a5d565b82525050565b60006122ba826128f3565b6122c48185612909565b93506122d4818560208601612b24565b6122dd81612c8a565b840191505092915050565b6122f181612adf565b82525050565b61230081612a95565b82525050565b6000612311826128fe565b61231b818561291a565b935061232b818560208601612b24565b61233481612c8a565b840191505092915050565b600061234a826128fe565b612354818561292b565b9350612364818560208601612b24565b80840191505092915050565b600061237d602d8361291a565b915061238882612c9b565b604082019050919050565b60006123a060098361292b565b91506123ab82612cea565b600982019050919050565b60006123c360328361291a565b91506123ce82612d13565b604082019050919050565b60006123e660258361291a565b91506123f182612d62565b604082019050919050565b6000612409601c8361291a565b915061241482612db1565b602082019050919050565b600061242c60248361291a565b915061243782612dda565b604082019050919050565b600061244f60198361291a565b915061245a82612e29565b602082019050919050565b600061247260298361291a565b915061247d82612e52565b604082019050919050565b600061249560448361292b565b91506124a082612ea1565b604482019050919050565b60006124b860028361292b565b91506124c382612f16565b600282019050919050565b60006124db60208361291a565b91506124e682612f3f565b602082019050919050565b60006124fe60188361291a565b915061250982612f68565b602082019050919050565b600061252160218361291a565b915061252c82612f91565b604082019050919050565b6000612544603d8361291a565b915061254f82612fe0565b604082019050919050565b600061256760438361292b565b91506125728261302f565b604382019050919050565b61258681612abf565b82525050565b6000612598828461233f565b915081905092915050565b60006125af828561233f565b91506125bb828461233f565b91508190509392505050565b60006125d282612393565b91506125de828561233f565b91506125e982612488565b91506125f48261255a565b9150612600828461233f565b915061260b826124ab565b91508190509392505050565b600060208201905061262c6000830184612291565b92915050565b60006080820190506126476000830187612291565b6126546020830186612291565b612661604083018561257d565b818103606083015261267381846122af565b905095945050505050565b600060208201905061269360008301846122a0565b92915050565b60006020820190506126ae60008301846122e8565b92915050565b60006020820190506126c960008301846122f7565b92915050565b600060208201905081810360008301526126e98184612306565b905092915050565b6000602082019050818103600083015261270a81612370565b9050919050565b6000602082019050818103600083015261272a816123b6565b9050919050565b6000602082019050818103600083015261274a816123d9565b9050919050565b6000602082019050818103600083015261276a816123fc565b9050919050565b6000602082019050818103600083015261278a8161241f565b9050919050565b600060208201905081810360008301526127aa81612442565b9050919050565b600060208201905081810360008301526127ca81612465565b9050919050565b600060208201905081810360008301526127ea816124ce565b9050919050565b6000602082019050818103600083015261280a816124f1565b9050919050565b6000602082019050818103600083015261282a81612514565b9050919050565b6000602082019050818103600083015261284a81612537565b9050919050565b6000602082019050612866600083018461257d565b92915050565b6000612876612887565b90506128828282612b89565b919050565b6000604051905090565b600067ffffffffffffffff8211156128ac576128ab612c47565b5b6128b582612c8a565b9050602081019050919050565b600067ffffffffffffffff8211156128dd576128dc612c47565b5b6128e682612c8a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061294182612abf565b915061294c83612abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561298157612980612bba565b5b828201905092915050565b600061299782612abf565b91506129a283612abf565b9250826129b2576129b1612be9565b5b828204905092915050565b60006129c882612abf565b91506129d383612abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a0c57612a0b612bba565b5b828202905092915050565b6000612a2282612abf565b9150612a2d83612abf565b925082821015612a4057612a3f612bba565b5b828203905092915050565b6000612a5682612a9f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000612aea82612af1565b9050919050565b6000612afc82612b03565b9050919050565b6000612b0e82612a9f565b9050919050565b82818337600083830152505050565b60005b83811015612b42578082015181840152602081019050612b27565b83811115612b51576000848401525b50505050565b60006002820490506001821680612b6f57607f821691505b60208210811415612b8357612b82612c18565b5b50919050565b612b9282612c8a565b810181811067ffffffffffffffff82111715612bb157612bb0612c47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b6130ad81612a4b565b81146130b857600080fd5b50565b6130c481612a5d565b81146130cf57600080fd5b50565b6130db81612a69565b81146130e657600080fd5b50565b6130f281612a95565b81146130fd57600080fd5b50565b61310981612abf565b811461311457600080fd5b50565b61312081612ac9565b811461312b57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212202e00bf91f579284a99dfdab8f5e4717fadd331e1808d8c5e04ca5554c529ae1764736f6c634300080700334142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
          "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B47 CODESIZE SUB DUP1 PUSH3 0x3B47 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D696320535647204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44534E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xC0 SWAP3 SWAP2 SWAP1 PUSH3 0x3A0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD9 SWAP3 SWAP2 SWAP1 PUSH3 0x3A0 JUMP JUMPDEST POP POP POP PUSH3 0xED DUP3 PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x104 SWAP3 SWAP2 SWAP1 PUSH3 0x3A0 JUMP JUMPDEST POP PUSH3 0x116 DUP2 PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x12D SWAP3 SWAP2 SWAP1 PUSH3 0x3A0 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x93D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH3 0x1E3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1C3 SWAP2 SWAP1 PUSH3 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x212 PUSH1 0x20 SHL PUSH3 0xF3A OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1FA SWAP3 SWAP2 SWAP1 PUSH3 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH3 0x237 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH3 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3B07 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH3 0x269 SWAP2 SWAP1 PUSH3 0x66C JUMP JUMPDEST PUSH3 0x275 SWAP2 SWAP1 PUSH3 0x6C9 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x283 SWAP2 SWAP1 PUSH3 0x701 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH3 0x296 SWAP2 SWAP1 PUSH3 0x66C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2B2 JUMPI PUSH3 0x2B1 PUSH3 0x8CF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x356 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH3 0x2F9 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH3 0x373 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x384 JUMPI PUSH3 0x38F JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH3 0x38F JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3AE SWAP1 PUSH3 0x7D6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3D2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x41E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3ED JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x41E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x41E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x41D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x400 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x42D SWAP2 SWAP1 PUSH3 0x431 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x44C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x432 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x467 PUSH3 0x461 DUP5 PUSH3 0x620 JUMP JUMPDEST PUSH3 0x5F7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x486 JUMPI PUSH3 0x485 PUSH3 0x903 JUMP JUMPDEST JUMPDEST PUSH3 0x493 DUP5 DUP3 DUP6 PUSH3 0x7A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4AC DUP2 PUSH3 0x923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4CA JUMPI PUSH3 0x4C9 PUSH3 0x8FE JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x450 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x501 JUMPI PUSH3 0x500 PUSH3 0x90D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x511 DUP7 DUP3 DUP8 ADD PUSH3 0x49B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x535 JUMPI PUSH3 0x534 PUSH3 0x908 JUMP JUMPDEST JUMPDEST PUSH3 0x543 DUP7 DUP3 DUP8 ADD PUSH3 0x4B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x567 JUMPI PUSH3 0x566 PUSH3 0x908 JUMP JUMPDEST JUMPDEST PUSH3 0x575 DUP7 DUP3 DUP8 ADD PUSH3 0x4B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58C DUP3 PUSH3 0x656 JUMP JUMPDEST PUSH3 0x598 DUP2 DUP6 PUSH3 0x661 JUMP JUMPDEST SWAP4 POP PUSH3 0x5AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x7A0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C4 DUP3 DUP5 PUSH3 0x57F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DD DUP3 DUP6 PUSH3 0x57F JUMP JUMPDEST SWAP2 POP PUSH3 0x5EB DUP3 DUP5 PUSH3 0x57F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x603 PUSH3 0x616 JUMP JUMPDEST SWAP1 POP PUSH3 0x611 DUP3 DUP3 PUSH3 0x80C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x63E JUMPI PUSH3 0x63D PUSH3 0x8CF JUMP JUMPDEST JUMPDEST PUSH3 0x649 DUP3 PUSH3 0x912 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x679 DUP3 PUSH3 0x796 JUMP JUMPDEST SWAP2 POP PUSH3 0x686 DUP4 PUSH3 0x796 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x6BE JUMPI PUSH3 0x6BD PUSH3 0x842 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D6 DUP3 PUSH3 0x796 JUMP JUMPDEST SWAP2 POP PUSH3 0x6E3 DUP4 PUSH3 0x796 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x6F6 JUMPI PUSH3 0x6F5 PUSH3 0x871 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70E DUP3 PUSH3 0x796 JUMP JUMPDEST SWAP2 POP PUSH3 0x71B DUP4 PUSH3 0x796 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x757 JUMPI PUSH3 0x756 PUSH3 0x842 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76F DUP3 PUSH3 0x776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x7D0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x7EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x806 JUMPI PUSH3 0x805 PUSH3 0x8A0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x817 DUP3 PUSH3 0x912 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x839 JUMPI PUSH3 0x838 PUSH3 0x8CF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x92E DUP2 PUSH3 0x762 JUMP JUMPDEST DUP2 EQ PUSH3 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x31A4 PUSH3 0x963 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xAE0 ADD MSTORE PUSH2 0xBC1 ADD MSTORE PUSH2 0x31A4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E02007D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xD77843C5 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE4E65B0C EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3DD JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6E02007D EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x6BED5460 EQ PUSH2 0x27F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E8 JUMPI POP PUSH2 0x4E7 DUP3 PUSH2 0x10B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP3 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x1168 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x691 JUMPI POP PUSH2 0x690 DUP2 PUSH2 0x68B PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 DUP4 PUSH2 0x1170 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x705 CALLER PUSH1 0x6 SLOAD PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x25FE3A996149CE0F27840BD9EC024AC39E95985C0D3974C4FCAAED30903B5678 DUP3 PUSH1 0x40 MLOAD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0x767 PUSH2 0x1168 JUMP JUMPDEST DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B7 DUP4 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x822 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x837 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x87B DUP4 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x905 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x931 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x953 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x961 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA59 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA85 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAA7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB16 PUSH2 0xB0F PUSH2 0x1168 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1613 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xB25 PUSH2 0x1168 JUMP JUMPDEST DUP4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB76 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB87 DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF565855900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xD9A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD92 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD75 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDA2 PUSH2 0x181D JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0xDAD PUSH2 0x4EF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBF SWAP3 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xE0B SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE37 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312F PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x4 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFFE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x106D JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1087 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1097 JUMPI PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1126 DUP2 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP1 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11E3 DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1243 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x185A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1253 DUP4 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1295 JUMPI POP PUSH2 0x1294 DUP2 DUP6 PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x12D3 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BB DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12FC DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B9 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13EF DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143C SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1679 SWAP1 PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x178B DUP5 DUP5 DUP5 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x1797 DUP5 DUP5 DUP5 DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CD SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE DUP4 PUSH2 0x15D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1864 DUP4 DUP4 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A7 SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1941 SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19D4 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D96 JUMP JUMPDEST ISZERO PUSH2 0x1B6B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A2B PUSH2 0x1168 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A98 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B1B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDF SWAP1 PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF1 DUP2 PUSH2 0x17DC JUMP JUMPDEST ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C28 SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C3F PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1C48 DUP2 PUSH2 0x17DC JUMP JUMPDEST ISZERO PUSH2 0x1C88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7F SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D92 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCC PUSH2 0x1DC7 DUP5 PUSH2 0x2891 JUMP JUMPDEST PUSH2 0x286C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x2C7B JUMP JUMPDEST JUMPDEST PUSH2 0x1DF3 DUP5 DUP3 DUP6 PUSH2 0x2B15 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0E PUSH2 0x1E09 DUP5 PUSH2 0x28C2 JUMP JUMPDEST PUSH2 0x286C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E2A JUMPI PUSH2 0x1E29 PUSH2 0x2C7B JUMP JUMPDEST JUMPDEST PUSH2 0x1E35 DUP5 DUP3 DUP6 PUSH2 0x2B15 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E4C DUP2 PUSH2 0x30A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E61 DUP2 PUSH2 0x30BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E76 DUP2 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E8B DUP2 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EA6 JUMPI PUSH2 0x1EA5 PUSH2 0x2C76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECE DUP2 PUSH2 0x30E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EE3 DUP2 PUSH2 0x30E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EFE JUMPI PUSH2 0x1EFD PUSH2 0x2C76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F26 DUP2 PUSH2 0x3100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F3B DUP2 PUSH2 0x3100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F50 DUP2 PUSH2 0x3117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F7A DUP5 DUP3 DUP6 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F9A JUMPI PUSH2 0x1F99 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEA DUP7 DUP3 DUP8 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FFB DUP7 DUP3 DUP8 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x200C DUP7 DUP3 DUP8 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2030 JUMPI PUSH2 0x202F PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x203E DUP8 DUP3 DUP9 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x204F DUP8 DUP3 DUP9 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2060 DUP8 DUP3 DUP9 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x2C80 JUMP JUMPDEST JUMPDEST PUSH2 0x208D DUP8 DUP3 DUP9 ADD PUSH2 0x1E91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CF DUP6 DUP3 DUP7 ADD PUSH2 0x1E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F0 JUMPI PUSH2 0x20EF PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210F DUP6 DUP3 DUP7 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x213D DUP5 DUP3 DUP6 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215C JUMPI PUSH2 0x215B PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216A DUP5 DUP3 DUP6 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2189 JUMPI PUSH2 0x2188 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2197 DUP5 DUP3 DUP6 ADD PUSH2 0x1EBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x2C80 JUMP JUMPDEST JUMPDEST PUSH2 0x21E0 DUP5 DUP3 DUP6 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FF JUMPI PUSH2 0x21FE PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220D DUP5 DUP3 DUP6 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2232 JUMPI PUSH2 0x2231 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2240 DUP9 DUP3 DUP10 ADD PUSH2 0x1F41 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2251 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2262 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2273 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2284 DUP9 DUP3 DUP10 ADD PUSH2 0x1F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2A4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x2A5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA DUP3 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x22C4 DUP2 DUP6 PUSH2 0x2909 JUMP JUMPDEST SWAP4 POP PUSH2 0x22D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x2C8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F1 DUP2 PUSH2 0x2ADF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2300 DUP2 PUSH2 0x2A95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x231B DUP2 DUP6 PUSH2 0x291A JUMP JUMPDEST SWAP4 POP PUSH2 0x232B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x2334 DUP2 PUSH2 0x2C8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x2354 DUP2 DUP6 PUSH2 0x292B JUMP JUMPDEST SWAP4 POP PUSH2 0x2364 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237D PUSH1 0x2D DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2388 DUP3 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A0 PUSH1 0x9 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x23AB DUP3 PUSH2 0x2CEA JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C3 PUSH1 0x32 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x23CE DUP3 PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E6 PUSH1 0x25 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F1 DUP3 PUSH2 0x2D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2409 PUSH1 0x1C DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2414 DUP3 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242C PUSH1 0x24 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2437 DUP3 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244F PUSH1 0x19 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x245A DUP3 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2472 PUSH1 0x29 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x247D DUP3 PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2495 PUSH1 0x44 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x24A0 DUP3 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B8 PUSH1 0x2 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x24C3 DUP3 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DB PUSH1 0x20 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x24E6 DUP3 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FE PUSH1 0x18 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2509 DUP3 PUSH2 0x2F68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x21 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2544 PUSH1 0x3D DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x254F DUP3 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2567 PUSH1 0x43 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x2572 DUP3 PUSH2 0x302F JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2586 DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2598 DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AF DUP3 DUP6 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x25BB DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x2393 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DE DUP3 DUP6 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x25E9 DUP3 PUSH2 0x2488 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F4 DUP3 PUSH2 0x255A JUMP JUMPDEST SWAP2 POP PUSH2 0x2600 DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x260B DUP3 PUSH2 0x24AB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2647 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2654 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2661 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x257D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2673 DUP2 DUP5 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26E9 DUP2 DUP5 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 PUSH2 0x2370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272A DUP2 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x274A DUP2 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276A DUP2 PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 PUSH2 0x241F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27AA DUP2 PUSH2 0x2442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27CA DUP2 PUSH2 0x2465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27EA DUP2 PUSH2 0x24CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280A DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x282A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x284A DUP2 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x257D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 PUSH2 0x2887 JUMP JUMPDEST SWAP1 POP PUSH2 0x2882 DUP3 DUP3 PUSH2 0x2B89 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28AC JUMPI PUSH2 0x28AB PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH2 0x28B5 DUP3 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH2 0x28E6 DUP3 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x294C DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2997 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x29A2 DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29B2 JUMPI PUSH2 0x29B1 PUSH2 0x2BE9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C8 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x29D3 DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP3 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEA DUP3 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFC DUP3 PUSH2 0x2B03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0E DUP3 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B42 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B27 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B51 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B6F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2B83 JUMPI PUSH2 0x2B82 PUSH2 0x2C18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B92 DUP3 PUSH2 0x2C8A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x30AD DUP2 PUSH2 0x2A4B JUMP JUMPDEST DUP2 EQ PUSH2 0x30B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30C4 DUP2 PUSH2 0x2A5D JUMP JUMPDEST DUP2 EQ PUSH2 0x30CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30DB DUP2 PUSH2 0x2A69 JUMP JUMPDEST DUP2 EQ PUSH2 0x30E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F2 DUP2 PUSH2 0x2A95 JUMP JUMPDEST DUP2 EQ PUSH2 0x30FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3109 DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP2 EQ PUSH2 0x3114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3120 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x312B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x2E STOP 0xBF SWAP2 CREATE2 PUSH26 0x284A99DFDAB8F5E4717FADD331E1808D8C5E04CA5554C529AE17 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F00000000000000 ",
          "sourceMap": "286:3084:19:-:0;;;358:1;325:34;;619:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;784:21:19::1;798:6;784:13;;;:21;;:::i;:::-;768:13;:37;;;;;;;;;;;;:::i;:::-;;832:22;846:7;832:13;;;:22;;:::i;:::-;815:14;:39;;;;;;;;;;;;:::i;:::-;;900:9;864:46;;;;;;;;;;::::0;::::1;619:298:::0;;;286:3084;;1164:345;1241:13;1266:21;:52;;;;;;;;;;;;;;;;;;;1328:30;1361:73;1418:3;1401:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1361:13;;;;;:73;;:::i;:::-;1328:106;;1475:7;1484:16;1458:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1444:58;;;;1164:345;;;:::o;777:1861:17:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;286:3084:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:22:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;434:143;;;;:::o;597:355::-;664:5;713:3;706:4;698:6;694:17;690:27;680:122;;721:79;;:::i;:::-;680:122;831:6;825:13;856:90;942:3;934:6;927:4;919:6;915:17;856:90;:::i;:::-;847:99;;670:282;597:355;;;;:::o;958:1009::-;1066:6;1074;1082;1131:2;1119:9;1110:7;1106:23;1102:32;1099:119;;;1137:79;;:::i;:::-;1099:119;1257:1;1282:64;1338:7;1329:6;1318:9;1314:22;1282:64;:::i;:::-;1272:74;;1228:128;1416:2;1405:9;1401:18;1395:25;1447:18;1439:6;1436:30;1433:117;;;1469:79;;:::i;:::-;1433:117;1574:74;1640:7;1631:6;1620:9;1616:22;1574:74;:::i;:::-;1564:84;;1366:292;1718:2;1707:9;1703:18;1697:25;1749:18;1741:6;1738:30;1735:117;;;1771:79;;:::i;:::-;1735:117;1876:74;1942:7;1933:6;1922:9;1918:22;1876:74;:::i;:::-;1866:84;;1668:292;958:1009;;;;;:::o;1973:377::-;2079:3;2107:39;2140:5;2107:39;:::i;:::-;2162:89;2244:6;2239:3;2162:89;:::i;:::-;2155:96;;2260:52;2305:6;2300:3;2293:4;2286:5;2282:16;2260:52;:::i;:::-;2337:6;2332:3;2328:16;2321:23;;2083:267;1973:377;;;;:::o;2356:275::-;2488:3;2510:95;2601:3;2592:6;2510:95;:::i;:::-;2503:102;;2622:3;2615:10;;2356:275;;;;:::o;2637:435::-;2817:3;2839:95;2930:3;2921:6;2839:95;:::i;:::-;2832:102;;2951:95;3042:3;3033:6;2951:95;:::i;:::-;2944:102;;3063:3;3056:10;;2637:435;;;;;:::o;3078:129::-;3112:6;3139:20;;:::i;:::-;3129:30;;3168:33;3196:4;3188:6;3168:33;:::i;:::-;3078:129;;;:::o;3213:75::-;3246:6;3279:2;3273:9;3263:19;;3213:75;:::o;3294:308::-;3356:4;3446:18;3438:6;3435:30;3432:56;;;3468:18;;:::i;:::-;3432:56;3506:29;3528:6;3506:29;:::i;:::-;3498:37;;3590:4;3584;3580:15;3572:23;;3294:308;;;:::o;3608:99::-;3660:6;3694:5;3688:12;3678:22;;3608:99;;;:::o;3713:148::-;3815:11;3852:3;3837:18;;3713:148;;;;:::o;3867:305::-;3907:3;3926:20;3944:1;3926:20;:::i;:::-;3921:25;;3960:20;3978:1;3960:20;:::i;:::-;3955:25;;4114:1;4046:66;4042:74;4039:1;4036:81;4033:107;;;4120:18;;:::i;:::-;4033:107;4164:1;4161;4157:9;4150:16;;3867:305;;;;:::o;4178:185::-;4218:1;4235:20;4253:1;4235:20;:::i;:::-;4230:25;;4269:20;4287:1;4269:20;:::i;:::-;4264:25;;4308:1;4298:35;;4313:18;;:::i;:::-;4298:35;4355:1;4352;4348:9;4343:14;;4178:185;;;;:::o;4369:348::-;4409:7;4432:20;4450:1;4432:20;:::i;:::-;4427:25;;4466:20;4484:1;4466:20;:::i;:::-;4461:25;;4654:1;4586:66;4582:74;4579:1;4576:81;4571:1;4564:9;4557:17;4553:105;4550:131;;;4661:18;;:::i;:::-;4550:131;4709:1;4706;4702:9;4691:20;;4369:348;;;;:::o;4723:96::-;4760:7;4789:24;4807:5;4789:24;:::i;:::-;4778:35;;4723:96;;;:::o;4825:126::-;4862:7;4902:42;4895:5;4891:54;4880:65;;4825:126;;;:::o;4957:77::-;4994:7;5023:5;5012:16;;4957:77;;;:::o;5040:307::-;5108:1;5118:113;5132:6;5129:1;5126:13;5118:113;;;5217:1;5212:3;5208:11;5202:18;5198:1;5193:3;5189:11;5182:39;5154:2;5151:1;5147:10;5142:15;;5118:113;;;5249:6;5246:1;5243:13;5240:101;;;5329:1;5320:6;5315:3;5311:16;5304:27;5240:101;5089:258;5040:307;;;:::o;5353:320::-;5397:6;5434:1;5428:4;5424:12;5414:22;;5481:1;5475:4;5471:12;5502:18;5492:81;;5558:4;5550:6;5546:17;5536:27;;5492:81;5620:2;5612:6;5609:14;5589:18;5586:38;5583:84;;;5639:18;;:::i;:::-;5583:84;5404:269;5353:320;;;:::o;5679:281::-;5762:27;5784:4;5762:27;:::i;:::-;5754:6;5750:40;5892:6;5880:10;5877:22;5856:18;5844:10;5841:34;5838:62;5835:88;;;5903:18;;:::i;:::-;5835:88;5943:10;5939:2;5932:22;5722:238;5679:281;;:::o;5966:180::-;6014:77;6011:1;6004:88;6111:4;6108:1;6101:15;6135:4;6132:1;6125:15;6152:180;6200:77;6197:1;6190:88;6297:4;6294:1;6287:15;6321:4;6318:1;6311:15;6338:180;6386:77;6383:1;6376:88;6483:4;6480:1;6473:15;6507:4;6504:1;6497:15;6524:180;6572:77;6569:1;6562:88;6669:4;6666:1;6659:15;6693:4;6690:1;6683:15;6710:117;6819:1;6816;6809:12;6833:117;6942:1;6939;6932:12;6956:117;7065:1;7062;7055:12;7079:117;7188:1;7185;7178:12;7202:102;7243:6;7294:2;7290:7;7285:2;7278:5;7274:14;7270:28;7260:38;;7202:102;;;:::o;7310:122::-;7383:24;7401:5;7383:24;:::i;:::-;7376:5;7373:35;7363:63;;7422:1;7419;7412:12;7363:63;7310:122;:::o;286:3084:19:-;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_afterTokenTransfer_2214": {
              "entryPoint": 6619,
              "id": 2214,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_approve_2047": {
              "entryPoint": 4464,
              "id": 2047,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_baseURI_4242": {
              "entryPoint": 6173,
              "id": 4242,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_beforeTokenTransfer_2201": {
              "entryPoint": 6325,
              "id": 2201,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_checkOnERC721Received_2155": {
              "entryPoint": 6625,
              "id": 2155,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@_exists_1716": {
              "entryPoint": 6108,
              "id": 1716,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_isApprovedOrOwner_1750": {
              "entryPoint": 4679,
              "id": 1750,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_mint_1871": {
              "entryPoint": 7032,
              "id": 1871,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_msgSender_2843": {
              "entryPoint": 4456,
              "id": 2843,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_ownerOf_1698": {
              "entryPoint": 5590,
              "id": 1698,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_requireMinted_2093": {
              "entryPoint": 4381,
              "id": 2093,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_safeMint_1765": {
              "entryPoint": 4649,
              "id": 1765,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_safeMint_1794": {
              "entryPoint": 6234,
              "id": 1794,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_safeTransfer_1685": {
              "entryPoint": 6016,
              "id": 1685,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_setApprovalForAll_2079": {
              "entryPoint": 5651,
              "id": 2079,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transfer_2023": {
              "entryPoint": 4828,
              "id": 2023,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@approve_1527": {
              "entryPoint": 1479,
              "id": 1527,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@balanceOf_1388": {
              "entryPoint": 2450,
              "id": 1388,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@encode_3982": {
              "entryPoint": 3898,
              "id": 3982,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@getApproved_1545": {
              "entryPoint": 1409,
              "id": 1545,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@getHighImageURI_4321": {
              "entryPoint": 3580,
              "id": 4321,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@getPriceFeed_4331": {
              "entryPoint": 2780,
              "id": 4331,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@getTokenCounter_4339": {
              "entryPoint": 2440,
              "id": 4339,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@getlowImageURI_4313": {
              "entryPoint": 2294,
              "id": 4313,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@isApprovedForAll_1580": {
              "entryPoint": 3750,
              "id": 1580,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@isContract_2519": {
              "entryPoint": 7574,
              "id": 2519,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@mintNft_4196": {
              "entryPoint": 1759,
              "id": 4196,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@name_1426": {
              "entryPoint": 1263,
              "id": 1426,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@ownerOf_1416": {
              "entryPoint": 2159,
              "id": 1416,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@s_tokenIdToHighValues_4128": {
              "entryPoint": 3726,
              "id": 4128,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@safeTransferFrom_1626": {
              "entryPoint": 2127,
              "id": 1626,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@safeTransferFrom_1656": {
              "entryPoint": 2842,
              "id": 1656,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@setApprovalForAll_1562": {
              "entryPoint": 2820,
              "id": 1562,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@supportsInterface_1364": {
              "entryPoint": 1037,
              "id": 1364,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@supportsInterface_3051": {
              "entryPoint": 4275,
              "id": 3051,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@svgToImageURI_4233": {
              "entryPoint": 1980,
              "id": 4233,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@symbol_1436": {
              "entryPoint": 2634,
              "id": 1436,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@tokenURI_4305": {
              "entryPoint": 2940,
              "id": 4305,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@transferFrom_1607": {
              "entryPoint": 1884,
              "id": 1607,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "abi_decode_available_length_t_bytes_memory_ptr": {
              "entryPoint": 7609,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_string_memory_ptr": {
              "entryPoint": 7675,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_t_address": {
              "entryPoint": 7741,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bool": {
              "entryPoint": 7762,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4": {
              "entryPoint": 7783,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4_fromMemory": {
              "entryPoint": 7804,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes_memory_ptr": {
              "entryPoint": 7825,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_int256": {
              "entryPoint": 7871,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_int256_fromMemory": {
              "entryPoint": 7892,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_string_memory_ptr": {
              "entryPoint": 7913,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256": {
              "entryPoint": 7959,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256_fromMemory": {
              "entryPoint": 7980,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint80_fromMemory": {
              "entryPoint": 8001,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 8022,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 8067,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_uint256": {
              "entryPoint": 8131,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
              "entryPoint": 8214,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_addresst_bool": {
              "entryPoint": 8345,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 8409,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes4": {
              "entryPoint": 8473,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes4_fromMemory": {
              "entryPoint": 8518,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_int256": {
              "entryPoint": 8563,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_string_memory_ptr": {
              "entryPoint": 8608,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 8681,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
              "entryPoint": 8726,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 8849,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bool_to_t_bool_fromStack": {
              "entryPoint": 8864,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 8879,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack": {
              "entryPoint": 8936,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_int256_to_t_int256_fromStack": {
              "entryPoint": 8951,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 8966,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 9023,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9072,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 9107,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9142,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9177,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9212,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9247,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9282,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9317,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 9352,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 9387,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9422,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9457,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9492,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 9527,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 9562,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 9597,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 9612,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 9635,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 9671,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 9751,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 9778,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": 9854,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed": {
              "entryPoint": 9881,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
              "entryPoint": 9908,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 9935,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 9969,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10001,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10033,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10065,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10097,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10129,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10161,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10193,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10225,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10257,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 10289,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": 10321,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "allocate_memory": {
              "entryPoint": 10348,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": 10375,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_allocation_size_t_bytes_memory_ptr": {
              "entryPoint": 10385,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_allocation_size_t_string_memory_ptr": {
              "entryPoint": 10434,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_bytes_memory_ptr": {
              "entryPoint": 10483,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 10494,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 10505,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
              "entryPoint": 10522,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
              "entryPoint": 10539,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 10550,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 10636,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 10685,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint256": {
              "entryPoint": 10775,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 10827,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bool": {
              "entryPoint": 10845,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bytes4": {
              "entryPoint": 10857,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_int256": {
              "entryPoint": 10901,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 10911,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 10943,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint80": {
              "entryPoint": 10953,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_contract$_AggregatorV3Interface_$103_to_t_address": {
              "entryPoint": 10975,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_uint160_to_t_address": {
              "entryPoint": 10993,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_uint160_to_t_uint160": {
              "entryPoint": 11011,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_calldata_to_memory": {
              "entryPoint": 11029,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "copy_memory_to_memory": {
              "entryPoint": 11044,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 11095,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "finalize_allocation": {
              "entryPoint": 11145,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "panic_error_0x11": {
              "entryPoint": 11194,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x12": {
              "entryPoint": 11241,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 11288,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 11335,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
              "entryPoint": 11382,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
              "entryPoint": 11387,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": 11392,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 11397,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 11402,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
              "entryPoint": 11419,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832": {
              "entryPoint": 11498,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
              "entryPoint": 11539,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
              "entryPoint": 11618,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57": {
              "entryPoint": 11697,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
              "entryPoint": 11738,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
              "entryPoint": 11817,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
              "entryPoint": 11858,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574": {
              "entryPoint": 11937,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475": {
              "entryPoint": 12054,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6": {
              "entryPoint": 12095,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
              "entryPoint": 12136,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
              "entryPoint": 12177,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
              "entryPoint": 12256,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b": {
              "entryPoint": 12335,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_address": {
              "entryPoint": 12452,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bool": {
              "entryPoint": 12475,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bytes4": {
              "entryPoint": 12498,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_int256": {
              "entryPoint": 12521,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint256": {
              "entryPoint": 12544,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint80": {
              "entryPoint": 12567,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:36224:22",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "90:327:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "100:74:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "166:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:40:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "125:48:22"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "109:15:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "109:65:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "100:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "190:5:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "197:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "183:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "183:21:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "183:21:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "213:27:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "235:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:16:22"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "217:3:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "278:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                    "nodeType": "YulIdentifier",
                                    "src": "280:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "280:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "280:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:3:22"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "264:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "255:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "255:16:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "273:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "252:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "252:25:22"
                          },
                          "nodeType": "YulIf",
                          "src": "249:112:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "394:3:22"
                              },
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "399:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "404:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_calldata_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "370:23:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "370:41:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "370:41:22"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "63:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "68:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "76:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "84:5:22",
                        "type": ""
                      }
                    ],
                    "src": "7:410:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "507:328:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "517:75:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "584:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:41:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:49:22"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "526:15:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "526:66:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "517:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "608:5:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "615:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "601:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "601:21:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "601:21:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "631:27:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "646:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "653:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "642:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "642:16:22"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "635:3:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "696:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                    "nodeType": "YulIdentifier",
                                    "src": "698:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "698:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "698:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:3:22"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "682:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "673:16:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "691:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "670:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "670:25:22"
                          },
                          "nodeType": "YulIf",
                          "src": "667:112:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "812:3:22"
                              },
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "817:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "822:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_calldata_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "788:23:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "788:41:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "788:41:22"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "480:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "485:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "493:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "501:5:22",
                        "type": ""
                      }
                    ],
                    "src": "423:412:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "893:87:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "903:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "925:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "912:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "912:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "903:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "968:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "941:26:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "941:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "941:33:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "871:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "879:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "887:5:22",
                        "type": ""
                      }
                    ],
                    "src": "841:139:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1035:84:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1045:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1067:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1054:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1054:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1045:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1107:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1083:23:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1083:30:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1083:30:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1013:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1021:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1029:5:22",
                        "type": ""
                      }
                    ],
                    "src": "986:133:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1176:86:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1186:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1208:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1195:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1195:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1186:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1250:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "1224:25:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1224:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1224:32:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1154:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1162:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1170:5:22",
                        "type": ""
                      }
                    ],
                    "src": "1125:137:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1330:79:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1340:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1355:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1349:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:13:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1340:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1397:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "1371:25:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1371:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1371:32:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1308:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1316:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1324:5:22",
                        "type": ""
                      }
                    ],
                    "src": "1268:141:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1489:277:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1538:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1540:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1540:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1517:6:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1525:4:22",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1513:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1513:17:22"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1532:3:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1509:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1509:27:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1502:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1502:35:22"
                          },
                          "nodeType": "YulIf",
                          "src": "1499:122:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1630:34:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1657:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1644:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:20:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "1634:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1673:87:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1733:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1741:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1729:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1729:17:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1748:6:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1756:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1682:46:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1682:78:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1673:5:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1467:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1475:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "1483:5:22",
                        "type": ""
                      }
                    ],
                    "src": "1428:338:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1823:86:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1833:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1855:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1842:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1842:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1833:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1897:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "1871:25:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1871:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1871:32:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_int256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1801:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1809:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1817:5:22",
                        "type": ""
                      }
                    ],
                    "src": "1772:137:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1977:79:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1987:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2002:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1996:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1996:13:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1987:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2044:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "2018:25:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2018:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2018:32:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_int256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1955:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1963:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1971:5:22",
                        "type": ""
                      }
                    ],
                    "src": "1915:141:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2138:278:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2187:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "2189:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2189:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2189:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2166:6:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2174:4:22",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2162:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2162:17:22"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2181:3:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2158:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2158:27:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2151:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2151:35:22"
                          },
                          "nodeType": "YulIf",
                          "src": "2148:122:22"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2279:34:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2306:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2293:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2293:20:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "2283:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2322:88:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2383:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2391:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2379:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2379:17:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2398:6:22"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2406:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "2331:47:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2331:79:22"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "2322:5:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2116:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2124:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "2132:5:22",
                        "type": ""
                      }
                    ],
                    "src": "2076:340:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2474:87:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2484:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2506:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2493:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2493:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2484:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2549:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2522:26:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2522:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2522:33:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2452:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2460:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2468:5:22",
                        "type": ""
                      }
                    ],
                    "src": "2422:139:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2630:80:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2640:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2655:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2649:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2649:13:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2640:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2698:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2671:26:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2671:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2671:33:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2608:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2616:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2624:5:22",
                        "type": ""
                      }
                    ],
                    "src": "2567:143:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2778:79:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2788:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2803:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2797:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:13:22"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2788:5:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2845:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "2819:25:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2819:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2819:32:22"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint80_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2756:6:22",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "2764:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2772:5:22",
                        "type": ""
                      }
                    ],
                    "src": "2716:141:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2929:263:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2975:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "2977:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2977:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2977:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2950:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2959:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2946:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2946:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2971:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2942:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2942:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "2939:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "3068:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3083:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3097:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3087:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3112:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3147:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3158:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3143:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3143:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3167:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3122:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3122:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3112:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2899:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2910:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2922:6:22",
                        "type": ""
                      }
                    ],
                    "src": "2863:329:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3281:391:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3327:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "3329:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3329:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3329:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3302:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3311:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3323:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3294:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3294:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "3291:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "3420:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3435:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3449:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3439:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3464:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3499:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3510:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3495:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3495:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3519:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3474:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3474:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3464:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "3547:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3562:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3576:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3566:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3592:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3627:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3638:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3623:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3623:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3647:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3602:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3602:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3592:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3243:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3254:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3266:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3274:6:22",
                        "type": ""
                      }
                    ],
                    "src": "3198:474:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3778:519:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3824:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "3826:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3826:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3826:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3799:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3808:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3795:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3795:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3820:2:22",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3791:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3791:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "3788:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "3917:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3932:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3946:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3936:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3961:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3996:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4007:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3992:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3992:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4016:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3971:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3971:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3961:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4044:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4059:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4073:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4063:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4089:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4124:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4135:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4120:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4120:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4144:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4099:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4099:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4089:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4172:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4187:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4201:2:22",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4191:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4217:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4252:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4263:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4248:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4248:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4272:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4227:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4227:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4217:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3732:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3743:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3755:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3763:6:22",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "3771:6:22",
                        "type": ""
                      }
                    ],
                    "src": "3678:619:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4429:817:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4476:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "4478:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4478:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4478:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4450:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4459:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4446:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4446:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4471:3:22",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4442:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4442:33:22"
                          },
                          "nodeType": "YulIf",
                          "src": "4439:120:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4569:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4584:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4598:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4588:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4613:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4648:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4659:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4644:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4644:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4668:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4623:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4623:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4613:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4696:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4711:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4725:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4715:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4741:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4776:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4787:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4772:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4772:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4796:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4751:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4741:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4824:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4839:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4853:2:22",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4843:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4869:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4904:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4915:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4900:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4900:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4924:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4879:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4879:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4869:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4952:287:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4967:46:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4998:9:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5009:2:22",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4994:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4994:18:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4981:12:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4981:32:22"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4971:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5060:83:22",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "5062:77:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5062:79:22"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5062:79:22"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5032:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5040:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5029:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5029:30:22"
                              },
                              "nodeType": "YulIf",
                              "src": "5026:117:22"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5157:72:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5201:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5212:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5197:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5197:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5221:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5167:29:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5167:62:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "5157:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4375:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4386:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4398:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4406:6:22",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "4414:6:22",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "4422:6:22",
                        "type": ""
                      }
                    ],
                    "src": "4303:943:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5332:388:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5378:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "5380:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5380:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5380:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5353:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5362:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5349:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5349:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5374:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5345:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5345:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5342:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5471:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5486:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5500:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5490:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5515:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5550:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5561:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5546:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5546:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5570:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5525:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5525:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5515:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5598:115:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5613:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5627:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5617:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5643:60:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5675:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5686:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5671:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5671:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5695:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "5653:17:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5653:50:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5643:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5294:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5305:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5317:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5325:6:22",
                        "type": ""
                      }
                    ],
                    "src": "5252:468:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5809:391:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5855:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "5857:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5857:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5857:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5830:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5839:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5826:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5826:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5851:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5822:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5822:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "5819:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "5948:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5963:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5977:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5967:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5992:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6027:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6038:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6023:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6023:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6047:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "6002:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6002:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5992:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "6075:118:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6090:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6104:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6094:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6120:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6155:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6166:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6151:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6151:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6175:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6130:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6130:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6120:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5771:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5782:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5794:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5802:6:22",
                        "type": ""
                      }
                    ],
                    "src": "5726:474:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6271:262:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6317:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "6319:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6319:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6319:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6292:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6301:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6288:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6288:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6313:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6284:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6284:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "6281:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "6410:116:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6425:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6439:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6429:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6454:62:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6488:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6499:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6484:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6484:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6508:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "6464:19:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6464:52:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6454:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6241:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6252:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6264:6:22",
                        "type": ""
                      }
                    ],
                    "src": "6206:327:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6615:273:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6661:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "6663:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6663:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6663:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6636:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6645:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6632:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6632:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6657:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6628:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6628:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "6625:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "6754:127:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6769:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6783:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6773:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6798:73:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6843:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6854:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6839:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6839:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6863:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6808:30:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6808:63:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6798:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6585:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6596:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6608:6:22",
                        "type": ""
                      }
                    ],
                    "src": "6539:349:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6959:262:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7005:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "7007:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7007:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7007:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6980:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6989:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6976:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6976:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7001:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6972:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6972:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "6969:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "7098:116:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7113:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7127:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7117:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7142:62:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7176:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7187:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7172:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7172:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7196:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7152:19:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7152:52:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7142:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_int256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6929:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6940:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6952:6:22",
                        "type": ""
                      }
                    ],
                    "src": "6894:327:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7303:433:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7349:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "7351:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7351:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7351:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7324:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7333:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7320:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7320:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7345:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "7316:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7316:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "7313:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "7442:287:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7457:45:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7488:9:22"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7499:1:22",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7484:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7484:17:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7471:12:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7471:31:22"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7461:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7549:83:22",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "7551:77:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7551:79:22"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7551:79:22"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7521:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7529:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7518:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7518:30:22"
                              },
                              "nodeType": "YulIf",
                              "src": "7515:117:22"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7646:73:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7691:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7702:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7687:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7687:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7711:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7656:30:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7656:63:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7646:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7273:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "7284:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7296:6:22",
                        "type": ""
                      }
                    ],
                    "src": "7227:509:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7808:263:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7854:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "7856:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7856:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7856:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7829:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7838:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7825:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7825:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7850:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "7821:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7821:32:22"
                          },
                          "nodeType": "YulIf",
                          "src": "7818:119:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "7947:117:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7962:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7976:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7966:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7991:63:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8026:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8037:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8022:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8022:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8046:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8001:20:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8001:53:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7991:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7778:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "7789:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7801:6:22",
                        "type": ""
                      }
                    ],
                    "src": "7742:329:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8219:829:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8266:83:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "8268:77:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8268:79:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8268:79:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8240:7:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8249:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8236:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8236:23:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8261:3:22",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "8232:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8232:33:22"
                          },
                          "nodeType": "YulIf",
                          "src": "8229:120:22"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8359:127:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8374:15:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8388:1:22",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8378:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8403:73:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8448:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8459:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8444:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8444:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8468:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8413:30:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8413:63:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8403:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8496:128:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8511:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8525:2:22",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8515:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8541:73:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8586:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8597:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8582:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8582:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8606:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_int256_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8551:30:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8551:63:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8541:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8634:129:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8649:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8663:2:22",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8653:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8679:74:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8725:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8736:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8721:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8721:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8745:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8689:31:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8689:64:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8679:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8773:129:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8788:16:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8802:2:22",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8792:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8818:74:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8864:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8875:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8860:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8860:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8884:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8828:31:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8828:64:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "8818:6:22"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "8912:129:22",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8927:17:22",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8941:3:22",
                                "type": "",
                                "value": "128"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8931:6:22",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8958:73:22",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9003:9:22"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9014:6:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8999:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8999:22:22"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9023:7:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8968:30:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8968:63:22"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "8958:6:22"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8157:9:22",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "8168:7:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8180:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "8188:6:22",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "8196:6:22",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "8204:6:22",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "8212:6:22",
                        "type": ""
                      }
                    ],
                    "src": "8077:971:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9119:53:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9136:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9159:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9141:17:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9141:24:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9129:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9129:37:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9129:37:22"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9107:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9114:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9054:118:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9237:50:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9254:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9274:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "9259:14:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9259:21:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9247:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9247:34:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9247:34:22"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bool_to_t_bool_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9225:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9232:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9178:109:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9383:270:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "9393:52:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9439:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9407:31:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9407:38:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "9397:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9454:77:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9519:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9524:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "9461:57:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9461:70:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9454:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9566:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9573:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9562:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9562:16:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9580:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9585:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "9540:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9540:52:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9540:52:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9601:46:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9612:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9639:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "9617:21:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9617:29:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9608:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9608:39:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "9601:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9364:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9371:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "9379:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9293:360:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9753:95:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9770:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9835:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_AggregatorV3Interface_$103_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9775:59:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9775:66:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9763:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9763:79:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9763:79:22"
                        }
                      ]
                    },
                    "name": "abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9741:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9748:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9659:189:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9917:52:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9934:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9956:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "9939:16:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9939:23:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9927:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9927:36:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9927:36:22"
                        }
                      ]
                    },
                    "name": "abi_encode_t_int256_to_t_int256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9905:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9912:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9854:115:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10067:272:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10077:53:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10124:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10091:32:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10091:39:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "10081:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10139:78:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10205:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10210:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10146:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10146:71:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10139:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10252:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10259:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10248:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10248:16:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10266:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10271:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "10226:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10226:52:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10226:52:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10287:46:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10298:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10325:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "10303:21:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10303:29:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10294:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10294:39:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10287:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10048:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10055:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10063:3:22",
                        "type": ""
                      }
                    ],
                    "src": "9975:364:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10455:267:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10465:53:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10512:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10479:32:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10479:39:22"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "10469:6:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10527:96:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10611:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10616:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10534:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10534:89:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10527:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10658:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10665:4:22",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10654:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10654:16:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10672:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10677:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory",
                              "nodeType": "YulIdentifier",
                              "src": "10632:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10632:52:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10632:52:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10693:23:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10704:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10709:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10700:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10700:16:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10693:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10436:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10443:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10451:3:22",
                        "type": ""
                      }
                    ],
                    "src": "10345:377:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10874:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10884:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10950:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10955:2:22",
                                "type": "",
                                "value": "45"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10891:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10891:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10884:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11056:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                              "nodeType": "YulIdentifier",
                              "src": "10967:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10967:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10967:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11069:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11080:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11085:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11076:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11076:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "11069:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10862:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10870:3:22",
                        "type": ""
                      }
                    ],
                    "src": "10728:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11264:236:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11274:91:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11358:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11363:1:22",
                                "type": "",
                                "value": "9"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11281:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11281:84:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11274:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11463:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                              "nodeType": "YulIdentifier",
                              "src": "11374:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11374:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11374:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11476:18:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11487:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11492:1:22",
                                "type": "",
                                "value": "9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11483:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11483:11:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "11476:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "11252:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11260:3:22",
                        "type": ""
                      }
                    ],
                    "src": "11100:400:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11652:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11662:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11728:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11733:2:22",
                                "type": "",
                                "value": "50"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "11669:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11669:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11662:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11834:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                              "nodeType": "YulIdentifier",
                              "src": "11745:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11745:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11745:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11847:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11858:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11863:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11854:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11854:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "11847:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "11640:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11648:3:22",
                        "type": ""
                      }
                    ],
                    "src": "11506:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12024:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12034:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12100:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12105:2:22",
                                "type": "",
                                "value": "37"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12041:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12041:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "12034:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12206:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                              "nodeType": "YulIdentifier",
                              "src": "12117:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12117:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12117:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12219:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12230:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12235:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12226:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12226:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12219:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12012:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12020:3:22",
                        "type": ""
                      }
                    ],
                    "src": "11878:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12396:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12406:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12472:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12477:2:22",
                                "type": "",
                                "value": "28"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12413:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12413:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "12406:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12578:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                              "nodeType": "YulIdentifier",
                              "src": "12489:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12489:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12489:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12591:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12602:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12607:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12598:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12598:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12591:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12384:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12392:3:22",
                        "type": ""
                      }
                    ],
                    "src": "12250:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12768:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12778:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12844:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12849:2:22",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12785:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12785:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "12778:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12950:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                              "nodeType": "YulIdentifier",
                              "src": "12861:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12861:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12861:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12963:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12974:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12979:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12970:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12970:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12963:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12756:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12764:3:22",
                        "type": ""
                      }
                    ],
                    "src": "12622:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13140:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13150:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13216:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13221:2:22",
                                "type": "",
                                "value": "25"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13157:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13157:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13150:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13322:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                              "nodeType": "YulIdentifier",
                              "src": "13233:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13233:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13233:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13335:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13346:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13351:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13342:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13342:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13335:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13128:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13136:3:22",
                        "type": ""
                      }
                    ],
                    "src": "12994:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13512:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13522:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13588:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13593:2:22",
                                "type": "",
                                "value": "41"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13529:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13529:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13522:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13694:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                              "nodeType": "YulIdentifier",
                              "src": "13605:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13605:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13605:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13707:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13718:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13723:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13714:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13714:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13707:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13500:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13508:3:22",
                        "type": ""
                      }
                    ],
                    "src": "13366:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13902:238:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13912:92:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13996:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14001:2:22",
                                "type": "",
                                "value": "68"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13919:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13919:85:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13912:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14102:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574",
                              "nodeType": "YulIdentifier",
                              "src": "14013:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14013:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14013:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14115:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14126:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14131:2:22",
                                "type": "",
                                "value": "68"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14122:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14122:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14115:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13890:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13898:3:22",
                        "type": ""
                      }
                    ],
                    "src": "13738:402:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14310:236:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14320:91:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14404:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14409:1:22",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14327:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14327:84:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "14320:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14509:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                              "nodeType": "YulIdentifier",
                              "src": "14420:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14420:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14420:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14522:18:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14533:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14538:1:22",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14529:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14529:11:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14522:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "14298:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14306:3:22",
                        "type": ""
                      }
                    ],
                    "src": "14146:400:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14698:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14708:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14774:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14779:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14715:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14715:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "14708:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14880:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                              "nodeType": "YulIdentifier",
                              "src": "14791:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14791:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14791:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14893:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14904:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14909:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14900:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14900:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14893:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "14686:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14694:3:22",
                        "type": ""
                      }
                    ],
                    "src": "14552:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15070:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15080:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15146:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15151:2:22",
                                "type": "",
                                "value": "24"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15087:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15087:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15080:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15252:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                              "nodeType": "YulIdentifier",
                              "src": "15163:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15163:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15163:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15265:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15276:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15281:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15272:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15272:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "15265:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15058:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15066:3:22",
                        "type": ""
                      }
                    ],
                    "src": "14924:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15442:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15452:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15518:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15523:2:22",
                                "type": "",
                                "value": "33"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15459:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15459:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15452:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15624:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                              "nodeType": "YulIdentifier",
                              "src": "15535:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15535:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15535:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15637:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15648:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15653:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15644:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15644:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "15637:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15430:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15438:3:22",
                        "type": ""
                      }
                    ],
                    "src": "15296:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15814:220:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15824:74:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15890:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15895:2:22",
                                "type": "",
                                "value": "61"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15831:58:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15831:67:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15824:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15996:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                              "nodeType": "YulIdentifier",
                              "src": "15907:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15907:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15907:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16009:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16020:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16025:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16016:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16016:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16009:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15802:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15810:3:22",
                        "type": ""
                      }
                    ],
                    "src": "15668:366:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16204:238:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16214:92:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16298:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16303:2:22",
                                "type": "",
                                "value": "67"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "16221:76:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16221:85:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "16214:3:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16404:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b",
                              "nodeType": "YulIdentifier",
                              "src": "16315:88:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16315:93:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16315:93:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16417:19:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16428:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16433:2:22",
                                "type": "",
                                "value": "67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16424:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16424:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16417:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16192:3:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "16200:3:22",
                        "type": ""
                      }
                    ],
                    "src": "16040:402:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16513:53:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16530:3:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "16553:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16535:17:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16535:24:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16523:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16523:37:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16523:37:22"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "16501:5:22",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16508:3:22",
                        "type": ""
                      }
                    ],
                    "src": "16448:118:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16708:139:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16719:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16808:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16817:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "16726:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16726:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "16719:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16831:10:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16838:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16831:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16687:3:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "16693:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "16704:3:22",
                        "type": ""
                      }
                    ],
                    "src": "16572:275:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17037:251:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17048:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17137:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17146:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17055:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17055:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17048:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17160:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "17249:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17258:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17167:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17167:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17160:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17272:10:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17279:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "17272:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "17008:3:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "17014:6:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17022:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "17033:3:22",
                        "type": ""
                      }
                    ],
                    "src": "16853:435:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17882:911:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17893:155:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18044:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17900:142:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17900:148:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17893:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18058:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18147:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18156:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18065:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18065:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18058:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18170:155:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18321:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18177:142:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18177:148:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18170:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18335:155:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18486:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18342:142:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18342:148:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18335:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18500:102:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18589:6:22"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18598:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18507:81:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18507:95:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18500:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18612:155:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "18763:3:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18619:142:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18619:148:22"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18612:3:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18777:10:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18784:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "18777:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "17853:3:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "17859:6:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17867:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "17878:3:22",
                        "type": ""
                      }
                    ],
                    "src": "17294:1499:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18897:124:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18907:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18919:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18930:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18915:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18915:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18907:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18987:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19000:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19011:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18996:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18996:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18943:43:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18943:71:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18943:71:22"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18869:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18881:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18892:4:22",
                        "type": ""
                      }
                    ],
                    "src": "18799:222:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19227:440:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19237:27:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19249:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19260:3:22",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19245:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19245:19:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19237:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19318:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19331:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19342:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19327:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19327:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19274:43:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19274:71:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19274:71:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19399:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19412:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19423:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19408:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19408:18:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19355:43:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19355:72:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19355:72:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "19481:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19494:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19505:2:22",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19490:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19490:18:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19437:43:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19437:72:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19437:72:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19530:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19541:2:22",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19526:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19526:18:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19550:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19556:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "19546:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19546:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19519:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19519:48:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19519:48:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19576:84:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "19646:6:22"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "19655:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19584:61:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19584:76:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19576:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19175:9:22",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "19187:6:22",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "19195:6:22",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19203:6:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19211:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19222:4:22",
                        "type": ""
                      }
                    ],
                    "src": "19027:640:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19765:118:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19775:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19787:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19798:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19783:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19783:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19775:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19849:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19862:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19873:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19858:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19858:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bool_to_t_bool_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19811:37:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19811:65:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19811:65:22"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19737:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19749:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19760:4:22",
                        "type": ""
                      }
                    ],
                    "src": "19673:210:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20016:153:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20026:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20038:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20049:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20034:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20034:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20026:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20135:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20148:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20159:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20144:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20144:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20062:72:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20062:100:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20062:100:22"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19988:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "20000:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20011:4:22",
                        "type": ""
                      }
                    ],
                    "src": "19889:280:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20271:122:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20281:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20293:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20304:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20289:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20289:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20281:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20359:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20372:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20383:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20368:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20368:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_int256_to_t_int256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20317:41:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20317:69:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20317:69:22"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20243:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "20255:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20266:4:22",
                        "type": ""
                      }
                    ],
                    "src": "20175:218:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20517:195:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20527:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20539:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20550:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20535:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20535:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20527:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20574:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20585:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20570:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20570:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20593:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20599:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20589:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20589:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20563:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20563:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20563:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20619:86:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20691:6:22"
                              },
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20700:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20627:63:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20627:78:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20619:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20489:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "20501:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20512:4:22",
                        "type": ""
                      }
                    ],
                    "src": "20399:313:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20889:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20899:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20911:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20922:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20907:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20907:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20899:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20946:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20957:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20942:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20942:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20965:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20971:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20961:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20961:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20935:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20935:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20935:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20991:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "21125:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20999:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20999:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20991:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20869:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20884:4:22",
                        "type": ""
                      }
                    ],
                    "src": "20718:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21314:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21324:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21336:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21347:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21332:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21332:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21324:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21371:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21382:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21367:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21367:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21390:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21396:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21386:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21386:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21360:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21360:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21360:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21416:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "21550:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21424:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21424:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21416:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "21294:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "21309:4:22",
                        "type": ""
                      }
                    ],
                    "src": "21143:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21739:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21749:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21761:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21772:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21757:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21757:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21749:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21796:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21807:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21792:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21792:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21815:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21821:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21811:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21811:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21785:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21785:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21785:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21841:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "21975:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "21849:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21849:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21841:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "21719:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "21734:4:22",
                        "type": ""
                      }
                    ],
                    "src": "21568:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22164:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "22174:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22186:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22197:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22182:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22182:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22174:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22221:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22232:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22217:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22217:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22240:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22246:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22236:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22236:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22210:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22210:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22210:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22266:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "22400:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22274:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22274:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22266:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "22144:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "22159:4:22",
                        "type": ""
                      }
                    ],
                    "src": "21993:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22589:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "22599:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22611:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22622:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22607:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22607:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22599:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22646:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22657:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22642:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22642:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22665:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22671:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22661:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22661:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22635:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22635:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22635:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22691:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "22825:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "22699:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22699:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22691:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "22569:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "22584:4:22",
                        "type": ""
                      }
                    ],
                    "src": "22418:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "23014:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "23024:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23036:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23047:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23032:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23032:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23024:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23071:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23082:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23067:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23067:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23090:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23096:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "23086:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23086:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "23060:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23060:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "23060:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "23116:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "23250:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "23124:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23124:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23116:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "22994:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "23009:4:22",
                        "type": ""
                      }
                    ],
                    "src": "22843:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "23439:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "23449:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23461:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23472:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23457:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23457:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23449:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23496:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23507:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23492:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23492:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23515:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23521:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "23511:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23511:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "23485:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23485:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "23485:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "23541:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "23675:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "23549:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23549:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23541:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "23419:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "23434:4:22",
                        "type": ""
                      }
                    ],
                    "src": "23268:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "23864:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "23874:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23886:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23897:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23882:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23882:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23874:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23921:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23932:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23917:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23917:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23940:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23946:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "23936:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23936:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "23910:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23910:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "23910:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "23966:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "24100:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "23974:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23974:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "23966:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "23844:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "23859:4:22",
                        "type": ""
                      }
                    ],
                    "src": "23693:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24289:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24299:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24311:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24322:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24307:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24307:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "24299:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24346:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24357:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24342:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24342:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24365:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24371:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "24361:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24361:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "24335:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24335:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "24335:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "24391:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "24525:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "24399:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24399:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "24391:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "24269:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "24284:4:22",
                        "type": ""
                      }
                    ],
                    "src": "24118:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24714:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24724:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24736:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24747:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24732:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24732:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "24724:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24771:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24782:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24767:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24767:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24790:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24796:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "24786:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24786:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "24760:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24760:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "24760:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "24816:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "24950:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "24824:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24824:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "24816:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "24694:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "24709:4:22",
                        "type": ""
                      }
                    ],
                    "src": "24543:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25139:248:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "25149:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25161:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25172:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25157:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25157:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "25149:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25196:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25207:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25192:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25192:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25215:4:22"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25221:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "25211:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25211:20:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "25185:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25185:47:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25185:47:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "25241:139:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "25375:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "25249:124:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25249:131:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "25241:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "25119:9:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "25134:4:22",
                        "type": ""
                      }
                    ],
                    "src": "24968:419:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25491:124:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "25501:26:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25513:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25524:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25509:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25509:18:22"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "25501:4:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "25581:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25594:9:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25605:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25590:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25590:17:22"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "25537:43:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25537:71:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25537:71:22"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "25463:9:22",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "25475:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "25486:4:22",
                        "type": ""
                      }
                    ],
                    "src": "25393:222:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25662:88:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "25672:30:22",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "allocate_unbounded",
                              "nodeType": "YulIdentifier",
                              "src": "25682:18:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25682:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "25672:6:22"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "25731:6:22"
                              },
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "25739:4:22"
                              }
                            ],
                            "functionName": {
                              "name": "finalize_allocation",
                              "nodeType": "YulIdentifier",
                              "src": "25711:19:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25711:33:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25711:33:22"
                        }
                      ]
                    },
                    "name": "allocate_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "25646:4:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "25655:6:22",
                        "type": ""
                      }
                    ],
                    "src": "25621:129:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25796:35:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "25806:19:22",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25822:2:22",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "25816:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25816:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "25806:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "25789:6:22",
                        "type": ""
                      }
                    ],
                    "src": "25756:75:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25903:241:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "26008:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "26010:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "26010:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "26010:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "25980:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25988:18:22",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "25977:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25977:30:22"
                          },
                          "nodeType": "YulIf",
                          "src": "25974:56:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26040:37:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26070:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "26048:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26048:29:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "26040:4:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26114:23:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "26126:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26132:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26122:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26122:15:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "26114:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "25887:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "25898:4:22",
                        "type": ""
                      }
                    ],
                    "src": "25837:307:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "26217:241:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "26322:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "26324:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "26324:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "26324:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26294:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26302:18:22",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "26291:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26291:30:22"
                          },
                          "nodeType": "YulIf",
                          "src": "26288:56:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26354:37:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26384:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "26362:21:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26362:29:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "26354:4:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26428:23:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "26440:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26446:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26436:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26436:15:22"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "26428:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "26201:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "26212:4:22",
                        "type": ""
                      }
                    ],
                    "src": "26150:308:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "26522:40:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "26533:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "26549:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "26543:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26543:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "26533:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "26505:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "26515:6:22",
                        "type": ""
                      }
                    ],
                    "src": "26464:98:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "26627:40:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "26638:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "26654:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "26648:5:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26648:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "26638:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "26610:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "26620:6:22",
                        "type": ""
                      }
                    ],
                    "src": "26568:99:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "26768:73:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26785:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26790:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "26778:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26778:19:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "26778:19:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26806:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26825:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26830:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26821:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26821:14:22"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "26806:11:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "26740:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "26745:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "26756:11:22",
                        "type": ""
                      }
                    ],
                    "src": "26673:168:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "26943:73:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26960:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26965:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "26953:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26953:19:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "26953:19:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "26981:29:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "27000:3:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27005:4:22",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26996:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26996:14:22"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "26981:11:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "26915:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "26920:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "26931:11:22",
                        "type": ""
                      }
                    ],
                    "src": "26847:169:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "27136:34:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "27146:18:22",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "27161:3:22"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "27146:11:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "27108:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "27113:6:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "27124:11:22",
                        "type": ""
                      }
                    ],
                    "src": "27022:148:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "27220:261:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "27230:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27253:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27235:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27235:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "27230:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "27264:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27287:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27269:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27269:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "27264:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "27427:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "27429:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "27429:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "27429:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27348:1:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27355:66:22",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27423:1:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "27351:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27351:74:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "27345:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27345:81:22"
                          },
                          "nodeType": "YulIf",
                          "src": "27342:107:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "27459:16:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27470:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27473:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27466:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27466:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "27459:3:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "27207:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "27210:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "27216:3:22",
                        "type": ""
                      }
                    ],
                    "src": "27176:305:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "27529:143:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "27539:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27562:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27544:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27544:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "27539:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "27573:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27596:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27578:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27578:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "27573:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "27620:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "27622:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "27622:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "27622:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27617:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "27610:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27610:9:22"
                          },
                          "nodeType": "YulIf",
                          "src": "27607:35:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "27652:14:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27661:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27664:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "27657:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27657:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "27652:1:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "27518:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "27521:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "27527:1:22",
                        "type": ""
                      }
                    ],
                    "src": "27487:185:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "27726:300:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "27736:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "27759:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27741:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27741:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "27736:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "27770:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "27793:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "27775:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27775:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "27770:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "27968:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "27970:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "27970:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "27970:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "27880:1:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "27873:6:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27873:9:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "27866:6:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27866:17:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27888:1:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27895:66:22",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "27963:1:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "27891:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27891:74:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "27885:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27885:81:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "27862:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27862:105:22"
                          },
                          "nodeType": "YulIf",
                          "src": "27859:131:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "28000:20:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "28015:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "28018:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "28011:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28011:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "28000:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "27709:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "27712:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "27718:7:22",
                        "type": ""
                      }
                    ],
                    "src": "27678:348:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28077:146:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28087:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "28110:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "28092:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28092:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "28087:1:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "28121:25:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "28144:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "28126:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28126:20:22"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "28121:1:22"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "28168:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "28170:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "28170:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "28170:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "28162:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "28165:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "28159:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28159:8:22"
                          },
                          "nodeType": "YulIf",
                          "src": "28156:34:22"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "28200:17:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "28212:1:22"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "28215:1:22"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "28208:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28208:9:22"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "28200:4:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "28063:1:22",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "28066:1:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "28072:4:22",
                        "type": ""
                      }
                    ],
                    "src": "28032:191:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28274:51:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28284:35:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28313:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "28295:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28295:24:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28284:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28256:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28266:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28229:96:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28373:48:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28383:32:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "28408:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "28401:6:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28401:13:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "28394:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28394:21:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28383:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28355:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28365:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28331:90:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28471:105:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28481:89:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28496:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28503:66:22",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "28492:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28492:78:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28481:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28453:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28463:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28427:149:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28626:32:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28636:16:22",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28647:5:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28636:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_int256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28608:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28618:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28582:76:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28709:81:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28719:65:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28734:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28741:42:22",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "28730:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28730:54:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28719:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28691:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28701:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28664:126:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28841:32:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28851:16:22",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28862:5:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28851:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28823:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28833:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28796:77:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "28923:61:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "28933:45:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28948:5:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28955:22:22",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "28944:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28944:34:22"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "28933:7:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint80",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "28905:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "28915:7:22",
                        "type": ""
                      }
                    ],
                    "src": "28879:105:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29079:66:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "29089:50:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "29133:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint160_to_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "29102:30:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29102:37:22"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "29089:9:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_contract$_AggregatorV3Interface_$103_to_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "29059:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "29069:9:22",
                        "type": ""
                      }
                    ],
                    "src": "28990:155:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29211:66:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "29221:50:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "29265:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint160_to_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "29234:30:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29234:37:22"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "29221:9:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint160_to_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "29191:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "29201:9:22",
                        "type": ""
                      }
                    ],
                    "src": "29151:126:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29343:53:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "29353:37:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "29384:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "29366:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29366:24:22"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "29353:9:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint160_to_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "29323:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "29333:9:22",
                        "type": ""
                      }
                    ],
                    "src": "29283:113:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29453:103:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "29476:3:22"
                              },
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "29481:3:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "29486:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nodeType": "YulIdentifier",
                              "src": "29463:12:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29463:30:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "29463:30:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "29534:3:22"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "29539:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29530:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29530:16:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29548:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "29523:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29523:27:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "29523:27:22"
                        }
                      ]
                    },
                    "name": "copy_calldata_to_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "29435:3:22",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "29440:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "29445:6:22",
                        "type": ""
                      }
                    ],
                    "src": "29402:154:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29611:258:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "29621:10:22",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29630:1:22",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "29625:1:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "29690:63:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "29715:3:22"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "29720:1:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "29711:3:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29711:11:22"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "29734:3:22"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "29739:1:22"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29730:3:22"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29730:11:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "29724:5:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29724:18:22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "29704:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "29704:39:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "29704:39:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "29651:1:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "29654:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "29648:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29648:13:22"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "29662:19:22",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "29664:15:22",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "29673:1:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "29676:2:22",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "29669:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "29669:10:22"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "29664:1:22"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "29644:3:22",
                            "statements": []
                          },
                          "src": "29640:113:22"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "29787:76:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "29837:3:22"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "29842:6:22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "29833:3:22"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29833:16:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "29851:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "29826:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "29826:27:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "29826:27:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "29768:1:22"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "29771:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "29765:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29765:13:22"
                          },
                          "nodeType": "YulIf",
                          "src": "29762:101:22"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "29593:3:22",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "29598:3:22",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "29603:6:22",
                        "type": ""
                      }
                    ],
                    "src": "29562:307:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "29926:269:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "29936:22:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "29950:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29956:1:22",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "29946:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29946:12:22"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "29936:6:22"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "29967:38:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "29997:4:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30003:1:22",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "29993:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29993:12:22"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "29971:18:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "30044:51:22",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "30058:27:22",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "30072:6:22"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "30080:4:22",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "30068:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "30068:17:22"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30058:6:22"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "30024:18:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "30017:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30017:26:22"
                          },
                          "nodeType": "YulIf",
                          "src": "30014:81:22"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "30147:42:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nodeType": "YulIdentifier",
                                    "src": "30161:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "30161:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "30161:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "30111:18:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30134:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30142:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "30131:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30131:14:22"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "30108:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30108:38:22"
                          },
                          "nodeType": "YulIf",
                          "src": "30105:84:22"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "29910:4:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "29919:6:22",
                        "type": ""
                      }
                    ],
                    "src": "29875:320:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "30244:238:22",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "30254:58:22",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "30276:6:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "30306:4:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "30284:21:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30284:27:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30272:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30272:40:22"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "30258:10:22",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "30423:22:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "30425:16:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "30425:18:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "30425:18:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "30366:10:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30378:18:22",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "30363:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30363:34:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "30402:10:22"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "30414:6:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "30399:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30399:22:22"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "30360:2:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30360:62:22"
                          },
                          "nodeType": "YulIf",
                          "src": "30357:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30461:2:22",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "30465:10:22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30454:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30454:22:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30454:22:22"
                        }
                      ]
                    },
                    "name": "finalize_allocation",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "30230:6:22",
                        "type": ""
                      },
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "30238:4:22",
                        "type": ""
                      }
                    ],
                    "src": "30201:281:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "30516:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30533:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30536:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30526:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30526:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30526:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30630:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30633:4:22",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30623:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30623:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30623:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30654:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30657:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "30647:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30647:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30647:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "30488:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "30702:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30719:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30722:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30712:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30712:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30712:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30816:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30819:4:22",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30809:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30809:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30809:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30840:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30843:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "30833:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30833:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30833:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x12",
                    "nodeType": "YulFunctionDefinition",
                    "src": "30674:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "30888:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30905:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30908:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30898:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30898:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30898:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31002:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31005:4:22",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "30995:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30995:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "30995:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31026:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31029:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31019:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31019:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31019:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nodeType": "YulFunctionDefinition",
                    "src": "30860:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31074:152:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31091:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31094:77:22",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "31084:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31084:88:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31084:88:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31188:1:22",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31191:4:22",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "31181:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31181:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31181:15:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31212:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31215:4:22",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31205:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31205:15:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31205:15:22"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "31046:180:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31321:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31338:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31341:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31331:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31331:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31331:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                    "nodeType": "YulFunctionDefinition",
                    "src": "31232:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31444:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31461:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31464:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31454:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31454:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31454:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                    "nodeType": "YulFunctionDefinition",
                    "src": "31355:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31567:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31584:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31587:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31577:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31577:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31577:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "31478:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31690:28:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31707:1:22",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31710:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "31700:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31700:12:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31700:12:22"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "31601:117:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31772:54:22",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "31782:38:22",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "31800:5:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31807:2:22",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31796:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31796:14:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31816:2:22",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "31812:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31812:7:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "31792:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31792:28:22"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "31782:6:22"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "31755:5:22",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "31765:6:22",
                        "type": ""
                      }
                    ],
                    "src": "31724:102:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "31938:126:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "31960:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31968:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31956:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31956:14:22"
                              },
                              {
                                "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "31972:34:22",
                                "type": "",
                                "value": "ERC721: caller is not token owne"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "31949:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31949:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "31949:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32028:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32036:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32024:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32024:15:22"
                              },
                              {
                                "hexValue": "72206f7220617070726f766564",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32041:15:22",
                                "type": "",
                                "value": "r or approved"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32017:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32017:40:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32017:40:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "31930:6:22",
                        "type": ""
                      }
                    ],
                    "src": "31832:232:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "32176:108:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32198:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32206:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32194:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32194:14:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32210:66:22",
                                "type": "",
                                "value": "0x7b226e616d65223a220000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32187:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32187:90:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32187:90:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "32168:6:22",
                        "type": ""
                      }
                    ],
                    "src": "32070:214:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "32396:131:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32418:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32426:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32414:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32414:14:22"
                              },
                              {
                                "hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32430:34:22",
                                "type": "",
                                "value": "ERC721: transfer to non ERC721Re"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32407:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32407:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32407:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32486:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32494:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32482:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32482:15:22"
                              },
                              {
                                "hexValue": "63656976657220696d706c656d656e746572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32499:20:22",
                                "type": "",
                                "value": "ceiver implementer"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32475:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32475:45:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32475:45:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "32388:6:22",
                        "type": ""
                      }
                    ],
                    "src": "32290:237:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "32639:118:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32661:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32669:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32657:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32657:14:22"
                              },
                              {
                                "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32673:34:22",
                                "type": "",
                                "value": "ERC721: transfer from incorrect "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32650:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32650:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32650:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32729:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32737:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32725:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32725:15:22"
                              },
                              {
                                "hexValue": "6f776e6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32742:7:22",
                                "type": "",
                                "value": "owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32718:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32718:32:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32718:32:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "32631:6:22",
                        "type": ""
                      }
                    ],
                    "src": "32533:224:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "32869:72:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "32891:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32899:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32887:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32887:14:22"
                              },
                              {
                                "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "32903:30:22",
                                "type": "",
                                "value": "ERC721: token already minted"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "32880:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32880:54:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "32880:54:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "32861:6:22",
                        "type": ""
                      }
                    ],
                    "src": "32763:178:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "33053:117:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33075:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33083:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33071:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33071:14:22"
                              },
                              {
                                "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33087:34:22",
                                "type": "",
                                "value": "ERC721: transfer to the zero add"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33064:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33064:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33064:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33143:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33151:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33139:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33139:15:22"
                              },
                              {
                                "hexValue": "72657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33156:6:22",
                                "type": "",
                                "value": "ress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33132:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33132:31:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33132:31:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "33045:6:22",
                        "type": ""
                      }
                    ],
                    "src": "32947:223:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "33282:69:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33304:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33312:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33300:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33300:14:22"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33316:27:22",
                                "type": "",
                                "value": "ERC721: approve to caller"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33293:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33293:51:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33293:51:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "33274:6:22",
                        "type": ""
                      }
                    ],
                    "src": "33176:175:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "33463:122:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33485:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33493:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33481:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33481:14:22"
                              },
                              {
                                "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33497:34:22",
                                "type": "",
                                "value": "ERC721: address zero is not a va"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33474:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33474:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33474:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33553:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33561:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33549:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33549:15:22"
                              },
                              {
                                "hexValue": "6c6964206f776e6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33566:11:22",
                                "type": "",
                                "value": "lid owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33542:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33542:36:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33542:36:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "33455:6:22",
                        "type": ""
                      }
                    ],
                    "src": "33357:228:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "33697:278:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33719:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33727:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33715:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33715:14:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33731:66:22",
                                "type": "",
                                "value": "0x222c20226465736372697074696f6e223a22416e204e46542074686174206368"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33708:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33708:90:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33708:90:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33819:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33827:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33815:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33815:15:22"
                              },
                              {
                                "hexValue": "616e676573206261736564206f6e2074686520436861696e6c696e6b20466565",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "33832:34:22",
                                "type": "",
                                "value": "anges based on the Chainlink Fee"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33808:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33808:59:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33808:59:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "33888:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33896:2:22",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33884:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33884:15:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33901:66:22",
                                "type": "",
                                "value": "0x64222c2000000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "33877:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33877:91:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "33877:91:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "33689:6:22",
                        "type": ""
                      }
                    ],
                    "src": "33591:384:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "34087:108:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34109:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34117:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34105:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34105:14:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "34121:66:22",
                                "type": "",
                                "value": "0x227d000000000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34098:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34098:90:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34098:90:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "34079:6:22",
                        "type": ""
                      }
                    ],
                    "src": "33981:214:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "34307:76:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34329:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34337:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34325:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34325:14:22"
                              },
                              {
                                "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "34341:34:22",
                                "type": "",
                                "value": "ERC721: mint to the zero address"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34318:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34318:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34318:58:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "34299:6:22",
                        "type": ""
                      }
                    ],
                    "src": "34201:182:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "34495:68:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34517:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34525:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34513:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34513:14:22"
                              },
                              {
                                "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "34529:26:22",
                                "type": "",
                                "value": "ERC721: invalid token ID"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34506:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34506:50:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34506:50:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "34487:6:22",
                        "type": ""
                      }
                    ],
                    "src": "34389:174:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "34675:114:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34697:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34705:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34693:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34693:14:22"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "34709:34:22",
                                "type": "",
                                "value": "ERC721: approval to current owne"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34686:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34686:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34686:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34765:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34773:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34761:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34761:15:22"
                              },
                              {
                                "hexValue": "72",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "34778:3:22",
                                "type": "",
                                "value": "r"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34754:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34754:28:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34754:28:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "34667:6:22",
                        "type": ""
                      }
                    ],
                    "src": "34569:220:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "34901:142:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34923:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34931:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34919:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34919:14:22"
                              },
                              {
                                "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "34935:34:22",
                                "type": "",
                                "value": "ERC721: approve caller is not to"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34912:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34912:58:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34912:58:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "34991:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34999:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34987:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34987:15:22"
                              },
                              {
                                "hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "35004:31:22",
                                "type": "",
                                "value": "ken owner or approved for all"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "34980:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34980:56:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "34980:56:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "34893:6:22",
                        "type": ""
                      }
                    ],
                    "src": "34795:248:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "35155:310:22",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "35177:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35185:1:22",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35173:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35173:14:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "35189:66:22",
                                "type": "",
                                "value": "0x2261747472696275746573223a205b7b2274726169745f74797065223a202263"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "35166:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35166:90:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "35166:90:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "35277:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35285:2:22",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35273:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35273:15:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "35290:66:22",
                                "type": "",
                                "value": "0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "35266:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35266:91:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "35266:91:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "35378:6:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35386:2:22",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35374:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35374:15:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "35391:66:22",
                                "type": "",
                                "value": "0x223a220000000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "35367:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35367:91:22"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "35367:91:22"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "35147:6:22",
                        "type": ""
                      }
                    ],
                    "src": "35049:416:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "35514:79:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "35571:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35580:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35583:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "35573:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "35573:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "35573:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35537:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35562:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "35544:17:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35544:24:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35534:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35534:35:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "35527:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35527:43:22"
                          },
                          "nodeType": "YulIf",
                          "src": "35524:63:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "35507:5:22",
                        "type": ""
                      }
                    ],
                    "src": "35471:122:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "35639:76:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "35693:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35702:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35705:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "35695:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "35695:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "35695:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35662:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35684:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "35669:14:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35669:21:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35659:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35659:32:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "35652:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35652:40:22"
                          },
                          "nodeType": "YulIf",
                          "src": "35649:60:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "35632:5:22",
                        "type": ""
                      }
                    ],
                    "src": "35599:116:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "35763:78:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "35819:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35828:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35831:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "35821:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "35821:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "35821:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35786:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35810:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "35793:16:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35793:23:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35783:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35783:34:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "35776:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35776:42:22"
                          },
                          "nodeType": "YulIf",
                          "src": "35773:62:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "35756:5:22",
                        "type": ""
                      }
                    ],
                    "src": "35721:120:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "35889:78:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "35945:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35954:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "35957:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "35947:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "35947:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "35947:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "35912:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "35936:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "35919:16:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35919:23:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "35909:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35909:34:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "35902:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "35902:42:22"
                          },
                          "nodeType": "YulIf",
                          "src": "35899:62:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_int256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "35882:5:22",
                        "type": ""
                      }
                    ],
                    "src": "35847:120:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "36016:79:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "36073:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "36082:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "36085:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "36075:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "36075:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "36075:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "36039:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "36064:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "36046:17:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36046:24:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "36036:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36036:35:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "36029:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "36029:43:22"
                          },
                          "nodeType": "YulIf",
                          "src": "36026:63:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "36009:5:22",
                        "type": ""
                      }
                    ],
                    "src": "35973:122:22"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "36143:78:22",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "36199:16:22",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "36208:1:22",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "36211:1:22",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "36201:6:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "36201:12:22"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "36201:12:22"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "36166:5:22"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "36190:5:22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint80",
                                      "nodeType": "YulIdentifier",
                                      "src": "36173:16:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36173:23:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "36163:2:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36163:34:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "36156:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "36156:42:22"
                          },
                          "nodeType": "YulIf",
                          "src": "36153:62:22"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint80",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "36136:5:22",
                        "type": ""
                      }
                    ],
                    "src": "36101:120:22"
                  }
                ]
              },
              "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$103_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 68)\n        store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(pos)\n        end := add(pos, 68)\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 67)\n        store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(pos)\n        end := add(pos, 67)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$103_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d65223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(memPtr) {\n\n        mstore(add(memPtr, 0), 0x222c20226465736372697074696f6e223a22416e204e46542074686174206368)\n\n        mstore(add(memPtr, 32), \"anges based on the Chainlink Fee\")\n\n        mstore(add(memPtr, 64), 0x64222c2000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a205b7b2274726169745f74797065223a202263)\n\n        mstore(add(memPtr, 32), 0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765)\n\n        mstore(add(memPtr, 64), 0x223a220000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
              "id": 22,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "4131": [
              {
                "length": 32,
                "start": 2784
              },
              {
                "length": 32,
                "start": 3009
              }
            ]
          },
          "linkReferences": {},
          "object": "",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E02007D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xD77843C5 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE4E65B0C EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3DD JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6E02007D EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x6BED5460 EQ PUSH2 0x27F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E8 JUMPI POP PUSH2 0x4E7 DUP3 PUSH2 0x10B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP3 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x2811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x1168 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x691 JUMPI POP PUSH2 0x690 DUP2 PUSH2 0x68B PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 DUP4 PUSH2 0x1170 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x705 CALLER PUSH1 0x6 SLOAD PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x25FE3A996149CE0F27840BD9EC024AC39E95985C0D3974C4FCAAED30903B5678 DUP3 PUSH1 0x40 MLOAD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x76D PUSH2 0x767 PUSH2 0x1168 JUMP JUMPDEST DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B7 DUP4 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x822 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x837 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x87B DUP4 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x905 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x931 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x953 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x961 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA59 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA85 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAA7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB16 PUSH2 0xB0F PUSH2 0x1168 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1613 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xB25 PUSH2 0x1168 JUMP JUMPDEST DUP4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB76 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB87 DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF565855900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xD9A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD19 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD45 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD92 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD75 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDA2 PUSH2 0x181D JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0xDAD PUSH2 0x4EF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBF SWAP3 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xE0B SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE37 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312F PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x4 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFFE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x106D JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1087 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1097 JUMPI PUSH2 0x10A2 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1126 DUP2 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP1 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11E3 DUP4 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1243 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x185A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1253 DUP4 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1295 JUMPI POP PUSH2 0x1294 DUP2 DUP6 PUSH2 0xEA6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x12D3 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BB DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12FC DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B9 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13EF DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143C SWAP1 PUSH2 0x2731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1679 SWAP1 PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x178B DUP5 DUP5 DUP5 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x1797 DUP5 DUP5 DUP5 DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CD SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17FE DUP4 PUSH2 0x15D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1864 DUP4 DUP4 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A7 SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1941 SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19D4 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D96 JUMP JUMPDEST ISZERO PUSH2 0x1B6B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A2B PUSH2 0x1168 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A98 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B1B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP1 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDF SWAP1 PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF1 DUP2 PUSH2 0x17DC JUMP JUMPDEST ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C28 SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C3F PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x1C48 DUP2 PUSH2 0x17DC JUMP JUMPDEST ISZERO PUSH2 0x1C88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7F SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D92 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCC PUSH2 0x1DC7 DUP5 PUSH2 0x2891 JUMP JUMPDEST PUSH2 0x286C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x2C7B JUMP JUMPDEST JUMPDEST PUSH2 0x1DF3 DUP5 DUP3 DUP6 PUSH2 0x2B15 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0E PUSH2 0x1E09 DUP5 PUSH2 0x28C2 JUMP JUMPDEST PUSH2 0x286C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E2A JUMPI PUSH2 0x1E29 PUSH2 0x2C7B JUMP JUMPDEST JUMPDEST PUSH2 0x1E35 DUP5 DUP3 DUP6 PUSH2 0x2B15 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E4C DUP2 PUSH2 0x30A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E61 DUP2 PUSH2 0x30BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E76 DUP2 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E8B DUP2 PUSH2 0x30D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EA6 JUMPI PUSH2 0x1EA5 PUSH2 0x2C76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECE DUP2 PUSH2 0x30E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EE3 DUP2 PUSH2 0x30E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EFE JUMPI PUSH2 0x1EFD PUSH2 0x2C76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F26 DUP2 PUSH2 0x3100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F3B DUP2 PUSH2 0x3100 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F50 DUP2 PUSH2 0x3117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F7A DUP5 DUP3 DUP6 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F9A JUMPI PUSH2 0x1F99 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEA DUP7 DUP3 DUP8 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FFB DUP7 DUP3 DUP8 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x200C DUP7 DUP3 DUP8 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2030 JUMPI PUSH2 0x202F PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x203E DUP8 DUP3 DUP9 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x204F DUP8 DUP3 DUP9 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2060 DUP8 DUP3 DUP9 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x2C80 JUMP JUMPDEST JUMPDEST PUSH2 0x208D DUP8 DUP3 DUP9 ADD PUSH2 0x1E91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CF DUP6 DUP3 DUP7 ADD PUSH2 0x1E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F0 JUMPI PUSH2 0x20EF PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210F DUP6 DUP3 DUP7 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x213D DUP5 DUP3 DUP6 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215C JUMPI PUSH2 0x215B PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216A DUP5 DUP3 DUP6 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2189 JUMPI PUSH2 0x2188 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2197 DUP5 DUP3 DUP6 ADD PUSH2 0x1EBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x2C80 JUMP JUMPDEST JUMPDEST PUSH2 0x21E0 DUP5 DUP3 DUP6 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FF JUMPI PUSH2 0x21FE PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220D DUP5 DUP3 DUP6 ADD PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2232 JUMPI PUSH2 0x2231 PUSH2 0x2C85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2240 DUP9 DUP3 DUP10 ADD PUSH2 0x1F41 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2251 DUP9 DUP3 DUP10 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2262 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2273 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2284 DUP9 DUP3 DUP10 ADD PUSH2 0x1F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2A4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x2A5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BA DUP3 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x22C4 DUP2 DUP6 PUSH2 0x2909 JUMP JUMPDEST SWAP4 POP PUSH2 0x22D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x2C8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F1 DUP2 PUSH2 0x2ADF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2300 DUP2 PUSH2 0x2A95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x231B DUP2 DUP6 PUSH2 0x291A JUMP JUMPDEST SWAP4 POP PUSH2 0x232B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST PUSH2 0x2334 DUP2 PUSH2 0x2C8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x2354 DUP2 DUP6 PUSH2 0x292B JUMP JUMPDEST SWAP4 POP PUSH2 0x2364 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B24 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237D PUSH1 0x2D DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2388 DUP3 PUSH2 0x2C9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A0 PUSH1 0x9 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x23AB DUP3 PUSH2 0x2CEA JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C3 PUSH1 0x32 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x23CE DUP3 PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E6 PUSH1 0x25 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F1 DUP3 PUSH2 0x2D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2409 PUSH1 0x1C DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2414 DUP3 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242C PUSH1 0x24 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2437 DUP3 PUSH2 0x2DDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244F PUSH1 0x19 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x245A DUP3 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2472 PUSH1 0x29 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x247D DUP3 PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2495 PUSH1 0x44 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x24A0 DUP3 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B8 PUSH1 0x2 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x24C3 DUP3 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DB PUSH1 0x20 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x24E6 DUP3 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FE PUSH1 0x18 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x2509 DUP3 PUSH2 0x2F68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x21 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2544 PUSH1 0x3D DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP2 POP PUSH2 0x254F DUP3 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2567 PUSH1 0x43 DUP4 PUSH2 0x292B JUMP JUMPDEST SWAP2 POP PUSH2 0x2572 DUP3 PUSH2 0x302F JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2586 DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2598 DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AF DUP3 DUP6 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x25BB DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x2393 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DE DUP3 DUP6 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x25E9 DUP3 PUSH2 0x2488 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F4 DUP3 PUSH2 0x255A JUMP JUMPDEST SWAP2 POP PUSH2 0x2600 DUP3 DUP5 PUSH2 0x233F JUMP JUMPDEST SWAP2 POP PUSH2 0x260B DUP3 PUSH2 0x24AB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2647 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2654 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2661 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x257D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2673 DUP2 DUP5 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26E9 DUP2 DUP5 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 PUSH2 0x2370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272A DUP2 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x274A DUP2 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276A DUP2 PUSH2 0x23FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 PUSH2 0x241F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27AA DUP2 PUSH2 0x2442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27CA DUP2 PUSH2 0x2465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27EA DUP2 PUSH2 0x24CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280A DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x282A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x284A DUP2 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x257D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 PUSH2 0x2887 JUMP JUMPDEST SWAP1 POP PUSH2 0x2882 DUP3 DUP3 PUSH2 0x2B89 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28AC JUMPI PUSH2 0x28AB PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH2 0x28B5 DUP3 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28DD JUMPI PUSH2 0x28DC PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST PUSH2 0x28E6 DUP3 PUSH2 0x2C8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x294C DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2997 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x29A2 DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29B2 JUMPI PUSH2 0x29B1 PUSH2 0x2BE9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C8 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x29D3 DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2ABF JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2ABF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x2BBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A56 DUP3 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEA DUP3 PUSH2 0x2AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFC DUP3 PUSH2 0x2B03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0E DUP3 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B42 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B27 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B51 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B6F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2B83 JUMPI PUSH2 0x2B82 PUSH2 0x2C18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B92 DUP3 PUSH2 0x2C8A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2C47 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x30AD DUP2 PUSH2 0x2A4B JUMP JUMPDEST DUP2 EQ PUSH2 0x30B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30C4 DUP2 PUSH2 0x2A5D JUMP JUMPDEST DUP2 EQ PUSH2 0x30CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30DB DUP2 PUSH2 0x2A69 JUMP JUMPDEST DUP2 EQ PUSH2 0x30E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30F2 DUP2 PUSH2 0x2A95 JUMP JUMPDEST DUP2 EQ PUSH2 0x30FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3109 DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP2 EQ PUSH2 0x3114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3120 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x312B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x2E STOP 0xBF SWAP2 CREATE2 PUSH26 0x284A99DFDAB8F5E4717FADD331E1808D8C5E04CA5554C529AE17 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
          "sourceMap": "286:3084:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;923:235:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1164:345:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5004:179:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2950:99:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3273:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3162:105:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1643:1272:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3055:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;434:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;923:235:19:-;1015:9;975:21;:37;997:14;;975:37;;;;;;;;;;;:49;;;;1034:37;1044:10;1056:14;;1034:9;:37::i;:::-;1099:1;1081:14;;:19;;;;;;;:::i;:::-;;;;;;;;1125:14;;1115:36;1141:9;1115:36;;;;;;:::i;:::-;;;;;;;;923:235;:::o;4612:326:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;1164:345:19:-;1241:13;1266:21;:52;;;;;;;;;;;;;;;;;;;1328:30;1361:73;1418:3;1401:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1361:13;:73::i;:::-;1328:106;;1475:7;1484:16;1458:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1444:58;;;;1164:345;;;:::o;5004:179:6:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;2950:99:19:-;2997:13;3029;3022:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:99;:::o;3273:95::-;3321:7;3347:14;;3340:21;;3273:95;:::o;1929:204:6:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;3162:105:19:-;3207:21;3248:11;3240:20;;3162:105;:::o;4169:153:6:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1643:1272:19:-;1730:13;1760:16;1768:7;1760;:16::i;:::-;1755:63;;1785:33;;;;;;;;;;;;;;1755:63;1876:12;1996:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1829:196;;;;;;2036:22;2061:13;2036:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:21;:30;2119:7;2097:30;;;;;;;;;;;;2088:5;:39;2084:95;;2154:14;2143:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:95;2270:10;:8;:10::i;:::-;2302:574;2471:6;:4;:6::i;:::-;2752:8;2376:452;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2302:13;:574::i;:::-;2232:662;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2189:719;;;;1643:1272;;;:::o;3055:101::-;3103:13;3135:14;3128:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3055:101;:::o;434:55::-;;;;;;;;;;;;;;;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;777:1861:17:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:6:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;1515:122:19:-;1567:13;1592:38;;;;;;;;;;;;;;;;;;;1515:122;:::o;8460:309:6:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9091:920::-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;1175:320:11:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:22:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:412::-;501:5;526:66;542:49;584:6;542:49;:::i;:::-;526:66;:::i;:::-;517:75;;615:6;608:5;601:21;653:4;646:5;642:16;691:3;682:6;677:3;673:16;670:25;667:112;;;698:79;;:::i;:::-;667:112;788:41;822:6;817:3;812;788:41;:::i;:::-;507:328;423:412;;;;;:::o;841:139::-;887:5;925:6;912:20;903:29;;941:33;968:5;941:33;:::i;:::-;841:139;;;;:::o;986:133::-;1029:5;1067:6;1054:20;1045:29;;1083:30;1107:5;1083:30;:::i;:::-;986:133;;;;:::o;1125:137::-;1170:5;1208:6;1195:20;1186:29;;1224:32;1250:5;1224:32;:::i;:::-;1125:137;;;;:::o;1268:141::-;1324:5;1355:6;1349:13;1340:22;;1371:32;1397:5;1371:32;:::i;:::-;1268:141;;;;:::o;1428:338::-;1483:5;1532:3;1525:4;1517:6;1513:17;1509:27;1499:122;;1540:79;;:::i;:::-;1499:122;1657:6;1644:20;1682:78;1756:3;1748:6;1741:4;1733:6;1729:17;1682:78;:::i;:::-;1673:87;;1489:277;1428:338;;;;:::o;1772:137::-;1817:5;1855:6;1842:20;1833:29;;1871:32;1897:5;1871:32;:::i;:::-;1772:137;;;;:::o;1915:141::-;1971:5;2002:6;1996:13;1987:22;;2018:32;2044:5;2018:32;:::i;:::-;1915:141;;;;:::o;2076:340::-;2132:5;2181:3;2174:4;2166:6;2162:17;2158:27;2148:122;;2189:79;;:::i;:::-;2148:122;2306:6;2293:20;2331:79;2406:3;2398:6;2391:4;2383:6;2379:17;2331:79;:::i;:::-;2322:88;;2138:278;2076:340;;;;:::o;2422:139::-;2468:5;2506:6;2493:20;2484:29;;2522:33;2549:5;2522:33;:::i;:::-;2422:139;;;;:::o;2567:143::-;2624:5;2655:6;2649:13;2640:22;;2671:33;2698:5;2671:33;:::i;:::-;2567:143;;;;:::o;2716:141::-;2772:5;2803:6;2797:13;2788:22;;2819:32;2845:5;2819:32;:::i;:::-;2716:141;;;;:::o;2863:329::-;2922:6;2971:2;2959:9;2950:7;2946:23;2942:32;2939:119;;;2977:79;;:::i;:::-;2939:119;3097:1;3122:53;3167:7;3158:6;3147:9;3143:22;3122:53;:::i;:::-;3112:63;;3068:117;2863:329;;;;:::o;3198:474::-;3266:6;3274;3323:2;3311:9;3302:7;3298:23;3294:32;3291:119;;;3329:79;;:::i;:::-;3291:119;3449:1;3474:53;3519:7;3510:6;3499:9;3495:22;3474:53;:::i;:::-;3464:63;;3420:117;3576:2;3602:53;3647:7;3638:6;3627:9;3623:22;3602:53;:::i;:::-;3592:63;;3547:118;3198:474;;;;;:::o;3678:619::-;3755:6;3763;3771;3820:2;3808:9;3799:7;3795:23;3791:32;3788:119;;;3826:79;;:::i;:::-;3788:119;3946:1;3971:53;4016:7;4007:6;3996:9;3992:22;3971:53;:::i;:::-;3961:63;;3917:117;4073:2;4099:53;4144:7;4135:6;4124:9;4120:22;4099:53;:::i;:::-;4089:63;;4044:118;4201:2;4227:53;4272:7;4263:6;4252:9;4248:22;4227:53;:::i;:::-;4217:63;;4172:118;3678:619;;;;;:::o;4303:943::-;4398:6;4406;4414;4422;4471:3;4459:9;4450:7;4446:23;4442:33;4439:120;;;4478:79;;:::i;:::-;4439:120;4598:1;4623:53;4668:7;4659:6;4648:9;4644:22;4623:53;:::i;:::-;4613:63;;4569:117;4725:2;4751:53;4796:7;4787:6;4776:9;4772:22;4751:53;:::i;:::-;4741:63;;4696:118;4853:2;4879:53;4924:7;4915:6;4904:9;4900:22;4879:53;:::i;:::-;4869:63;;4824:118;5009:2;4998:9;4994:18;4981:32;5040:18;5032:6;5029:30;5026:117;;;5062:79;;:::i;:::-;5026:117;5167:62;5221:7;5212:6;5201:9;5197:22;5167:62;:::i;:::-;5157:72;;4952:287;4303:943;;;;;;;:::o;5252:468::-;5317:6;5325;5374:2;5362:9;5353:7;5349:23;5345:32;5342:119;;;5380:79;;:::i;:::-;5342:119;5500:1;5525:53;5570:7;5561:6;5550:9;5546:22;5525:53;:::i;:::-;5515:63;;5471:117;5627:2;5653:50;5695:7;5686:6;5675:9;5671:22;5653:50;:::i;:::-;5643:60;;5598:115;5252:468;;;;;:::o;5726:474::-;5794:6;5802;5851:2;5839:9;5830:7;5826:23;5822:32;5819:119;;;5857:79;;:::i;:::-;5819:119;5977:1;6002:53;6047:7;6038:6;6027:9;6023:22;6002:53;:::i;:::-;5992:63;;5948:117;6104:2;6130:53;6175:7;6166:6;6155:9;6151:22;6130:53;:::i;:::-;6120:63;;6075:118;5726:474;;;;;:::o;6206:327::-;6264:6;6313:2;6301:9;6292:7;6288:23;6284:32;6281:119;;;6319:79;;:::i;:::-;6281:119;6439:1;6464:52;6508:7;6499:6;6488:9;6484:22;6464:52;:::i;:::-;6454:62;;6410:116;6206:327;;;;:::o;6539:349::-;6608:6;6657:2;6645:9;6636:7;6632:23;6628:32;6625:119;;;6663:79;;:::i;:::-;6625:119;6783:1;6808:63;6863:7;6854:6;6843:9;6839:22;6808:63;:::i;:::-;6798:73;;6754:127;6539:349;;;;:::o;6894:327::-;6952:6;7001:2;6989:9;6980:7;6976:23;6972:32;6969:119;;;7007:79;;:::i;:::-;6969:119;7127:1;7152:52;7196:7;7187:6;7176:9;7172:22;7152:52;:::i;:::-;7142:62;;7098:116;6894:327;;;;:::o;7227:509::-;7296:6;7345:2;7333:9;7324:7;7320:23;7316:32;7313:119;;;7351:79;;:::i;:::-;7313:119;7499:1;7488:9;7484:17;7471:31;7529:18;7521:6;7518:30;7515:117;;;7551:79;;:::i;:::-;7515:117;7656:63;7711:7;7702:6;7691:9;7687:22;7656:63;:::i;:::-;7646:73;;7442:287;7227:509;;;;:::o;7742:329::-;7801:6;7850:2;7838:9;7829:7;7825:23;7821:32;7818:119;;;7856:79;;:::i;:::-;7818:119;7976:1;8001:53;8046:7;8037:6;8026:9;8022:22;8001:53;:::i;:::-;7991:63;;7947:117;7742:329;;;;:::o;8077:971::-;8180:6;8188;8196;8204;8212;8261:3;8249:9;8240:7;8236:23;8232:33;8229:120;;;8268:79;;:::i;:::-;8229:120;8388:1;8413:63;8468:7;8459:6;8448:9;8444:22;8413:63;:::i;:::-;8403:73;;8359:127;8525:2;8551:63;8606:7;8597:6;8586:9;8582:22;8551:63;:::i;:::-;8541:73;;8496:128;8663:2;8689:64;8745:7;8736:6;8725:9;8721:22;8689:64;:::i;:::-;8679:74;;8634:129;8802:2;8828:64;8884:7;8875:6;8864:9;8860:22;8828:64;:::i;:::-;8818:74;;8773:129;8941:3;8968:63;9023:7;9014:6;9003:9;8999:22;8968:63;:::i;:::-;8958:73;;8912:129;8077:971;;;;;;;;:::o;9054:118::-;9141:24;9159:5;9141:24;:::i;:::-;9136:3;9129:37;9054:118;;:::o;9178:109::-;9259:21;9274:5;9259:21;:::i;:::-;9254:3;9247:34;9178:109;;:::o;9293:360::-;9379:3;9407:38;9439:5;9407:38;:::i;:::-;9461:70;9524:6;9519:3;9461:70;:::i;:::-;9454:77;;9540:52;9585:6;9580:3;9573:4;9566:5;9562:16;9540:52;:::i;:::-;9617:29;9639:6;9617:29;:::i;:::-;9612:3;9608:39;9601:46;;9383:270;9293:360;;;;:::o;9659:189::-;9775:66;9835:5;9775:66;:::i;:::-;9770:3;9763:79;9659:189;;:::o;9854:115::-;9939:23;9956:5;9939:23;:::i;:::-;9934:3;9927:36;9854:115;;:::o;9975:364::-;10063:3;10091:39;10124:5;10091:39;:::i;:::-;10146:71;10210:6;10205:3;10146:71;:::i;:::-;10139:78;;10226:52;10271:6;10266:3;10259:4;10252:5;10248:16;10226:52;:::i;:::-;10303:29;10325:6;10303:29;:::i;:::-;10298:3;10294:39;10287:46;;10067:272;9975:364;;;;:::o;10345:377::-;10451:3;10479:39;10512:5;10479:39;:::i;:::-;10534:89;10616:6;10611:3;10534:89;:::i;:::-;10527:96;;10632:52;10677:6;10672:3;10665:4;10658:5;10654:16;10632:52;:::i;:::-;10709:6;10704:3;10700:16;10693:23;;10455:267;10345:377;;;;:::o;10728:366::-;10870:3;10891:67;10955:2;10950:3;10891:67;:::i;:::-;10884:74;;10967:93;11056:3;10967:93;:::i;:::-;11085:2;11080:3;11076:12;11069:19;;10728:366;;;:::o;11100:400::-;11260:3;11281:84;11363:1;11358:3;11281:84;:::i;:::-;11274:91;;11374:93;11463:3;11374:93;:::i;:::-;11492:1;11487:3;11483:11;11476:18;;11100:400;;;:::o;11506:366::-;11648:3;11669:67;11733:2;11728:3;11669:67;:::i;:::-;11662:74;;11745:93;11834:3;11745:93;:::i;:::-;11863:2;11858:3;11854:12;11847:19;;11506:366;;;:::o;11878:::-;12020:3;12041:67;12105:2;12100:3;12041:67;:::i;:::-;12034:74;;12117:93;12206:3;12117:93;:::i;:::-;12235:2;12230:3;12226:12;12219:19;;11878:366;;;:::o;12250:::-;12392:3;12413:67;12477:2;12472:3;12413:67;:::i;:::-;12406:74;;12489:93;12578:3;12489:93;:::i;:::-;12607:2;12602:3;12598:12;12591:19;;12250:366;;;:::o;12622:::-;12764:3;12785:67;12849:2;12844:3;12785:67;:::i;:::-;12778:74;;12861:93;12950:3;12861:93;:::i;:::-;12979:2;12974:3;12970:12;12963:19;;12622:366;;;:::o;12994:::-;13136:3;13157:67;13221:2;13216:3;13157:67;:::i;:::-;13150:74;;13233:93;13322:3;13233:93;:::i;:::-;13351:2;13346:3;13342:12;13335:19;;12994:366;;;:::o;13366:::-;13508:3;13529:67;13593:2;13588:3;13529:67;:::i;:::-;13522:74;;13605:93;13694:3;13605:93;:::i;:::-;13723:2;13718:3;13714:12;13707:19;;13366:366;;;:::o;13738:402::-;13898:3;13919:85;14001:2;13996:3;13919:85;:::i;:::-;13912:92;;14013:93;14102:3;14013:93;:::i;:::-;14131:2;14126:3;14122:12;14115:19;;13738:402;;;:::o;14146:400::-;14306:3;14327:84;14409:1;14404:3;14327:84;:::i;:::-;14320:91;;14420:93;14509:3;14420:93;:::i;:::-;14538:1;14533:3;14529:11;14522:18;;14146:400;;;:::o;14552:366::-;14694:3;14715:67;14779:2;14774:3;14715:67;:::i;:::-;14708:74;;14791:93;14880:3;14791:93;:::i;:::-;14909:2;14904:3;14900:12;14893:19;;14552:366;;;:::o;14924:::-;15066:3;15087:67;15151:2;15146:3;15087:67;:::i;:::-;15080:74;;15163:93;15252:3;15163:93;:::i;:::-;15281:2;15276:3;15272:12;15265:19;;14924:366;;;:::o;15296:::-;15438:3;15459:67;15523:2;15518:3;15459:67;:::i;:::-;15452:74;;15535:93;15624:3;15535:93;:::i;:::-;15653:2;15648:3;15644:12;15637:19;;15296:366;;;:::o;15668:::-;15810:3;15831:67;15895:2;15890:3;15831:67;:::i;:::-;15824:74;;15907:93;15996:3;15907:93;:::i;:::-;16025:2;16020:3;16016:12;16009:19;;15668:366;;;:::o;16040:402::-;16200:3;16221:85;16303:2;16298:3;16221:85;:::i;:::-;16214:92;;16315:93;16404:3;16315:93;:::i;:::-;16433:2;16428:3;16424:12;16417:19;;16040:402;;;:::o;16448:118::-;16535:24;16553:5;16535:24;:::i;:::-;16530:3;16523:37;16448:118;;:::o;16572:275::-;16704:3;16726:95;16817:3;16808:6;16726:95;:::i;:::-;16719:102;;16838:3;16831:10;;16572:275;;;;:::o;16853:435::-;17033:3;17055:95;17146:3;17137:6;17055:95;:::i;:::-;17048:102;;17167:95;17258:3;17249:6;17167:95;:::i;:::-;17160:102;;17279:3;17272:10;;16853:435;;;;;:::o;17294:1499::-;17878:3;17900:148;18044:3;17900:148;:::i;:::-;17893:155;;18065:95;18156:3;18147:6;18065:95;:::i;:::-;18058:102;;18177:148;18321:3;18177:148;:::i;:::-;18170:155;;18342:148;18486:3;18342:148;:::i;:::-;18335:155;;18507:95;18598:3;18589:6;18507:95;:::i;:::-;18500:102;;18619:148;18763:3;18619:148;:::i;:::-;18612:155;;18784:3;18777:10;;17294:1499;;;;;:::o;18799:222::-;18892:4;18930:2;18919:9;18915:18;18907:26;;18943:71;19011:1;19000:9;18996:17;18987:6;18943:71;:::i;:::-;18799:222;;;;:::o;19027:640::-;19222:4;19260:3;19249:9;19245:19;19237:27;;19274:71;19342:1;19331:9;19327:17;19318:6;19274:71;:::i;:::-;19355:72;19423:2;19412:9;19408:18;19399:6;19355:72;:::i;:::-;19437;19505:2;19494:9;19490:18;19481:6;19437:72;:::i;:::-;19556:9;19550:4;19546:20;19541:2;19530:9;19526:18;19519:48;19584:76;19655:4;19646:6;19584:76;:::i;:::-;19576:84;;19027:640;;;;;;;:::o;19673:210::-;19760:4;19798:2;19787:9;19783:18;19775:26;;19811:65;19873:1;19862:9;19858:17;19849:6;19811:65;:::i;:::-;19673:210;;;;:::o;19889:280::-;20011:4;20049:2;20038:9;20034:18;20026:26;;20062:100;20159:1;20148:9;20144:17;20135:6;20062:100;:::i;:::-;19889:280;;;;:::o;20175:218::-;20266:4;20304:2;20293:9;20289:18;20281:26;;20317:69;20383:1;20372:9;20368:17;20359:6;20317:69;:::i;:::-;20175:218;;;;:::o;20399:313::-;20512:4;20550:2;20539:9;20535:18;20527:26;;20599:9;20593:4;20589:20;20585:1;20574:9;20570:17;20563:47;20627:78;20700:4;20691:6;20627:78;:::i;:::-;20619:86;;20399:313;;;;:::o;20718:419::-;20884:4;20922:2;20911:9;20907:18;20899:26;;20971:9;20965:4;20961:20;20957:1;20946:9;20942:17;20935:47;20999:131;21125:4;20999:131;:::i;:::-;20991:139;;20718:419;;;:::o;21143:::-;21309:4;21347:2;21336:9;21332:18;21324:26;;21396:9;21390:4;21386:20;21382:1;21371:9;21367:17;21360:47;21424:131;21550:4;21424:131;:::i;:::-;21416:139;;21143:419;;;:::o;21568:::-;21734:4;21772:2;21761:9;21757:18;21749:26;;21821:9;21815:4;21811:20;21807:1;21796:9;21792:17;21785:47;21849:131;21975:4;21849:131;:::i;:::-;21841:139;;21568:419;;;:::o;21993:::-;22159:4;22197:2;22186:9;22182:18;22174:26;;22246:9;22240:4;22236:20;22232:1;22221:9;22217:17;22210:47;22274:131;22400:4;22274:131;:::i;:::-;22266:139;;21993:419;;;:::o;22418:::-;22584:4;22622:2;22611:9;22607:18;22599:26;;22671:9;22665:4;22661:20;22657:1;22646:9;22642:17;22635:47;22699:131;22825:4;22699:131;:::i;:::-;22691:139;;22418:419;;;:::o;22843:::-;23009:4;23047:2;23036:9;23032:18;23024:26;;23096:9;23090:4;23086:20;23082:1;23071:9;23067:17;23060:47;23124:131;23250:4;23124:131;:::i;:::-;23116:139;;22843:419;;;:::o;23268:::-;23434:4;23472:2;23461:9;23457:18;23449:26;;23521:9;23515:4;23511:20;23507:1;23496:9;23492:17;23485:47;23549:131;23675:4;23549:131;:::i;:::-;23541:139;;23268:419;;;:::o;23693:::-;23859:4;23897:2;23886:9;23882:18;23874:26;;23946:9;23940:4;23936:20;23932:1;23921:9;23917:17;23910:47;23974:131;24100:4;23974:131;:::i;:::-;23966:139;;23693:419;;;:::o;24118:::-;24284:4;24322:2;24311:9;24307:18;24299:26;;24371:9;24365:4;24361:20;24357:1;24346:9;24342:17;24335:47;24399:131;24525:4;24399:131;:::i;:::-;24391:139;;24118:419;;;:::o;24543:::-;24709:4;24747:2;24736:9;24732:18;24724:26;;24796:9;24790:4;24786:20;24782:1;24771:9;24767:17;24760:47;24824:131;24950:4;24824:131;:::i;:::-;24816:139;;24543:419;;;:::o;24968:::-;25134:4;25172:2;25161:9;25157:18;25149:26;;25221:9;25215:4;25211:20;25207:1;25196:9;25192:17;25185:47;25249:131;25375:4;25249:131;:::i;:::-;25241:139;;24968:419;;;:::o;25393:222::-;25486:4;25524:2;25513:9;25509:18;25501:26;;25537:71;25605:1;25594:9;25590:17;25581:6;25537:71;:::i;:::-;25393:222;;;;:::o;25621:129::-;25655:6;25682:20;;:::i;:::-;25672:30;;25711:33;25739:4;25731:6;25711:33;:::i;:::-;25621:129;;;:::o;25756:75::-;25789:6;25822:2;25816:9;25806:19;;25756:75;:::o;25837:307::-;25898:4;25988:18;25980:6;25977:30;25974:56;;;26010:18;;:::i;:::-;25974:56;26048:29;26070:6;26048:29;:::i;:::-;26040:37;;26132:4;26126;26122:15;26114:23;;25837:307;;;:::o;26150:308::-;26212:4;26302:18;26294:6;26291:30;26288:56;;;26324:18;;:::i;:::-;26288:56;26362:29;26384:6;26362:29;:::i;:::-;26354:37;;26446:4;26440;26436:15;26428:23;;26150:308;;;:::o;26464:98::-;26515:6;26549:5;26543:12;26533:22;;26464:98;;;:::o;26568:99::-;26620:6;26654:5;26648:12;26638:22;;26568:99;;;:::o;26673:168::-;26756:11;26790:6;26785:3;26778:19;26830:4;26825:3;26821:14;26806:29;;26673:168;;;;:::o;26847:169::-;26931:11;26965:6;26960:3;26953:19;27005:4;27000:3;26996:14;26981:29;;26847:169;;;;:::o;27022:148::-;27124:11;27161:3;27146:18;;27022:148;;;;:::o;27176:305::-;27216:3;27235:20;27253:1;27235:20;:::i;:::-;27230:25;;27269:20;27287:1;27269:20;:::i;:::-;27264:25;;27423:1;27355:66;27351:74;27348:1;27345:81;27342:107;;;27429:18;;:::i;:::-;27342:107;27473:1;27470;27466:9;27459:16;;27176:305;;;;:::o;27487:185::-;27527:1;27544:20;27562:1;27544:20;:::i;:::-;27539:25;;27578:20;27596:1;27578:20;:::i;:::-;27573:25;;27617:1;27607:35;;27622:18;;:::i;:::-;27607:35;27664:1;27661;27657:9;27652:14;;27487:185;;;;:::o;27678:348::-;27718:7;27741:20;27759:1;27741:20;:::i;:::-;27736:25;;27775:20;27793:1;27775:20;:::i;:::-;27770:25;;27963:1;27895:66;27891:74;27888:1;27885:81;27880:1;27873:9;27866:17;27862:105;27859:131;;;27970:18;;:::i;:::-;27859:131;28018:1;28015;28011:9;28000:20;;27678:348;;;;:::o;28032:191::-;28072:4;28092:20;28110:1;28092:20;:::i;:::-;28087:25;;28126:20;28144:1;28126:20;:::i;:::-;28121:25;;28165:1;28162;28159:8;28156:34;;;28170:18;;:::i;:::-;28156:34;28215:1;28212;28208:9;28200:17;;28032:191;;;;:::o;28229:96::-;28266:7;28295:24;28313:5;28295:24;:::i;:::-;28284:35;;28229:96;;;:::o;28331:90::-;28365:7;28408:5;28401:13;28394:21;28383:32;;28331:90;;;:::o;28427:149::-;28463:7;28503:66;28496:5;28492:78;28481:89;;28427:149;;;:::o;28582:76::-;28618:7;28647:5;28636:16;;28582:76;;;:::o;28664:126::-;28701:7;28741:42;28734:5;28730:54;28719:65;;28664:126;;;:::o;28796:77::-;28833:7;28862:5;28851:16;;28796:77;;;:::o;28879:105::-;28915:7;28955:22;28948:5;28944:34;28933:45;;28879:105;;;:::o;28990:155::-;29069:9;29102:37;29133:5;29102:37;:::i;:::-;29089:50;;28990:155;;;:::o;29151:126::-;29201:9;29234:37;29265:5;29234:37;:::i;:::-;29221:50;;29151:126;;;:::o;29283:113::-;29333:9;29366:24;29384:5;29366:24;:::i;:::-;29353:37;;29283:113;;;:::o;29402:154::-;29486:6;29481:3;29476;29463:30;29548:1;29539:6;29534:3;29530:16;29523:27;29402:154;;;:::o;29562:307::-;29630:1;29640:113;29654:6;29651:1;29648:13;29640:113;;;29739:1;29734:3;29730:11;29724:18;29720:1;29715:3;29711:11;29704:39;29676:2;29673:1;29669:10;29664:15;;29640:113;;;29771:6;29768:1;29765:13;29762:101;;;29851:1;29842:6;29837:3;29833:16;29826:27;29762:101;29611:258;29562:307;;;:::o;29875:320::-;29919:6;29956:1;29950:4;29946:12;29936:22;;30003:1;29997:4;29993:12;30024:18;30014:81;;30080:4;30072:6;30068:17;30058:27;;30014:81;30142:2;30134:6;30131:14;30111:18;30108:38;30105:84;;;30161:18;;:::i;:::-;30105:84;29926:269;29875:320;;;:::o;30201:281::-;30284:27;30306:4;30284:27;:::i;:::-;30276:6;30272:40;30414:6;30402:10;30399:22;30378:18;30366:10;30363:34;30360:62;30357:88;;;30425:18;;:::i;:::-;30357:88;30465:10;30461:2;30454:22;30244:238;30201:281;;:::o;30488:180::-;30536:77;30533:1;30526:88;30633:4;30630:1;30623:15;30657:4;30654:1;30647:15;30674:180;30722:77;30719:1;30712:88;30819:4;30816:1;30809:15;30843:4;30840:1;30833:15;30860:180;30908:77;30905:1;30898:88;31005:4;31002:1;30995:15;31029:4;31026:1;31019:15;31046:180;31094:77;31091:1;31084:88;31191:4;31188:1;31181:15;31215:4;31212:1;31205:15;31232:117;31341:1;31338;31331:12;31355:117;31464:1;31461;31454:12;31478:117;31587:1;31584;31577:12;31601:117;31710:1;31707;31700:12;31724:102;31765:6;31816:2;31812:7;31807:2;31800:5;31796:14;31792:28;31782:38;;31724:102;;;:::o;31832:232::-;31972:34;31968:1;31960:6;31956:14;31949:58;32041:15;32036:2;32028:6;32024:15;32017:40;31832:232;:::o;32070:214::-;32210:66;32206:1;32198:6;32194:14;32187:90;32070:214;:::o;32290:237::-;32430:34;32426:1;32418:6;32414:14;32407:58;32499:20;32494:2;32486:6;32482:15;32475:45;32290:237;:::o;32533:224::-;32673:34;32669:1;32661:6;32657:14;32650:58;32742:7;32737:2;32729:6;32725:15;32718:32;32533:224;:::o;32763:178::-;32903:30;32899:1;32891:6;32887:14;32880:54;32763:178;:::o;32947:223::-;33087:34;33083:1;33075:6;33071:14;33064:58;33156:6;33151:2;33143:6;33139:15;33132:31;32947:223;:::o;33176:175::-;33316:27;33312:1;33304:6;33300:14;33293:51;33176:175;:::o;33357:228::-;33497:34;33493:1;33485:6;33481:14;33474:58;33566:11;33561:2;33553:6;33549:15;33542:36;33357:228;:::o;33591:384::-;33731:66;33727:1;33719:6;33715:14;33708:90;33832:34;33827:2;33819:6;33815:15;33808:59;33901:66;33896:2;33888:6;33884:15;33877:91;33591:384;:::o;33981:214::-;34121:66;34117:1;34109:6;34105:14;34098:90;33981:214;:::o;34201:182::-;34341:34;34337:1;34329:6;34325:14;34318:58;34201:182;:::o;34389:174::-;34529:26;34525:1;34517:6;34513:14;34506:50;34389:174;:::o;34569:220::-;34709:34;34705:1;34697:6;34693:14;34686:58;34778:3;34773:2;34765:6;34761:15;34754:28;34569:220;:::o;34795:248::-;34935:34;34931:1;34923:6;34919:14;34912:58;35004:31;34999:2;34991:6;34987:15;34980:56;34795:248;:::o;35049:416::-;35189:66;35185:1;35177:6;35173:14;35166:90;35290:66;35285:2;35277:6;35273:15;35266:91;35391:66;35386:2;35378:6;35374:15;35367:91;35049:416;:::o;35471:122::-;35544:24;35562:5;35544:24;:::i;:::-;35537:5;35534:35;35524:63;;35583:1;35580;35573:12;35524:63;35471:122;:::o;35599:116::-;35669:21;35684:5;35669:21;:::i;:::-;35662:5;35659:32;35649:60;;35705:1;35702;35695:12;35649:60;35599:116;:::o;35721:120::-;35793:23;35810:5;35793:23;:::i;:::-;35786:5;35783:34;35773:62;;35831:1;35828;35821:12;35773:62;35721:120;:::o;35847:::-;35919:23;35936:5;35919:23;:::i;:::-;35912:5;35909:34;35899:62;;35957:1;35954;35947:12;35899:62;35847:120;:::o;35973:122::-;36046:24;36064:5;36046:24;:::i;:::-;36039:5;36036:35;36026:63;;36085:1;36082;36075:12;36026:63;35973:122;:::o;36101:120::-;36173:23;36190:5;36173:23;:::i;:::-;36166:5;36163:34;36153:62;;36211:1;36208;36201:12;36153:62;36101:120;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "2541600",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2924",
            "getApproved(uint256)": "5300",
            "getHighImageURI()": "infinite",
            "getPriceFeed()": "infinite",
            "getTokenCounter()": "2460",
            "getlowImageURI()": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "mintNft(int256)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "3091",
            "s_tokenIdToHighValues(uint256)": "2853",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "supportsInterface(bytes4)": "797",
            "svgToImageURI(string)": "infinite",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
          },
          "internal": {
            "_baseURI()": "infinite"
          }
        },
        "methodIdentifiers": {
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "getApproved(uint256)": "081812fc",
          "getHighImageURI()": "d77843c5",
          "getPriceFeed()": "9e87a5cd",
          "getTokenCounter()": "6e02007d",
          "getlowImageURI()": "6bed5460",
          "isApprovedForAll(address,address)": "e985e9c5",
          "mintNft(int256)": "1e930812",
          "name()": "06fdde03",
          "ownerOf(uint256)": "6352211e",
          "s_tokenIdToHighValues(uint256)": "e4e65b0c",
          "safeTransferFrom(address,address,uint256)": "42842e0e",
          "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
          "setApprovalForAll(address,bool)": "a22cb465",
          "supportsInterface(bytes4)": "01ffc9a7",
          "svgToImageURI(string)": "30d871c6",
          "symbol()": "95d89b41",
          "tokenURI(uint256)": "c87b56dd",
          "transferFrom(address,address,uint256)": "23b872dd"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lowSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"highSvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DynamicSgvNft__TokenURINotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getlowImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_tokenIdToHighValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DynamicSvgNft.sol\":\"DynamicSvgNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"},\"contracts/DynamicSvgNft.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror DynamicSgvNft__TokenURINotFound();\\n\\ncontract DynamicSvgNft is ERC721 {\\n    uint256 private s_tokenCounter = 0;\\n    string private s_lowImageURI;\\n    string private s_highImageURI;\\n    mapping(uint256 => int256) public s_tokenIdToHighValues;\\n    AggregatorV3Interface internal immutable i_priceFeed;\\n\\n    event NftMinted(uint256 indexed tokenId, int256 highValue);\\n\\n    constructor(\\n        address priceFeed,\\n        string memory lowSvg,\\n        string memory highSvg\\n    ) ERC721(\\\"Dynamic SVG NFT\\\", \\\"DSN\\\") {\\n        s_lowImageURI = svgToImageURI(lowSvg);\\n        s_highImageURI = svgToImageURI(highSvg);\\n        i_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    function mintNft(int256 highValue) public {\\n        s_tokenIdToHighValues[s_tokenCounter] = highValue;\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter += 1;\\n        emit NftMinted(s_tokenCounter, highValue);\\n    }\\n\\n    function svgToImageURI(\\n        string memory svg\\n    ) public pure returns (string memory) {\\n        string memory baseURL = \\\"data:image/svg+xml;base64,\\\";\\n        string memory svgBase64Encoded = Base64.encode(\\n            bytes(string(abi.encodePacked(svg)))\\n        );\\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view virtual override returns (string memory) {\\n        if (!_exists(tokenId)) revert DynamicSgvNft__TokenURINotFound();\\n\\n        (\\n            ,\\n            /*uint80 roundID*/ int256 price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\n            ,\\n            ,\\n\\n        ) = i_priceFeed.latestRoundData();\\n\\n        string memory imageURI = s_lowImageURI;\\n        if (price >= s_tokenIdToHighValues[tokenId]) {\\n            imageURI = s_highImageURI;\\n        }\\n\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{\\\"name\\\":\\\"',\\n                                name(), // You can add whatever name here\\n                                '\\\", \\\"description\\\":\\\"An NFT that changes based on the Chainlink Feed\\\", ',\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"coolness\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\n                                imageURI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    // View & Pure functions\\n    function getlowImageURI() public view returns (string memory) {\\n        return s_lowImageURI;\\n    }\\n\\n    function getHighImageURI() public view returns (string memory) {\\n        return s_highImageURI;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return (i_priceFeed);\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0x9e89beef1a32e9f6dbfd6fc18768c55b639331e00591036bef3349616d9da0dc\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 1296,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1298,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1302,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_owners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1306,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_balances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1310,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1316,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 4120,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "s_tokenCounter",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4122,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "s_lowImageURI",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 4124,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "s_highImageURI",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 4128,
            "contract": "contracts/DynamicSvgNft.sol:DynamicSvgNft",
            "label": "s_tokenIdToHighValues",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_int256)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_int256": {
            "encoding": "inplace",
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_int256)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => int256)",
            "numberOfBytes": "32",
            "value": "t_int256"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\"\n    },\n    \"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\"\n    },\n    \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\"\n    },\n    \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n  uint16 public immutable MAX_CONSUMERS = 100;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n  error TooManyConsumers();\\n  error InvalidConsumer();\\n  error InvalidRandomWords();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event ConsumerAdded(uint64 indexed subId, address consumer);\\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n  mapping(uint64 => address[]) s_consumers; /* subId */ /* consumers */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\\n    address[] memory consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(\\n    uint256 _requestId,\\n    address _consumer,\\n    uint256[] memory _words\\n  ) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override onlyValidConsumer(_subId, msg.sender) returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n\\n    if (consumerIsAdded(_subId, _consumer)) {\\n      return;\\n    }\\n\\n    s_consumers[_subId].push(_consumer);\\n    emit ConsumerAdded(_subId, _consumer);\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer)\\n    external\\n    override\\n    onlySubOwner(_subId)\\n    onlyValidConsumer(_subId, _consumer)\\n  {\\n    address[] storage consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[consumers.length - 1];\\n        consumers[i] = last;\\n        consumers.pop();\\n        break;\\n      }\\n    }\\n\\n    emit ConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  function getConfig()\\n    external\\n    view\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (4, 2_500_000, 2_700, 33285);\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    view\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      0,\\n      0,\\n      0,\\n      0\\n    );\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\\n    return 4000000000000000; // 0.004 Ether\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\"\n    },\n    \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/ERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Address.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/Math.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\"\n    },\n    \"base64-sol/base64.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\"\n    },\n    \"contracts/BasicNft.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\n\\ncontract BasicNft is ERC721 {\\n    string constant TOKEN_URI =\\n        \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\n\\n    uint256 private s_tokenCounter = 0;\\n\\n    constructor() ERC721(\\\"Dogie\\\", \\\"Dog\\\") {}\\n\\n    function mintNft() public returns (uint256) {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter++;\\n        return s_tokenCounter;\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override returns (string memory) {\\n        // require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n        return TOKEN_URI;\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n\\n    function getTokenURI() public pure returns (string memory) {\\n        return TOKEN_URI;\\n    }\\n}\\n\"\n    },\n    \"contracts/DynamicSvgNft.sol\": {\n      \"content\": \"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror DynamicSgvNft__TokenURINotFound();\\n\\ncontract DynamicSvgNft is ERC721 {\\n    uint256 private s_tokenCounter = 0;\\n    string private s_lowImageURI;\\n    string private s_highImageURI;\\n    mapping(uint256 => int256) public s_tokenIdToHighValues;\\n    AggregatorV3Interface internal immutable i_priceFeed;\\n\\n    event NftMinted(uint256 indexed tokenId, int256 highValue);\\n\\n    constructor(\\n        address priceFeed,\\n        string memory lowSvg,\\n        string memory highSvg\\n    ) ERC721(\\\"Dynamic SVG NFT\\\", \\\"DSN\\\") {\\n        s_lowImageURI = svgToImageURI(lowSvg);\\n        s_highImageURI = svgToImageURI(highSvg);\\n        i_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    function mintNft(int256 highValue) public {\\n        s_tokenIdToHighValues[s_tokenCounter] = highValue;\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter += 1;\\n        emit NftMinted(s_tokenCounter, highValue);\\n    }\\n\\n    function svgToImageURI(\\n        string memory svg\\n    ) public pure returns (string memory) {\\n        string memory baseURL = \\\"data:image/svg+xml;base64,\\\";\\n        string memory svgBase64Encoded = Base64.encode(\\n            bytes(string(abi.encodePacked(svg)))\\n        );\\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view virtual override returns (string memory) {\\n        if (!_exists(tokenId)) revert DynamicSgvNft__TokenURINotFound();\\n\\n        (\\n            ,\\n            /*uint80 roundID*/ int256 price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\n            ,\\n            ,\\n\\n        ) = i_priceFeed.latestRoundData();\\n\\n        string memory imageURI = s_lowImageURI;\\n        if (price >= s_tokenIdToHighValues[tokenId]) {\\n            imageURI = s_highImageURI;\\n        }\\n\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{\\\"name\\\":\\\"',\\n                                name(), // You can add whatever name here\\n                                '\\\", \\\"description\\\":\\\"An NFT that changes based on the Chainlink Feed\\\", ',\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"coolness\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\n                                imageURI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    // View & Pure functions\\n    function getlowImageURI() public view returns (string memory) {\\n        return s_lowImageURI;\\n    }\\n\\n    function getHighImageURI() public view returns (string memory) {\\n        return s_highImageURI;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return (i_priceFeed);\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\"\n    },\n    \"contracts/RandomIpfsNft.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/**\\n * Import Libraries\\n */\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\n\\n// Error declaration\\nerror RandomIpfsNft__RangeOutOfBounds();\\nerror RandomIpfsNft__NeedMoreEth();\\nerror RandomIpfsNft__TransferFail();\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\n    // Type declaration\\n    enum Waifu {\\n        NUMBER_ONE,\\n        NUMBER_TWO,\\n        NUMBER_THREE\\n    }\\n\\n    /* Chainlink VRF varialbes */\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable i_subscriptionId;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 2;\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n\\n    /* States varialbes */\\n    uint256 private s_tokenCounter = 0;\\n    mapping(uint256 => address) public requestIdToAddress;\\n    uint256[] private s_requestIDs;\\n    uint256 private constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_waifuTokenUris;\\n    uint256 private immutable i_mintFee;\\n\\n    /* Events */\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Waifu indexed waifu, address Minter);\\n\\n    /* Functions */\\n    constructor(\\n        address vrfCoordinatorV2,\\n        bytes32 gasLane,\\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit,\\n        string[3] memory waifuTokenUris,\\n        uint256 mintFee\\n    )\\n        VRFConsumerBaseV2(vrfCoordinatorV2)\\n        ERC721(\\\"Random IPFS NFT Waifu\\\", \\\"RINW\\\")\\n    {\\n        i_gasLane = gasLane;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        s_waifuTokenUris = waifuTokenUris;\\n        i_mintFee = mintFee;\\n    }\\n\\n    function requestNft() public payable returns (uint256 requestId) {\\n        if (msg.value < i_mintFee) revert RandomIpfsNft__NeedMoreEth();\\n        requestId = i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        requestIdToAddress[requestId] = msg.sender;\\n        s_requestIDs.push(requestId);\\n        emit NftRequested(requestId, msg.sender);\\n    }\\n\\n    function fulfillRandomWords(\\n        uint256 requestId,\\n        uint256[] memory randomWords\\n    ) internal override {\\n        address waifuOwner = requestIdToAddress[requestId];\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        Waifu waifu = getWaifuFromModdedRng(moddedRng);\\n        _safeMint(waifuOwner, s_tokenCounter);\\n        _setTokenURI(s_tokenCounter, s_waifuTokenUris[uint256(waifu)]);\\n        s_tokenCounter++;\\n        emit NftMinted(waifu, waifuOwner);\\n    }\\n\\n    function getWaifuFromModdedRng(\\n        uint256 moddedRng\\n    ) internal pure returns (Waifu) {\\n        if (moddedRng <= 10) return Waifu(0);\\n        if (moddedRng <= 30) return Waifu(1);\\n        if (moddedRng <= MAX_CHANCE_VALUE) return Waifu(2);\\n        revert RandomIpfsNft__RangeOutOfBounds();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if (!success) revert RandomIpfsNft__TransferFail();\\n    }\\n\\n    // View & pure functions\\n    function getGasLane() public view returns (bytes32) {\\n        return i_gasLane;\\n    }\\n\\n    function getSubscriptionId() public view returns (uint64) {\\n        return i_subscriptionId;\\n    }\\n\\n    function getCallbackGasLimit() public view returns (uint32) {\\n        return i_callbackGasLimit;\\n    }\\n\\n    function getRequestConfirmations() public pure returns (uint16) {\\n        return REQUEST_CONFIRMATIONS;\\n    }\\n\\n    function getNumWords() public pure returns (uint32) {\\n        return NUM_WORDS;\\n    }\\n\\n    function getMintFee() public view returns (uint256) {\\n        return i_mintFee;\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n\\n    function getMaxChanceValue() public pure returns (uint256) {\\n        return MAX_CHANCE_VALUE;\\n    }\\n\\n    function getTokenURI(uint256 index) public view returns (string memory) {\\n        return s_waifuTokenUris[index];\\n    }\\n\\n    function getRequestId(uint256 index) public view returns (uint256) {\\n        return s_requestIDs[index];\\n    }\\n\\n    function getRequestIdOwner(\\n        uint256 requestId\\n    ) public view returns (address) {\\n        return requestIdToAddress[requestId];\\n    }\\n}\\n\"\n    },\n    \"contracts/test/VRFCoordinatorV2Mock.sol\": {\n      \"content\": \"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\\\";\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    },\n    \"libraries\": {}\n  }\n}",
      "solcInputHash": "f3ee75a1a81f742c3fa525df3f572de9",
      "transactionHash": "0xf153756f2d56ecb6090ee68a94512b9ce588db285ed739b367696bd0b3cf59d3",
      "args": [
        "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e",
        "<?xml version=\"1.0\" standalone=\"no\"?>\n<svg width=\"1024px\" height=\"1024px\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill=\"#333\" d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"/>\n  <path fill=\"#E6E6E6\" d=\"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zM288 421a48.01 48.01 0 0 1 96 0 48.01 48.01 0 0 1-96 0zm376 272h-48.1c-4.2 0-7.8-3.2-8.1-7.4C604 636.1 562.5 597 512 597s-92.1 39.1-95.8 88.6c-.3 4.2-3.9 7.4-8.1 7.4H360a8 8 0 0 1-8-8.4c4.4-84.3 74.5-151.6 160-151.6s155.6 67.3 160 151.6a8 8 0 0 1-8 8.4zm24-224a48.01 48.01 0 0 1 0-96 48.01 48.01 0 0 1 0 96z\"/>\n  <path fill=\"#333\" d=\"M288 421a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm224 112c-85.5 0-155.6 67.3-160 151.6a8 8 0 0 0 8 8.4h48.1c4.2 0 7.8-3.2 8.1-7.4 3.7-49.5 45.3-88.6 95.8-88.6s92 39.1 95.8 88.6c.3 4.2 3.9 7.4 8.1 7.4H664a8 8 0 0 0 8-8.4C667.6 600.3 597.5 533 512 533zm128-112a48 48 0 1 0 96 0 48 48 0 1 0-96 0z\"/>\n</svg>\n",
        "<svg viewBox=\"0 0 200 200\" width=\"400\"  height=\"400\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx=\"100\" cy=\"100\" fill=\"yellow\" r=\"78\" stroke=\"black\" stroke-width=\"3\"/>\n  <g class=\"eyes\">\n    <circle cx=\"61\" cy=\"82\" r=\"12\"/>\n    <circle cx=\"127\" cy=\"82\" r=\"12\"/>\n  </g>\n  <path d=\"m136.81 116.53c.69 26.17-64.11 42-81.52-.73\" style=\"fill:none; stroke: black; stroke-width: 3;\"/>\n</svg>"
      ]
    },
    "decoded": {
      "from": "0xFdfE044E26f65f4204ff95b19F0d84D964F24f11",
      "gasPrice": "266728134",
      "gasLimit": "4486628",
      "to": null,
      "value": "0",
      "nonce": 55,
      "data": "0x60a060405260006006553480156200001657600080fd5b5060405162003b4738038062003b4783398181016040528101906200003c9190620004e5565b6040518060400160405280600f81526020017f44796e616d696320535647204e465400000000000000000000000000000000008152506040518060400160405280600381526020017f44534e00000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000c0929190620003a0565b508060019080519060200190620000d9929190620003a0565b505050620000ed826200016e60201b60201c565b6007908051906020019062000104929190620003a0565b5062000116816200016e60201b60201c565b600890805190602001906200012d929190620003a0565b508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050506200093d565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525090506000620001e384604051602001620001c39190620005b6565b6040516020818303038152906040526200021260201b62000f3a1760201c565b90508181604051602001620001fa929190620005cf565b60405160208183030381529060405292505050919050565b606060008251141562000237576040518060200160405280600081525090506200039b565b600060405180606001604052806040815260200162003b0760409139905060006003600285516200026991906200066c565b620002759190620006c9565b600462000283919062000701565b905060006020826200029691906200066c565b67ffffffffffffffff811115620002b257620002b1620008cf565b5b6040519080825280601f01601f191660200182016040528015620002e55781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101562000356576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050620002f9565b60038951066001811462000373576002811462000384576200038f565b613d3d60f01b60028303526200038f565b603d60f81b60018303525b50505050508093505050505b919050565b828054620003ae90620007d6565b90600052602060002090601f016020900481019282620003d257600085556200041e565b82601f10620003ed57805160ff19168380011785556200041e565b828001600101855582156200041e579182015b828111156200041d57825182559160200191906001019062000400565b5b5090506200042d919062000431565b5090565b5b808211156200044c57600081600090555060010162000432565b5090565b600062000467620004618462000620565b620005f7565b90508281526020810184848401111562000486576200048562000903565b5b62000493848285620007a0565b509392505050565b600081519050620004ac8162000923565b92915050565b600082601f830112620004ca57620004c9620008fe565b5b8151620004dc84826020860162000450565b91505092915050565b6000806000606084860312156200050157620005006200090d565b5b600062000511868287016200049b565b935050602084015167ffffffffffffffff81111562000535576200053462000908565b5b6200054386828701620004b2565b925050604084015167ffffffffffffffff81111562000567576200056662000908565b5b6200057586828701620004b2565b9150509250925092565b60006200058c8262000656565b62000598818562000661565b9350620005aa818560208601620007a0565b80840191505092915050565b6000620005c482846200057f565b915081905092915050565b6000620005dd82856200057f565b9150620005eb82846200057f565b91508190509392505050565b60006200060362000616565b90506200061182826200080c565b919050565b6000604051905090565b600067ffffffffffffffff8211156200063e576200063d620008cf565b5b620006498262000912565b9050602081019050919050565b600081519050919050565b600081905092915050565b6000620006798262000796565b9150620006868362000796565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006be57620006bd62000842565b5b828201905092915050565b6000620006d68262000796565b9150620006e38362000796565b925082620006f657620006f562000871565b5b828204905092915050565b60006200070e8262000796565b91506200071b8362000796565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000757576200075662000842565b5b828202905092915050565b60006200076f8262000776565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620007c0578082015181840152602081019050620007a3565b83811115620007d0576000848401525b50505050565b60006002820490506001821680620007ef57607f821691505b60208210811415620008065762000805620008a0565b5b50919050565b620008178262000912565b810181811067ffffffffffffffff82111715620008395762000838620008cf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200092e8162000762565b81146200093a57600080fd5b50565b60805160601c6131a46200096360003960008181610ae00152610bc101526131a46000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636e02007d116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063d77843c51461038f578063e4e65b0c146103ad578063e985e9c5146103dd5761012c565b80636e02007d1461029d57806370a08231146102bb57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636bed54601461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190612119565b61040d565b604051610158919061267e565b60405180910390f35b6101696104ef565b60405161017691906126cf565b60405180910390f35b610199600480360381019061019491906121e9565b610581565b6040516101a69190612617565b60405180910390f35b6101c960048036038101906101c491906120d9565b6105c7565b005b6101e560048036038101906101e09190612173565b6106df565b005b61020160048036038101906101fc9190611fc3565b61075c565b005b61021d600480360381019061021891906121a0565b6107bc565b60405161022a91906126cf565b60405180910390f35b61024d60048036038101906102489190611fc3565b61084f565b005b610269600480360381019061026491906121e9565b61086f565b6040516102769190612617565b60405180910390f35b6102876108f6565b60405161029491906126cf565b60405180910390f35b6102a5610988565b6040516102b29190612851565b60405180910390f35b6102d560048036038101906102d09190611f56565b610992565b6040516102e29190612851565b60405180910390f35b6102f3610a4a565b60405161030091906126cf565b60405180910390f35b610311610adc565b60405161031e9190612699565b60405180910390f35b610341600480360381019061033c9190612099565b610b04565b005b61035d60048036038101906103589190612016565b610b1a565b005b610379600480360381019061037491906121e9565b610b7c565b60405161038691906126cf565b60405180910390f35b610397610dfc565b6040516103a491906126cf565b60405180910390f35b6103c760048036038101906103c291906121e9565b610e8e565b6040516103d491906126b4565b60405180910390f35b6103f760048036038101906103f29190611f83565b610ea6565b604051610404919061267e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110b3565b5b9050919050565b6060600080546104fe90612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90612b57565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c8261111d565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d28261086f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90612811565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611168565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611168565b610ea6565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612831565b60405180910390fd5b6106da8383611170565b505050565b806009600060065481526020019081526020016000208190555061070533600654611229565b6001600660008282546107189190612936565b925050819055506006547f25fe3a996149ce0f27840bd9ec024ac39e95985c0d3974c4fcaaed30903b56788260405161075191906126b4565b60405180910390a250565b61076d610767611168565b82611247565b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a3906126f1565b60405180910390fd5b6107b78383836112dc565b505050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006108228460405160200161080e919061258c565b604051602081830303815290604052610f3a565b905081816040516020016108379291906125a3565b60405160208183030381529060405292505050919050565b61086a83838360405180602001604052806000815250610b1a565b505050565b60008061087b836115d6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e4906127f1565b60405180910390fd5b80915050919050565b60606007805461090590612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461093190612b57565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b5050505050905090565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa906127b1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610a5990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8590612b57565b8015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b16610b0f611168565b8383611613565b5050565b610b2b610b25611168565b83611247565b610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906126f1565b60405180910390fd5b610b7684848484611780565b50505050565b6060610b87826117dc565b610bbd576040517ff565855900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612216565b505050915050600060078054610c7290612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90612b57565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905060096000858152602001908152602001600020548212610d9a5760088054610d1990612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590612b57565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050505090505b610da261181d565b610dd3610dad6104ef565b83604051602001610dbf9291906125c7565b604051602081830303815290604052610f3a565b604051602001610de49291906125a3565b60405160208183030381529060405292505050919050565b606060088054610e0b90612b57565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612b57565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b5050505050905090565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610f5d576040518060200160405280600081525090506110ae565b600060405180606001604052806040815260200161312f6040913990506000600360028551610f8c9190612936565b610f96919061298c565b6004610fa291906129bd565b90506000602082610fb39190612936565b67ffffffffffffffff811115610fcc57610fcb612c47565b5b6040519080825280601f01601f191660200182016040528015610ffe5781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561106d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050611012565b6003895106600181146110875760028114611097576110a2565b613d3d60f01b60028303526110a2565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611126816117dc565b611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c906127f1565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111e38361086f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61124382826040518060200160405280600081525061185a565b5050565b6000806112538361086f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061129557506112948185610ea6565b5b806112d357508373ffffffffffffffffffffffffffffffffffffffff166112bb84610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166112fc8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134990612731565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990612771565b60405180910390fd5b6113cf83838360016118b5565b8273ffffffffffffffffffffffffffffffffffffffff166113ef8261086f565b73ffffffffffffffffffffffffffffffffffffffff1614611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c90612731565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115d183838360016119db565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167990612791565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611773919061267e565b60405180910390a3505050565b61178b8484846112dc565b611797848484846119e1565b6117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90612711565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117fe836115d6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6118648383611b78565b61187160008484846119e1565b6118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a790612711565b60405180910390fd5b505050565b60018111156119d557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119495780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119419190612a17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119d45780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119cc9190612936565b925050819055505b5b50505050565b50505050565b6000611a028473ffffffffffffffffffffffffffffffffffffffff16611d96565b15611b6b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a2b611168565b8786866040518563ffffffff1660e01b8152600401611a4d9493929190612632565b602060405180830381600087803b158015611a6757600080fd5b505af1925050508015611a9857506040513d601f19601f82011682018060405250810190611a959190612146565b60015b611b1b573d8060008114611ac8576040519150601f19603f3d011682016040523d82523d6000602084013e611acd565b606091505b50600081511415611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a90612711565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b70565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdf906127d1565b60405180910390fd5b611bf1816117dc565b15611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612751565b60405180910390fd5b611c3f6000838360016118b5565b611c48816117dc565b15611c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7f90612751565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d926000838360016119db565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611dcc611dc784612891565b61286c565b905082815260208101848484011115611de857611de7612c7b565b5b611df3848285612b15565b509392505050565b6000611e0e611e09846128c2565b61286c565b905082815260208101848484011115611e2a57611e29612c7b565b5b611e35848285612b15565b509392505050565b600081359050611e4c816130a4565b92915050565b600081359050611e61816130bb565b92915050565b600081359050611e76816130d2565b92915050565b600081519050611e8b816130d2565b92915050565b600082601f830112611ea657611ea5612c76565b5b8135611eb6848260208601611db9565b91505092915050565b600081359050611ece816130e9565b92915050565b600081519050611ee3816130e9565b92915050565b600082601f830112611efe57611efd612c76565b5b8135611f0e848260208601611dfb565b91505092915050565b600081359050611f2681613100565b92915050565b600081519050611f3b81613100565b92915050565b600081519050611f5081613117565b92915050565b600060208284031215611f6c57611f6b612c85565b5b6000611f7a84828501611e3d565b91505092915050565b60008060408385031215611f9a57611f99612c85565b5b6000611fa885828601611e3d565b9250506020611fb985828601611e3d565b9150509250929050565b600080600060608486031215611fdc57611fdb612c85565b5b6000611fea86828701611e3d565b9350506020611ffb86828701611e3d565b925050604061200c86828701611f17565b9150509250925092565b600080600080608085870312156120305761202f612c85565b5b600061203e87828801611e3d565b945050602061204f87828801611e3d565b935050604061206087828801611f17565b925050606085013567ffffffffffffffff81111561208157612080612c80565b5b61208d87828801611e91565b91505092959194509250565b600080604083850312156120b0576120af612c85565b5b60006120be85828601611e3d565b92505060206120cf85828601611e52565b9150509250929050565b600080604083850312156120f0576120ef612c85565b5b60006120fe85828601611e3d565b925050602061210f85828601611f17565b9150509250929050565b60006020828403121561212f5761212e612c85565b5b600061213d84828501611e67565b91505092915050565b60006020828403121561215c5761215b612c85565b5b600061216a84828501611e7c565b91505092915050565b60006020828403121561218957612188612c85565b5b600061219784828501611ebf565b91505092915050565b6000602082840312156121b6576121b5612c85565b5b600082013567ffffffffffffffff8111156121d4576121d3612c80565b5b6121e084828501611ee9565b91505092915050565b6000602082840312156121ff576121fe612c85565b5b600061220d84828501611f17565b91505092915050565b600080600080600060a0868803121561223257612231612c85565b5b600061224088828901611f41565b955050602061225188828901611ed4565b945050604061226288828901611f2c565b935050606061227388828901611f2c565b925050608061228488828901611f41565b9150509295509295909350565b61229a81612a4b565b82525050565b6122a981612a5d565b82525050565b60006122ba826128f3565b6122c48185612909565b93506122d4818560208601612b24565b6122dd81612c8a565b840191505092915050565b6122f181612adf565b82525050565b61230081612a95565b82525050565b6000612311826128fe565b61231b818561291a565b935061232b818560208601612b24565b61233481612c8a565b840191505092915050565b600061234a826128fe565b612354818561292b565b9350612364818560208601612b24565b80840191505092915050565b600061237d602d8361291a565b915061238882612c9b565b604082019050919050565b60006123a060098361292b565b91506123ab82612cea565b600982019050919050565b60006123c360328361291a565b91506123ce82612d13565b604082019050919050565b60006123e660258361291a565b91506123f182612d62565b604082019050919050565b6000612409601c8361291a565b915061241482612db1565b602082019050919050565b600061242c60248361291a565b915061243782612dda565b604082019050919050565b600061244f60198361291a565b915061245a82612e29565b602082019050919050565b600061247260298361291a565b915061247d82612e52565b604082019050919050565b600061249560448361292b565b91506124a082612ea1565b604482019050919050565b60006124b860028361292b565b91506124c382612f16565b600282019050919050565b60006124db60208361291a565b91506124e682612f3f565b602082019050919050565b60006124fe60188361291a565b915061250982612f68565b602082019050919050565b600061252160218361291a565b915061252c82612f91565b604082019050919050565b6000612544603d8361291a565b915061254f82612fe0565b604082019050919050565b600061256760438361292b565b91506125728261302f565b604382019050919050565b61258681612abf565b82525050565b6000612598828461233f565b915081905092915050565b60006125af828561233f565b91506125bb828461233f565b91508190509392505050565b60006125d282612393565b91506125de828561233f565b91506125e982612488565b91506125f48261255a565b9150612600828461233f565b915061260b826124ab565b91508190509392505050565b600060208201905061262c6000830184612291565b92915050565b60006080820190506126476000830187612291565b6126546020830186612291565b612661604083018561257d565b818103606083015261267381846122af565b905095945050505050565b600060208201905061269360008301846122a0565b92915050565b60006020820190506126ae60008301846122e8565b92915050565b60006020820190506126c960008301846122f7565b92915050565b600060208201905081810360008301526126e98184612306565b905092915050565b6000602082019050818103600083015261270a81612370565b9050919050565b6000602082019050818103600083015261272a816123b6565b9050919050565b6000602082019050818103600083015261274a816123d9565b9050919050565b6000602082019050818103600083015261276a816123fc565b9050919050565b6000602082019050818103600083015261278a8161241f565b9050919050565b600060208201905081810360008301526127aa81612442565b9050919050565b600060208201905081810360008301526127ca81612465565b9050919050565b600060208201905081810360008301526127ea816124ce565b9050919050565b6000602082019050818103600083015261280a816124f1565b9050919050565b6000602082019050818103600083015261282a81612514565b9050919050565b6000602082019050818103600083015261284a81612537565b9050919050565b6000602082019050612866600083018461257d565b92915050565b6000612876612887565b90506128828282612b89565b919050565b6000604051905090565b600067ffffffffffffffff8211156128ac576128ab612c47565b5b6128b582612c8a565b9050602081019050919050565b600067ffffffffffffffff8211156128dd576128dc612c47565b5b6128e682612c8a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061294182612abf565b915061294c83612abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561298157612980612bba565b5b828201905092915050565b600061299782612abf565b91506129a283612abf565b9250826129b2576129b1612be9565b5b828204905092915050565b60006129c882612abf565b91506129d383612abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a0c57612a0b612bba565b5b828202905092915050565b6000612a2282612abf565b9150612a2d83612abf565b925082821015612a4057612a3f612bba565b5b828203905092915050565b6000612a5682612a9f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000612aea82612af1565b9050919050565b6000612afc82612b03565b9050919050565b6000612b0e82612a9f565b9050919050565b82818337600083830152505050565b60005b83811015612b42578082015181840152602081019050612b27565b83811115612b51576000848401525b50505050565b60006002820490506001821680612b6f57607f821691505b60208210811415612b8357612b82612c18565b5b50919050565b612b9282612c8a565b810181811067ffffffffffffffff82111715612bb157612bb0612c47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b6130ad81612a4b565b81146130b857600080fd5b50565b6130c481612a5d565b81146130cf57600080fd5b50565b6130db81612a69565b81146130e657600080fd5b50565b6130f281612a95565b81146130fd57600080fd5b50565b61310981612abf565b811461311457600080fd5b50565b61312081612ac9565b811461312b57600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212202e00bf91f579284a99dfdab8f5e4717fadd331e1808d8c5e04ca5554c529ae1764736f6c634300080700334142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f000000000000000000000000d4a33860578de61dbabdc8bfdb98fd742fa7028e000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004c0000000000000000000000000000000000000000000000000000000000000043a3c3f786d6c2076657273696f6e3d22312e3022207374616e64616c6f6e653d226e6f223f3e0a3c7376672077696474683d2231303234707822206865696768743d22313032347078222076696577426f783d22302030203130323420313032342220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e0a20203c706174682066696c6c3d22233333332220643d224d353132203634433236342e36203634203634203236342e3620363420353132733230302e36203434382034343820343438203434382d3230302e36203434382d343438533735392e34203634203531322036347a6d3020383230632d3230352e3420302d3337322d3136362e362d3337322d333732733136362e362d333732203337322d33373220333732203136362e3620333732203337322d3136362e36203337322d333732203337327a222f3e0a20203c706174682066696c6c3d22234536453645362220643d224d35313220313430632d3230352e3420302d333732203136362e362d33373220333732733136362e36203337322033373220333732203337322d3136362e36203337322d3337322d3136362e362d3337322d3337322d3337327a4d323838203432316134382e30312034382e303120302030203120393620302034382e30312034382e30312030203020312d393620307a6d33373620323732682d34382e31632d342e3220302d372e382d332e322d382e312d372e3443363034203633362e31203536322e35203539372035313220353937732d39322e312033392e312d39352e382038382e36632d2e3320342e322d332e3920372e342d382e3120372e3448333630613820382030203020312d382d382e3463342e342d38342e332037342e352d3135312e36203136302d3135312e36733135352e362036372e3320313630203135312e36613820382030203020312d3820382e347a6d32342d3232346134382e30312034382e303120302030203120302d39362034382e30312034382e303120302030203120302039367a222f3e0a20203c706174682066696c6c3d22233333332220643d224d3238382034323161343820343820302031203020393620302034382034382030203120302d393620307a6d32323420313132632d38352e3520302d3135352e362036372e332d313630203135312e3661382038203020302030203820382e346834382e3163342e32203020372e382d332e3220382e312d372e3420332e372d34392e352034352e332d38382e362039352e382d38382e367339322033392e312039352e382038382e36632e3320342e3220332e3920372e3420382e3120372e34483636346138203820302030203020382d382e34433636372e36203630302e33203539372e352035333320353132203533337a6d3132382d31313261343820343820302031203020393620302034382034382030203120302d393620307a222f3e0a3c2f7376673e0a00000000000000000000000000000000000000000000000000000000000000000000000001843c7376672076696577426f783d223020302032303020323030222077696474683d223430302220206865696768743d223430302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e0a20203c636972636c652063783d22313030222063793d22313030222066696c6c3d2279656c6c6f772220723d22373822207374726f6b653d22626c61636b22207374726f6b652d77696474683d2233222f3e0a20203c6720636c6173733d2265796573223e0a202020203c636972636c652063783d223631222063793d2238322220723d223132222f3e0a202020203c636972636c652063783d22313237222063793d2238322220723d223132222f3e0a20203c2f673e0a20203c7061746820643d226d3133362e3831203131362e3533632e36392032362e31372d36342e31312034322d38312e35322d2e373322207374796c653d2266696c6c3a6e6f6e653b207374726f6b653a20626c61636b3b207374726f6b652d77696474683a20333b222f3e0a3c2f7376673e00000000000000000000000000000000000000000000000000000000",
      "r": "0x7a7234075613a142786318511b34eef2ccbdaf4174a56123d1af95256617993d",
      "s": "0x37d40416d2962f853f5659c9fa419836b73ca2e17d932b285258789cde469749",
      "v": 45,
      "chainId": 5
    }
  }
}